{
    "dislikes": 15,
    "video": "HGk_ypEuS24",
    "publishedOn": "Sun Mar 24 2024 22:09:34 GMT+0530 (India Standard Time)",
    "slug": "selection-sort-algorithm",
    "aid": "1525",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/selection-sort",
    "title": "Selection Sort Algorithm",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "sorting",
            "topic-title": "Sorting"
        }
    ],
    "category_tag": "sorting",
    "likes": 1179,
    "preview": "Problem Statement: Given an array of N integers, write a program to implement the Selection sorting algorithm. Examples: Example 1: Input: N = 6, array[] = {13,46,24,52,20,9} Output: 9,13,20,24,46,...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong>&nbsp;Given an array of <strong>N integers</strong>, write a program to implement the Selection sorting algorithm.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Examples:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> N = 6, array[] = {13,46,24,52,20,9}\n<strong>Output:</strong> 9,13,20,24,46,52\n<strong>Explanation: </strong>After sorting the array is: 9, 13, 20, 24, 46, 52\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> N=5, array[] = {5,4,3,2,1}\n<strong>Output:</strong> 1,2,3,4,5\n<strong>Explanation: </strong>After sorting the array is: 1, 2, 3, 4, 5</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Solution</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Disclaimer</em></strong>: <em>Don't jump directly to the solution, try it out yourself first.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The algorithm steps are as follows:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>First, we will select the range of the unsorted array using a loop (say i) that indicates the starting index of the range.<br>The loop will run forward from 0 to n-1. The value i = 0 means the range is from 0 to n-1, and similarly, i = 1 means the range is from 1 to n-1, and so on.<br>(<em>Initially, the range will be the whole array starting from the first index.</em>)</li><li>Now, in each iteration, we will select the minimum element from the range of the unsorted array using an inner loop.</li><li>After that, we will swap the minimum element with the first element of the selected range(<em>in step 1</em>).&nbsp;</li><li>Finally, after each iteration, we will find that the array is sorted up to the first index of the range.&nbsp;</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Note: </strong><em>Here, after each iteration, the array becomes sorted up to the first index of the range. That is why the starting index of the range increases by 1 after each iteration. This increment is achieved by the outer loop and the starting index is represented by variable </em><strong><em>i</em></strong><em> in the following code. And the inner loop(</em><strong><em>i.e. j</em></strong><em>) helps to find the minimum element of the range </em><strong>[i\u2026..n-1].</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Dry run:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The following dry run will clarify the concepts:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Assume the given array is: {7, 5, 9, 2, 8}</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Outer loop iteration 1: <br></strong>The range will be the whole array starting from the 1st index as this is the first iteration. The minimum element of this range is 2(<strong>found using the inner loop</strong>).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7880,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/03/Screenshot-2023-03-13-223901.png\" alt=\"\" class=\"wp-image-7880\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>Outer loop iteration 2: <br></strong>The range will be from the <strong>[2nd index to the last index]</strong> as the array is sorted up to the first index. The minimum element of this range is 5(<strong>found using the inner loop</strong>).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7881,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/03/Screenshot-2023-03-13-224021.png\" alt=\"\" class=\"wp-image-7881\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>Outer loop iteration 3: <br></strong>The range will be from the <strong>[3rd index to the last index]</strong>. The minimum element of this range is 7(<strong>found using the inner loop</strong>).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7884,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/03/Screenshot-2023-03-13-225729.png\" alt=\"\" class=\"wp-image-7884\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>Outer loop iteration 4: <br></strong>The range will be from the <strong>[4th index to the last index]</strong>. The minimum element of this range is 8(<strong>found using the inner loop</strong>).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7885,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/03/Screenshot-2023-03-13-225822.png\" alt=\"\" class=\"wp-image-7885\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>So, after 4 iterations(i.e. n-1 iterations where n = size of the array), the given array is sorted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\nvoid selection_sort(int arr[], int n) {\n  // selection sort\n  for (int i = 0; i &lt; n - 1; i++) {\n    int mini = i;\n    for (int j = i + 1; j &lt; n; j++) {\n      if (arr[j] &lt; arr[mini]) {\n        mini = j;\n      }\n    }\n    int temp = arr[mini];\n    arr[mini] = arr[i];\n    arr[i] = temp;\n  }\n\n  cout &lt;&lt; \"After selection sort: \" &lt;&lt; \"\\n\";\n  for (int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; arr[i] &lt;&lt; \" \";\n  }\n  cout &lt;&lt; \"\\n\";\n\n}\nint main() {\n  int arr[] = {13,46,24,52,20,9};\n  int n = sizeof(arr) / sizeof(arr[0]);\n   cout &lt;&lt; \"Before selection sort: \" &lt;&lt; \"\\n\";\n   for (int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; arr[i] &lt;&lt; \" \";\n  }\n  cout &lt;&lt; \"\\n\";\n  selection_sort(arr, n);\n  return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Before selection sort:<br>13 46 24 52 20 9<br>After selection sort:<br>9 13 20 24 46 52</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong><strong>Time complexity:</strong> </strong>O(N<sup>2</sup>), (where N = size of the array), for the best, worst, and average cases.<br>Reason: If we carefully observe, we can notice that the outer loop, say i, is running from 0 to n-2 i.e. n-1 times, and for each i, the inner loop j runs from i to n-1. For, i = 0, the inner loop runs n-1 times, for i = 1, the inner loop runs n-2 times, and so on. So, the total steps will be approximately the following: (n-1) + (n-2) + (n-3) + \u2026\u2026..+ 3 + 2 + 1. The summation is approximately the sum of the first n natural numbers i.e. (n*(n+1))/2. The precise time complexity will be O(n<sup>2</sup>/2 + n/2). Previously, we have learned that we can ignore the lower values as well as the constant coefficients. So, the time complexity is O(n<sup>2</sup>). Here the value of n is N i.e. the size of the array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.*;\n\npublic class tUf {\n    static void selection_sort(int arr[], int n) {\n        for (int i = 0; i &lt; n - 1; i++) {\n            int mini = i;\n            for (int j = i + 1; j &lt; n; j++) {\n                if (arr[j] &lt; arr[mini]) {\n                    mini = j;\n                }\n            }\n            //swap\n            int temp = arr[mini];\n            arr[mini] = arr[i];\n            arr[i] = temp;\n        }\n\n        System.out.println(\"After selection sort:\");\n        for (int i = 0; i &lt; n; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.println();\n    }\n\n    public static void main(String args[]) {\n\n        int arr[] = {13, 46, 24, 52, 20, 9};\n        int n = arr.length;\n        System.out.println(\"Before selection sort:\");\n        for (int i = 0; i &lt; n; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.println();\n        selection_sort(arr, n);\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Before selection sort:<br>13 46 24 52 20 9<br>After selection sort:<br>9 13 20 24 46 52</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong><strong>Time complexity:</strong> </strong>O(N<sup>2</sup>), (where N = size of the array), for the best, worst, and average cases.<br>Reason: If we carefully observe, we can notice that the outer loop, say i, is running from 0 to n-2 i.e. n-1 times, and for each i, the inner loop j runs from i to n-1. For, i = 0, the inner loop runs n-1 times, for i = 1, the inner loop runs n-2 times, and so on. So, the total steps will be approximately the following: (n-1) + (n-2) + (n-3) + \u2026\u2026..+ 3 + 2 + 1. The summation is approximately the sum of the first n natural numbers i.e. (n*(n+1))/2. The precise time complexity will be O(n<sup>2</sup>/2 + n/2). Previously, we have learned that we can ignore the lower values as well as the constant coefficients. So, the time complexity is O(n<sup>2</sup>). Here the value of n is N i.e. the size of the array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;<strong><a href=\"https://www.linkedin.com/in/rishirajgirmal/\" target=\"_blank\" rel=\"noreferrer noopener\">Rishiraj Girmal</a></strong>&nbsp;<em>and&nbsp;<em>&nbsp;<strong><a href=\"https://www.linkedin.com/in/kriti39/\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>KRITIDIPTA GHOSH</strong></a></strong></em></em></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}