{
    "dislikes": 11,
    "video": "Mo33MjjMlyA",
    "publishedOn": "Sun Mar 24 2024 22:09:19 GMT+0530 (India Standard Time)",
    "slug": "count-maximum-consecutive-ones-in-the-array",
    "aid": "1455",
    "title": "Count Maximum Consecutive One's in the array",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/maximum-consecutive-ones",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        }
    ],
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> Given an array that contains<strong> only 1 and 0 </strong>return the count of<strong> maximum consecutive</strong> ones in the array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Examples:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n\n<strong>Input:</strong> prices = {1, 1, 0, 1, 1, 1}\n\n<strong>Output:</strong> 3\n\n<strong>Explanation</strong>: There are two consecutive 1\u2019s and three consecutive 1\u2019s in the array out of which maximum is 3.\n\n<strong>Input:</strong> prices = {1, 0, 1, 1, 0, 1} \n\n<strong>Output:</strong> 2\n\n<strong>Explanation:</strong> There are two consecutive 1's in the array. \n</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution</strong>:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph {\"textColor\":\"vivid-red\"} -->\n<p class=\"has-vivid-red-color has-text-color\"><strong><em>Disclaimer</em></strong>: <em>Don't jump directly to the solution, try it out yourself first.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach</strong>:&nbsp; We maintain a<strong> variable count</strong> that keeps a track of the number of consecutive 1\u2019s while traversing the array. The other variable max_count maintains the maximum number of 1\u2019s, in other words, it maintains the answer.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We start traversing from the beginning of the array. Since we can encounter either a 1 or 0 there can be two situations:-</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>If&nbsp; the value at the current index is equal to 1 we <strong>increase the value of count by one.</strong> After updating&nbsp; the count variable if it becomes <strong>more</strong> than the max_count&nbsp; <strong>update the max_count.</strong></li><li>If the value at the current index is equal to zero we make the <strong>variable count as 0</strong> since there are<strong> no more consecutive ones</strong>.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>&nbsp;</strong><em>See the illustration below for a better understanding</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong><img width=\"641.1355476379395\" height=\"585.8834965229034\" src=\"https://lh4.googleusercontent.com/jdtAj9i18FEeRLlEcD1XqQ-b0h5qCKef-xuuOLbUQ3CEe8k2HBibyjAXsCyghh2CCxccGWm1K3w15uqzZ1LpmJIFOXD8UTrFK1Pvn4Anm4sThJ1Gxa7cEcpYLfofnQYpyxlQvpE1\"></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nclass Solution {\n  public:\n    int findMaxConsecutiveOnes(vector &lt; int &gt; &amp; nums) {\n      int cnt = 0;\n      int maxi = 0;\n      for (int i = 0; i &lt; nums.size(); i++) {\n        if (nums[i] == 1) {\n          cnt++;\n        } else {\n          cnt = 0;\n        }\n\n        maxi = max(maxi, cnt);\n      }\n      return maxi;\n    }\n};\n\nint main() {\n  vector &lt; int &gt; nums = { 1, 1, 0, 1, 1, 1 };\n  Solution obj;\n  int ans = obj.findMaxConsecutiveOnes(nums);\n  cout &lt;&lt; \"The maximum  consecutive 1's are \" &lt;&lt; ans;\n  return 0;\n}</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output: </strong>The maximum consecutive 1\u2019s are 3.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N) since the solution involves only a single pass.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1) because no extra space is used.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.*;\npublic class Main {\n    static int findMaxConsecutiveOnes(int nums[]) {\n        int cnt = 0;\n        int maxi = 0;\n        for (int i = 0; i &lt; nums.length; i++) {\n            if (nums[i] == 1) {\n                cnt++;\n            } else {\n                cnt = 0;\n            }\n\n            maxi = Math.max(maxi, cnt);\n        }\n        return maxi;\n    }\n    public static void main(String args[]) {\n        int nums[] = { 1, 1, 0, 1, 1, 1 };\n        int ans = findMaxConsecutiveOnes(nums);\n        System.out.println(\"The maximum  consecutive 1's are \" + ans);\n    }\n}</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output: </strong>The maximum consecutive 1\u2019s are 3.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N) since the solution involves only a single pass.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1) because no extra space is used.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">from typing import List\n\n\n\n\nclass Solution:\n    def findMaxConsecutiveOnes(self, nums: List[int]) -> int:\n        cnt = 0\n        maxi = 0\n        for i in range(len(nums)):\n            if nums[i] == 1:\n                cnt += 1\n            else:\n                cnt = 0\n            maxi = max(maxi, cnt)\n        return maxi\n\n\n\n\nif __name__ == \"__main__\":\n    nums = [1, 1, 0, 1, 1, 1]\n    obj = Solution()\n    ans = obj.findMaxConsecutiveOnes(nums)\n    print(\"The maximum  consecutive 1's are\", ans)</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output: </strong>The maximum consecutive 1\u2019s are 3.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N) since the solution involves only a single pass.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1) because no extra space is used.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to\u00a0<strong><a href=\"https://www.linkedin.com/in/somparna-c-a724a5121/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"><strong>Somparna Chakrabarti</strong></a></strong>\u00a0<em><em><strong>and\u00a0<em><a href=\"https://www.linkedin.com/in/imsudip/\" target=\"_blank\" rel=\"noreferrer noopener\">Sudip Ghosh</a></em></strong></em></em></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->",
    "category_tag": "data-structure",
    "likes": 488,
    "preview": "Problem Statement: Given an array that contains only 1 and 0 return the count of maximum consecutive ones in the array. Examples: Example 1: Input: prices = {1, 1, 0, 1, 1, 1} Output: 3 Explanation..."
}