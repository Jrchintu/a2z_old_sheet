{
    "dislikes": 25,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:35 GMT+0530 (India Standard Time)",
    "slug": "find-second-smallest-and-second-largest-element-in-an-array",
    "aid": "1529",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/second-largest-element",
    "title": "Find Second Smallest and Second Largest Element in an array",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        }
    ],
    "likes": 897,
    "category_tag": "data-structure",
    "preview": "Problem Statement: Given an array, find the second smallest and second largest element in the array. Print \u2018-1\u2019 in the event that either of them doesn\u2019t exist. Examples Example 1: Input: [1,2,4,7,7...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> Given an array, find the second smallest and second largest element in the array. Print \u2018-1\u2019 in the event that either of them doesn\u2019t exist.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\"><!-- Insert New Examples Here -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> [1,2,4,7,7,5]\n<strong>Output:</strong> Second Smallest : 2\n\tSecond Largest : 5\n<strong>Explanation:</strong> The elements are as follows 1,2,3,5,7,7 and hence second largest of these is 5 and second smallest is 2\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> [1]\n<strong>Output:</strong> Second Smallest : -1\n\tSecond Largest : -1\n<strong>Explanation:</strong> Since there is only one element in the array, it is the largest and smallest element present in the array. There is no second largest or second smallest element present.\n</pre>\n</pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Practice Section-->\n<div class=\"practice\">\n<span><strong>Practice: </strong></span>\n<div class=\"problem-buttons\">\n\n<!-- Add Problem Link inside href -->\n<a href=\"https://bit.ly/3OaPohF\" target=\"_blank\" rel=\"noopener\">\n<span>Solve Problem</span>\n<img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Group-11-5.png\" alt=\"code-studio\">\n</a>\n</div>\n</div>\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out\nyourself first. </em></p>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<div class=\"horizontal_navbar_dsa_article\">\n<div class=\"grid_container_three\">\n<a href=\"#brute-force-approach\" class=\"three-boxes box-a\">\nBrute-Force Approach\n</a>\n<a href=\"#better-approach\" class=\"three-boxes box-b\">\nBetter Approach\n</a>\n<a href=\"#optimal-approach\" class=\"three-boxes box-c\">\nOptimal Approach\n</a>\n<a href=\"#dsa_article_video_explanation\" class=\"three-boxes box-d\">\n<svg width=\"26\" height=\"26\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8 10L13.19 7L8 4V10ZM19.56 2.17C19.69 2.64 19.78 3.27 19.84 4.07C19.91 4.87 19.94 5.56 19.94 6.16L20 7C20 9.19 19.84 10.8 19.56 11.83C19.31 12.73 18.73 13.31 17.83 13.56C17.36 13.69 16.5 13.78 15.18 13.84C13.88 13.91 12.69 13.94 11.59 13.94L10 14C5.81 14 3.2 13.84 2.17 13.56C1.27 13.31 0.69 12.73 0.44 11.83C0.31 11.36 0.22 10.73 0.16 9.93C0.0900001 9.13 0.0599999 8.44 0.0599999 7.84L0 7C0 4.81 0.16 3.2 0.44 2.17C0.69 1.27 1.27 0.69 2.17 0.44C2.64 0.31 3.5 0.22 4.82 0.16C6.12 0.0899998 7.31 0.0599999 8.41 0.0599999L10 0C14.19 0 16.8 0.16 17.83 0.44C18.73 0.69 19.31 1.27 19.56 2.17Z\" fill=\"red\"></path>\n</svg>\n\n</a>\n<div class=\"box-e tooltip\">\n<svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.842 9.25L11.9577 10.17C11.2502 10.89 10.8081 11.5 10.8081 13H8.84297V12.5C8.84297 11.39 9.28511 10.39 9.99255 9.67L11.2109 8.41C11.5745 8.05 11.7906 7.55 11.7906 7C11.7906 6.46957 11.5836 5.96086 11.2151 5.58579C10.8465 5.21071 10.3467 5 9.82552 5C9.30434 5 8.80451 5.21071 8.43598 5.58579C8.06745 5.96086 7.86041 6.46957 7.86041 7H5.89531C5.89531 5.93913 6.30938 4.92172 7.04644 4.17157C7.7835 3.42143 8.78316 3 9.82552 3C10.8679 3 11.8675 3.42143 12.6046 4.17157C13.3417 4.92172 13.7557 5.93913 13.7557 7C13.7543 7.84324 13.4259 8.65183 12.842 9.25ZM10.8081 17H8.84297V15H10.8081M9.82552 0C8.53521 0 7.25754 0.258658 6.06545 0.761205C4.87337 1.26375 3.79021 2.00035 2.87783 2.92893C1.03519 4.8043 0 7.34784 0 10C0 12.6522 1.03519 15.1957 2.87783 17.0711C3.79021 17.9997 4.87337 18.7362 6.06545 19.2388C7.25754 19.7413 8.53521 20 9.82552 20C12.4314 20 14.9306 18.9464 16.7732 17.0711C18.6158 15.1957 19.651 12.6522 19.651 10C19.651 4.47 15.2296 0 9.82552 0Z\" fill=\"black\"></path>\n</svg>\n<div class=\"bottom\">\n<p>Expand any one approach by clicking the given options in the bar. Clicking one approach on bar,\ncloses all other expands. You can manually expand more than one approach at a time</p>\n<i></i>\n</div>\n\n</div>\n</div>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Approaches Drop-Down -->\n<div class=\"dsa_article_dropdown_approachs \">\n\n<!-- Brute Force Approach Starts from here -->\n<div id=\"brute-force-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBrute Force Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<h3><strong>Solution 1: (Brute Force)</strong> [this approach only works if there are no duplicates] </h3>\n<h3><strong>Intuition:</strong> </h3>\n<p>What do we do to find the largest or the smallest element present in an array? We ideally sort them and the first element would be the smallest of all while the last element would be the largest. Can we find the second-smallest and second-largest using a similar approach?</p>\n<h3><strong>Approach:</strong></h3>\n<ul><li>Sort the array in ascending order</li><li>The element present at the second index is the second smallest element</li><li>The element present at the second index from the end is the second largest element</li></ul>\n\n\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nvoid getElements(int arr[],int n)\n{\n    if(n==0 || n==1)\n        cout&lt;&lt;-1&lt;&lt;\" \"&lt;&lt;-1&lt;&lt;endl;  // edge case when only one element is present in array\n    sort(arr,arr+n);\n    int small=arr[1];\n    int large=arr[n-2];\n    cout&lt;&lt;\"Second smallest is \"&lt;&lt;small&lt;&lt;endl;\n    cout&lt;&lt;\"Second largest is \"&lt;&lt;large&lt;&lt;endl;\n}\nint main()\n{\n    int arr[]={1,2,4,6,7,5};\n    int n=sizeof(arr)/sizeof(arr[0]);\n    getElements(arr,n);\n    return 0;\n}\n\n\n</code>\n</pre>\n<p>\n</p><p><strong>Output: </strong></p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n<p></p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.io.*;\nimport java.util.Arrays;\nclass Test\n{\nstatic private void getElements(int[] arr, int n)\n{\n\tif (n == 0 || n==1)\n\t{\n\t\tSystem.out.print(-1);\n\t\tSystem.out.print(\" \");\n\t\tSystem.out.print(-1);\n\t\tSystem.out.print(\"\\n\");\n\t}\n\tArrays.sort(arr);\n\tint small = arr[1];\n\tint large = arr[n - 2];\n\tSystem.out.println(\"Second smallest is \"+small);\n\tSystem.out.println(\"Second largest is \"+large);\n}\npublic static void main(String[] args)\n{\n\tint[] arr = {1, 2, 4, 6, 7, 5};\n\tint n = arr.length;\n\tgetElements(arr, n);\n}\n}\n</code>\n</pre>\n<p>\n</p><p><strong>Output: </strong></p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n<p></p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\ndef getElements(arr, n):\n    if n == 0 or n == 1:\n        print(-1, -1)  # edge case when only one element is present in array\n    arr.sort()\n    small = arr[1]\n    large = arr[n-2]\n    print(\"Second smallest is\", small)\n    print(\"Second largest is\", large)\n\n\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 4, 6, 7, 5]\n    n = len(arr)\n    getElements(arr, n)\n</code>\n</pre>\n<p>\n</p><p><strong>Output: </strong></p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n\n<p></p>\n</div>\n<div class=\"code-block \" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\nfunction getElements(arr) {\n  if (arr.length === 0 || arr.length === 1) {\n    console.log(-1 + \" \" + -1); // Edge case when only one element is present in the array\n    return;\n  }\n\n  arr.sort((a, b) =&gt; a - b);\n  let small = arr[1];\n  let large = arr[arr.length - 2];\n  console.log(\"Second smallest is \" + small);\n  console.log(\"Second largest is \" + large);\n}\n\nconst arr = [1, 2, 4, 6, 7, 5];\ngetElements(arr);\n\n</code>\n</pre>\n<p>\n</p><p><strong>Output: </strong></p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n<p></p>\n</div>\n\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n</p><p><strong>Time Complexity: O(NlogN), For sorting the array</strong></p>\n<p><strong>Space Complexity: O(1)</strong></p>\n<p></p>\n</details>\n</div>\n</details>\n</div>\n<!-- Brute Force Approach Ends here -->\n\n\n<!-- Better Approach Starts from here -->\n\n<div id=\"better-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBetter Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<h2><strong>Solution 2(Better Solution)</strong></h2>\n<h3><strong>Intuition:</strong> </h3>\n<p>Even though we want to have just the second smallest and largest elements, we are still sorting the entire array for that and thus increasing the time complexity. Can we somehow try to not sort the array and still get our answer?</p>\n<h3><strong>Approach:</strong></h3>\n<ul><li>Find the smallest and largest element in the array in a single traversal</li><li>After this, we once again traverse the array and find an element that is just greater than the smallest element we just found.</li><li>Similarly, we would find the largest element which is just smaller than the largest element we just found</li><li>Indeed, this is our second smallest and second largest element.</li></ul>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nvoid getElements(int arr[],int n)\n{\n    if(n==0 || n==1)\n        cout&lt;&lt;-1&lt;&lt;\" \"&lt;&lt;-1&lt;&lt;endl;  // edge case when only one element is present in array\n    int small=INT_MAX,second_small=INT_MAX;\n    int large=INT_MIN,second_large=INT_MIN;\n    int i;\n    for(i=0;i&lt;n;i++)\n    {\n        small=min(small,arr[i]);\n        large=max(large,arr[i]);\n    }\n    for(i=0;i&lt;n;i++)\n    {\n        if(arr[i]&lt;second_small &amp;&amp; arr[i]!=small)\n            second_small=arr[i];\n        if(arr[i]&gt;second_large &amp;&amp; arr[i]!=large)\n            second_large=arr[i];\n    }\n\n    cout&lt;&lt;\"Second smallest is \"&lt;&lt;second_small&lt;&lt;endl;\n    cout&lt;&lt;\"Second largest is \"&lt;&lt;second_large&lt;&lt;endl;\n}\nint main()\n{\n    int arr[]={1,2,4,6,7,5};\n    int n=sizeof(arr)/sizeof(arr[0]);\n    getElements(arr,n);\n    return 0;\n}\n</code>\n</pre>\n<p>\n</p><p><strong>Output:</strong> </p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n\n<p></p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.io.*;\nimport java.util.Arrays;\nclass Test\n{\nstatic private void getElements(int[] arr, int n)\n{\nif (n == 0 || n==1)\n\t{\n\t\tSystem.out.print(-1);\n\t\tSystem.out.print(\" \");\n\t\tSystem.out.print(-1);\n\t\tSystem.out.print(\"\\n\");\n\t}\n\tint small = Integer.MAX_VALUE;\n\tint second_small = Integer.MAX_VALUE;\n\tint large = Integer.MIN_VALUE;\n\tint second_large = Integer.MIN_VALUE;\n\tint i;\n\tfor (i = 0;i &lt; n;i++)\n\t{\n\t\tsmall = Math.min(small,arr[i]);\n\t\tlarge = Math.max(large,arr[i]);\n\t}\n\tfor (i = 0;i &lt; n;i++)\n\t{\n\t\tif (arr[i] &lt; second_small &amp;&amp; arr[i] != small)\n\t\t{\n\t\t\tsecond_small = arr[i];\n\t\t}\n\t\tif (arr[i] &gt; second_large &amp;&amp; arr[i] != large)\n\t\t{\n\t\t\tsecond_large = arr[i];\n\t\t}\n\t}\n\n\tSystem.out.println(\"Second smallest is \"+second_small);\n\tSystem.out.println(\"Second largest is \"+second_large);\n}\npublic static void main(String[] args)\n{\n\tint[] arr = {1, 2, 4, 6, 7, 5};\n\tint n = arr.length;\n\tgetElements(arr, n);\n}\n}\n\n</code>\n</pre>\n<p>\n</p><p><strong>Output:</strong> </p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n<p></p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\ndef getElements(arr, n):\n    if n == 0 or n == 1:\n        print(-1, -1)  # edge case when only one element is present in array\n    small = float('inf')\n    second_small = float('inf')\n    large = float('-inf')\n    second_large = float('-inf')\n    for i in range(n):\n        small = min(small, arr[i])\n        large = max(large, arr[i])\n    for i in range(n):\n        if arr[i] &lt; second_small and arr[i] != small:\n            second_small = arr[i]\n        if arr[i] &gt; second_large and arr[i] != large:\n            second_large = arr[i]\n    print(\"Second smallest is\", second_small)\n    print(\"Second largest is\", second_large)\n\n\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 4, 6, 7, 5]\n    n = len(arr)\n    getElements(arr, n)\n\n</code>\n</pre>\n<p>\n</p><p><strong>Output:</strong> </p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n<p></p>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\nfunction getElements(arr) {\n  if (arr.length === 0 || arr.length === 1) {\n    console.log(-1 + \" \" + -1); // Edge case when only one element is present in the array\n    return;\n  }\n\n  let small = Infinity;\n  let second_small = Infinity;\n  let large = -Infinity;\n  let second_large = -Infinity;\n\n  for (let i = 0; i &lt; arr.length; i++) {\n    small = Math.min(small, arr[i]);\n    large = Math.max(large, arr[i]);\n  }\n\n  for (let i = 0; i &lt; arr.length; i++) {\n    if (arr[i] &lt; second_small &amp;&amp; arr[i] !== small)\n      second_small = arr[i];\n    if (arr[i] &gt; second_large &amp;&amp; arr[i] !== large)\n      second_large = arr[i];\n  }\n\n  console.log(\"Second smallest is \" + second_small);\n  console.log(\"Second largest is \" + second_large);\n}\n\nconst arr = [1, 2, 4, 6, 7, 5];\ngetElements(arr);\n</code>\n</pre>\n<p>\n</p><p><strong>Output:</strong> </p>\n<p>Second smallest is 2<br>Second largest is 6</p>\n\n\n<p></p>\n</div>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n</p><p><strong>Time Complexity: O(N), We do two linear traversals in our array</strong></p>\n<p><strong>Space Complexity: O(1)</strong></p>\n<p></p>\n</details>\n</div>\n</details>\n</div>\n<!-- Better Approach Ends from here -->\n\n\n<!-- Optimal Approach Starts from here -->\n\n<div id=\"optimal-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nOptimal Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<h3><strong>Solution 3(Best Solution)</strong></h3>\n<h3><strong>Intuition: </strong></h3>\n<p>In the previous solution, even though we were able to bring down the time complexity to O(N), we still needed to do two traversals to find our answer. Can we do this in a single traversal by using smart comparisons on the go?</p>\n<h4><strong>Approach:</strong></h4>\n<p>We would require four variables: small,second_small, large, and second_large. Variable small and second_small are initialized to INT_MAX while large and second_large are initialized to INT_MIN.</p>\n<p><strong>Second Smallest Algo:</strong></p>\n<ul><li>If the current element is smaller than \u2018small\u2019, then we update second_small and small variables</li><li>Else if the current element is smaller than \u2018second_small\u2019 then we update the variable \u2018second_small\u2019</li><li>Once we traverse the entire array, we would find the second smallest element in the variable second_small.</li><li>Here\u2019s a quick demonstration of the same.</li></ul>\n<p><strong>Second Largest Algo:</strong></p>\n<ul><li>If the current element is larger than \u2018large\u2019 then update second_large and large variables</li><li>Else if the current element is larger than \u2018second_large\u2019 then we update the variable second_large.</li><li>Once we traverse the entire array, we would find the second largest element in the variable second_large.</li><li>Here\u2019s a quick demonstration of the same.</li></ul>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n\n<!-- Insert C++ code of Optimal Approach Here-->\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint secondSmallest(int arr[],int n)\n{\n    if(n&lt;2)\n        return -1;\n    int small = INT_MAX;\n    int second_small = INT_MAX;\n    int i;\n    for(i = 0; i &lt; n; i++) \n    {\n       if(arr[i] &lt; small)\n       {\n          second_small = small;\n          small = arr[i];\n       }\n       else if(arr[i] &lt; second_small &amp;&amp; arr[i] != small)\n       {\n          second_small = arr[i];\n       }\n    }\n   return second_small;     \n}\nint secondLargest(int arr[],int n)\n{\n\tif(n&lt;2)\n\treturn -1;\n    int large=INT_MIN,second_large=INT_MIN;\n    int i;\n    for (i = 0; i &lt; n; i++) \n    {\n        if (arr[i] &gt; large) \n        {\n            second_large = large;\n            large = arr[i];\n        }\n \n        else if (arr[i] &gt; second_large &amp;&amp; arr[i] != large) \n        {\n            second_large = arr[i];\n        }\n    }\n    return second_large;                \n}\n\nint main() {\n    int arr[]={1,2,4,7,7,5};  \n    int n=sizeof(arr)/sizeof(arr[0]);\n        int sS=secondSmallest(arr,n);\n        int sL=secondLargest(arr,n);\n    cout&lt;&lt;\"Second smallest is \"&lt;&lt;sS&lt;&lt;endl;\n    cout&lt;&lt;\"Second largest is \"&lt;&lt;sL&lt;&lt;endl;\n    return 0;\n}\n\n</code>\n</pre>\n<p>\n<!-- Insert Output of Optimal Apporach Here -->\n</p><p><strong>Output:</strong></p>\n<p>Second smallest is 2<br>Second largest is 5</p>\n<p></p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\n\n<!-- Insert Java code of Optimal Approach Here -->\nimport java.io.*;\nclass Test\n{\nstatic private int secondSmallest(int[] arr, int n)\n{\n\tif (n &lt; 2)\n\t{\n\t\treturn -1;\n\t}\n\tint small = Integer.MAX_VALUE;\n\tint second_small = Integer.MAX_VALUE;\n\tint i;\n\tfor (i = 0; i &lt; n; i++)\n\t{\n\t   if (arr[i] &lt; small)\n\t   {\n\t\t  second_small = small;\n\t\t  small = arr[i];\n\t   }\n\t   else if (arr[i] &lt; second_small &amp;&amp; arr[i] != small)\n\t   {\n\t\t  second_small = arr[i];\n\t   }\n\t}\n   return second_small;\n}\nstatic private int secondLargest(int[] arr, int n)\n{\n\tif(n&lt;2)\n\treturn -1;\n\tint large = Integer.MIN_VALUE;\n\tint second_large = Integer.MIN_VALUE;\n\tint i;\n\tfor (i = 0; i &lt; n; i++)\n\t{\n\t\tif (arr[i] &gt; large)\n\t\t{\n\t\t\tsecond_large = large;\n\t\t\tlarge = arr[i];\n\t\t}\n\n\t\telse if (arr[i] &gt; second_large &amp;&amp; arr[i] != large)\n\t\t{\n\t\t\tsecond_large = arr[i];\n\t\t}\n\t}\n\treturn second_large;\n}\n\npublic static void main(String[] args)\n{\n\tint[] arr = {1, 2, 4, 7, 7, 5};\n\tint n = arr.length;\n\t\tint sS = secondSmallest(arr, n);\n\t\tint sL = secondLargest(arr, n);\n\tSystem.out.println(\"Second smallest is \"+sS);\n\tSystem.out.println(\"Second largest is \"+sL);\n}\n\n}\n\n</code>\n</pre>\n<p>\n<!-- Insert Output of Optimal Apporach Here -->\n</p><p><strong>Output:</strong></p>\n<p>Second smallest is 2<br>Second largest is 5</p>\n<p></p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\n\n<!-- Insert Python code of Optimal Approach Here -->\ndef secondSmallest(arr, n):\n    if (n &lt; 2):\n        return -1\n    small = float('inf')\n    second_small = float('inf')\n    for i in range(n):\n        if (arr[i] &lt; small):\n            second_small = small\n            small = arr[i]\n        elif (arr[i] &lt; second_small and arr[i] != small):\n            second_small = arr[i]\n    return second_small\n\n\n\n\ndef secondLargest(arr, n):\n    if (n &lt; 2):\n        return -1\n    large = float('-inf')\n    second_large = float('-inf')\n    for i in range(n):\n        if (arr[i] &gt; large):\n            second_large = large\n            large = arr[i]\n        elif (arr[i] &gt; second_large and arr[i] != large):\n            second_large = arr[i]\n    return second_large\n\n\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 4, 7, 7, 5]\n    n = len(arr)\n    sS = secondSmallest(arr, n)\n    sL = secondLargest(arr, n)\n    print(\"Second smallest is\", sS)\n    print(\"Second largest is\", sL)\n</code>\n</pre>\n<p>\n<!-- Insert Output of Optimal Apporach Here -->\n</p><p><strong>Output:</strong></p>\n<p>Second smallest is 2<br>Second largest is 5</p>\n<p></p>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\n<!-- Insert Python Code of Better Approach Here -->\nfunction secondSmallest(arr) {\n  if (arr.length &lt; 2)\n    return -1;\n\n  let small = Infinity;\n  let second_small = Infinity;\n\n  for (let i = 0; i &lt; arr.length; i++) {\n    if (arr[i] &lt; small) {\n      second_small = small;\n      small = arr[i];\n    } else if (arr[i] &lt; second_small &amp;&amp; arr[i] !== small) {\n      second_small = arr[i];\n    }\n  }\n\n  return second_small;\n}\n\nfunction secondLargest(arr) {\n  if (arr.length &lt; 2)\n    return -1;\n\n  let large = -Infinity;\n  let second_large = -Infinity;\n\n  for (let i = 0; i &lt; arr.length; i++) {\n    if (arr[i] &gt; large) {\n      second_large = large;\n      large = arr[i];\n    } else if (arr[i] &gt; second_large &amp;&amp; arr[i] !== large) {\n      second_large = arr[i];\n    }\n  }\n\n  return second_large;\n}\n\nconst arr = [1, 2, 4, 7, 7, 5];\nconst sS = secondSmallest(arr);\nconst sL = secondLargest(arr);\n\nconsole.log(\"Second smallest is \" + sS);\nconsole.log(\"Second largest is \" + sL);\n\n</code>\n</pre>\n<p>\n<!-- Insert Output of Better Approach Here -->\n</p><p><strong>Output:</strong></p>\n<p>Second smallest is 2<br>Second largest is 5</p>\n<p></p>\n</div>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n\n<!-- Insert Time and Space Complexity of Optimal Approach-->\n</p><p><strong>Time Complexity: O(N), Single-pass solution</strong></p>\n<p><strong>Space Complexity: O(1)</strong></p>\n<p></p>\n</details>\n</div>\n</details>\n</div>\n<!-- Optimal Approach Starts from here -->\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n<details>\n<summary class=\"main-summary\">\n<span>\nVideo Explanation\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"yt-video-wrapper\">\n\n<!-- Insert iframe embed Link of Youtube Video-->\n<iframe class=\"lazy-loaded\" loading=\"lazy\" title=\"Second Largest Element in an Array\" width=\"810\" height=\"456\" data-lazy-type=\"iframe\" data-src=\"https://www.youtube.com/embed/37E9ckMDdTk?start=811\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/37E9ckMDdTk?feature=oembed\"></iframe><noscript>\n<iframe loading=\"lazy\" title=\"Second Largest Element in an Array\" width=\"810\" height=\"456\" src=\"https://www.youtube.com/embed/37E9ckMDdTk?start=811\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"></iframe></noscript>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script>\n\nconst codeSections = document.querySelectorAll('.code-section');\n\n// Get last selected language from localStorage or set default value\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\n// Update last selected language for all sections and store in localStorage\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\n// Handle copy button click event\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\n// Set initial state of the tabs\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<script>\nconst codeSections = document.querySelectorAll('.code-section');\n\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script src=\"https://takeuforward.org/UXApproachDropDowns/3ApproachJSScript.js\"></script>\n<!-- /wp:html -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;<strong><a href=\"https://www.linkedin.com/in/naman-daga-04071/\" target=\"_blank\" rel=\"noreferrer noopener\">Naman Daga</a></strong>&nbsp;<em><em>and&nbsp;<a href=\"https://www.linkedin.com/in/imsudip/\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Sudip Ghosh</strong></a></em></em></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}