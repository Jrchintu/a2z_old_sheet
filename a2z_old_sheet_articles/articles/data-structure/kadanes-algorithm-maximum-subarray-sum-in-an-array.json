{
    "dislikes": 37,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:23 GMT+0530 (India Standard Time)",
    "slug": "kadanes-algorithm-maximum-subarray-sum-in-an-array",
    "aid": "1475",
    "title": "Kadane's Algorithm : Maximum Subarray Sum in an Array",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/kadane's-algorithm",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        }
    ],
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement</strong>: Given an integer array arr, find the contiguous subarray (containing at least one number) which<br>has the largest sum and returns its sum and prints the subarray.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\">\n<strong>Example 1:</strong>\n\n<strong>Input:</strong> arr = [-2,1,-3,4,-1,2,1,-5,4] \n\n<strong>Output:</strong> 6 \n\n<strong>Explanation:</strong> [4,-1,2,1] has the largest sum = 6. \n\n<strong>Examples 2:</strong> \n\n<strong>Input:</strong> arr = [1] \n\n<strong>Output:</strong> 1 \n\n<strong>Explanation:</strong> Array has only one element and which is giving positive sum of 1. \n</pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Practice Section-->\n<div class=\"practice\">\n<span><strong>Practice: </strong></span>\n<div class=\"problem-buttons\">\n\n<!-- Add Problem Link inside href -->\n<a href=\"https://bit.ly/3HZltTa\" target=\"_blank\" rel=\"noopener\">\n<span>Solve Problem</span>\n<img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Group-11-5.png\" alt=\"code-studio\">\n</a>\n</div>\n<div class=\"problem-buttons\">\n<!-- Add Problem Link inside href -->\n<a href=\"https://leetcode.com/problems/maximum-subarray/\" target=\"_blank\" rel=\"noopener\">\n<span>Solve Problem</span>\n<img src=\"https://cdn.iconscout.com/icon/free/png-256/free-leetcode-3521542-2944960.png?f=webp\" alt=\"leetcode\">\n</a>\n</div>\n</div>\n\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out\nyourself first. </em></p>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<div class=\"horizontal_navbar_dsa_article\">\n<div class=\"grid_container_four\">\n<a href=\"#brute-force-approach\" class=\"four-boxes box-a\">\nBrute Force Approach\n</a>\n<a href=\"#better-approach\" class=\"four-boxes box-a\">\nBetter Approach\n</a>\n<a href=\"#optimal-approach-1\" class=\"four-boxes box-c\">\nOptimal Approach \n</a>\n<a href=\"#optimal-approach-2\" class=\"four-boxes box-c-2\">\nFollow-Up Question\n</a>\n<a href=\"#dsa_article_video_explanation\" class=\"three-boxes box-d\">\n<svg width=\"26\" height=\"26\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8 10L13.19 7L8 4V10ZM19.56 2.17C19.69 2.64 19.78 3.27 19.84 4.07C19.91 4.87 19.94 5.56 19.94 6.16L20 7C20 9.19 19.84 10.8 19.56 11.83C19.31 12.73 18.73 13.31 17.83 13.56C17.36 13.69 16.5 13.78 15.18 13.84C13.88 13.91 12.69 13.94 11.59 13.94L10 14C5.81 14 3.2 13.84 2.17 13.56C1.27 13.31 0.69 12.73 0.44 11.83C0.31 11.36 0.22 10.73 0.16 9.93C0.0900001 9.13 0.0599999 8.44 0.0599999 7.84L0 7C0 4.81 0.16 3.2 0.44 2.17C0.69 1.27 1.27 0.69 2.17 0.44C2.64 0.31 3.5 0.22 4.82 0.16C6.12 0.0899998 7.31 0.0599999 8.41 0.0599999L10 0C14.19 0 16.8 0.16 17.83 0.44C18.73 0.69 19.31 1.27 19.56 2.17Z\" fill=\"red\"></path>\n</svg>\n\n</a>\n<div class=\"box-e tooltip\">\n<svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.842 9.25L11.9577 10.17C11.2502 10.89 10.8081 11.5 10.8081 13H8.84297V12.5C8.84297 11.39 9.28511 10.39 9.99255 9.67L11.2109 8.41C11.5745 8.05 11.7906 7.55 11.7906 7C11.7906 6.46957 11.5836 5.96086 11.2151 5.58579C10.8465 5.21071 10.3467 5 9.82552 5C9.30434 5 8.80451 5.21071 8.43598 5.58579C8.06745 5.96086 7.86041 6.46957 7.86041 7H5.89531C5.89531 5.93913 6.30938 4.92172 7.04644 4.17157C7.7835 3.42143 8.78316 3 9.82552 3C10.8679 3 11.8675 3.42143 12.6046 4.17157C13.3417 4.92172 13.7557 5.93913 13.7557 7C13.7543 7.84324 13.4259 8.65183 12.842 9.25ZM10.8081 17H8.84297V15H10.8081M9.82552 0C8.53521 0 7.25754 0.258658 6.06545 0.761205C4.87337 1.26375 3.79021 2.00035 2.87783 2.92893C1.03519 4.8043 0 7.34784 0 10C0 12.6522 1.03519 15.1957 2.87783 17.0711C3.79021 17.9997 4.87337 18.7362 6.06545 19.2388C7.25754 19.7413 8.53521 20 9.82552 20C12.4314 20 14.9306 18.9464 16.7732 17.0711C18.6158 15.1957 19.651 12.6522 19.651 10C19.651 4.47 15.2296 0 9.82552 0Z\" fill=\"black\"></path>\n</svg>\n<div class=\"bottom\">\n<p>Expand any one approach by clicking the given options in the bar. Clicking one approach on bar,\ncloses all other expands. You can manually expand more than one approach at a time</p>\n<i></i>\n</div>\n</div>\n</div>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n\n\n<div class=\"dsa_article_dropdown_approachs \">\n\n<!-- Brute Force Approach Starts from here -->\n<div id=\"brute-force-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBrute Force Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<h3><strong>Intuition: </strong></h3>\n<p>We will check the sum of every possible subarray and consider the maximum among them. To get every possible subarray sum, we will be using three nested loops. The first loops(say i and j) will iterate over every possible starting index and ending index of a subarray. Basically, in each iteration, the subarray range will be from index i to index j. Using another loop we will get the sum of the elements of the subarray <strong>[i\u2026..j]</strong>. Among all values of the sum calculated, we will consider the maximum one.</p>\n<h3><strong>Approach:</strong></h3>\n<p>The steps are as follows:</p>\n<ol><li>First, we will run a loop(say i) that will select every possible starting index of the subarray. The possible starting indices can vary from index 0 to index n-1(n = size of the array).</li><li>Inside the loop, we will run another loop(say j) that will signify the ending index of the subarray. For every subarray starting from the index i, the possible ending index can vary from index i to n-1(n = size of the array).</li><li>After that for each subarray starting from index i and ending at index j <strong>(i.e. arr[i\u2026.j]), </strong>we will run another loop to calculate the sum of all the elements(of that particular subarray).</li></ol>\n<p><strong>Note: </strong>We are selecting every possible subarray using two nested loops and for each of them, we add all its elements using another loop.</p>\n</div>\n</details>\n\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nDry Run\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<p>Subarrays are marked with yellow color.</p>\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Screenshot-2023-04-04-004717.png\" alt=\"\" class=\"wp-image-8264\"/></figure>\n</div>\n</details>\n\n\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">Javascript</button>\n\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint maxSubarraySum(int arr[], int n) {\n    int maxi = INT_MIN; // maximum sum\n\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = i; j &lt; n; j++) {\n            // subarray = arr[i.....j]\n            int sum = 0;\n\n            //add all the elements of subarray:\n            for (int k = i; k &lt;= j; k++) {\n                sum += arr[k];\n            }\n\n            maxi = max(maxi, sum);\n        }\n    }\n\n    return maxi;\n}\n\nint main()\n{\n    int arr[] = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    int maxSum = maxSubarraySum(arr, n);\n    cout &lt;&lt; \"The maximum subarray sum is: \" &lt;&lt; maxSum &lt;&lt; endl;\n    return 0;\n}\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.util.*;\n\npublic class tUf {\n    public static int maxSubarraySum(int[] arr, int n) {\n        int maxi = Integer.MIN_VALUE; // maximum sum\n\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = i; j &lt; n; j++) {\n                // subarray = arr[i.....j]\n                int sum = 0;\n\n                //add all the elements of subarray:\n                for (int k = i; k &lt;= j; k++) {\n                    sum += arr[k];\n                }\n\n                maxi = Math.max(maxi, sum);\n            }\n        }\n\n        return maxi;\n    }\n\n    public static void main(String args[]) {\n        int[] arr = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n        int n = arr.length;\n        int maxSum = maxSubarraySum(arr, n);\n        System.out.println(\"The maximum subarray sum is: \" + maxSum);\n\n    }\n\n}\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\nimport sys\n\ndef maxSubarraySum(arr, n):\n    maxi = -sys.maxsize - 1  # maximum sum\n\n    for i in range(n):\n        for j in range(i, n):\n            # subarray = arr[i.....j]\n            summ = 0\n\n            # add all the elements of subarray:\n            for k in range(i, j+1):\n                summ += arr[k]\n\n            maxi = max(maxi, summ)\n\n    return maxi\n\nif __name__ == \"__main__\":\n    arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]\n    n = len(arr)\n    maxSum = maxSubarraySum(arr, n)\n    print(\"The maximum subarray sum is:\", maxSum)\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\nfunction maxSubarraySum(arr, n) {\n    let maxi = Number.MIN_SAFE_INTEGER; // maximum sum\n\n    for (let i = 0; i &lt; n; i++) {\n        for (let j = i; j &lt; n; j++) {\n            // subarray = arr[i.....j]\n            let sum = 0;\n\n            //add all the elements of subarray:\n            for (let k = i; k &lt;= j; k++) {\n                sum += arr[k];\n            }\n\n            maxi = Math.max(maxi, sum);\n        }\n    }\n\n    return maxi;\n}\n\nconst arr = [ -2, 1, -3, 4, -1, 2, 1, -5, 4];\nconst n = arr.length;\nconst maxSum = maxSubarraySum(arr, n);\nconsole.log(`The maximum subarray sum is: ${maxSum}`);\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n</div>\n</details>\n\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n<p><strong>Time Complexity: </strong>O(N<sup>3</sup>), where N = size of the array.<br><strong>Reason: </strong>We are using three nested loops, each running approximately N times.</p>\n<p><strong>Space Complexity: </strong>O(1) as we are not using any extra space.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Brute Force Approach Ends here -->\n\n\n<!-- Better Approach Starts from here -->\n<div id=\"better-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBetter Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<p><strong>Intuition: </strong>If we carefully observe, we can notice that to get the sum of the current subarray we just need to add the current element(i.e. <strong>arr[j]</strong>) to the sum of the previous subarray i.e. <strong>arr[i\u2026.j-1]</strong>.</p>\n<p>Assume previous subarray = <strong>arr[i\u2026\u2026j-1]</strong><strong><br></strong>current subarray = <strong>arr[i\u2026..j]</strong><strong><br></strong>Sum of <strong>arr[i\u2026.j]</strong> = <strong>(sum of arr[i\u2026.j-1]) + arr[j]</strong></p>\n<p>This is how we can remove the third loop and while moving j pointer, we can calculate the sum.</p>\n<h3><strong>Approach:</strong></h3>\n<p>The steps are as follows:</p>\n<ol><li>First, we will run a loop(say i) that will select every possible starting index of the subarray. The possible starting indices can vary from index 0 to index n-1(n = array size).</li><li>Inside the loop, we will run another loop(say j) that will signify the ending index as well as the current element of the subarray. For every subarray starting from index i, the possible ending index can vary from index i to n-1(n = size of the array).</li><li>Inside loop j, we will add the current element to the sum of the previous subarray i.e. <strong>sum = sum + arr[j]</strong>. Among all the sums the maximum one will be the answer.</li></ol>\n</div>\n</details>\n\n\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nDry Run\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<p>Subarrays are marked with yellow color.</p>\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Screenshot-2023-04-04-005301.png\" alt=\"\" class=\"wp-image-8265\"/></figure>\n</div>\n</details>\n\n\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">Javascript</button>\n\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint maxSubarraySum(int arr[], int n) {\n    int maxi = INT_MIN; // maximum sum\n\n    for (int i = 0; i &lt; n; i++) {\n        int sum = 0;\n        for (int j = i; j &lt; n; j++) {\n            // current subarray = arr[i.....j]\n\n            //add the current element arr[j]\n            // to the sum i.e. sum of arr[i...j-1]\n            sum += arr[j];\n\n            maxi = max(maxi, sum); // getting the maximum\n        }\n    }\n\n    return maxi;\n}\n\nint main()\n{\n    int arr[] = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    int maxSum = maxSubarraySum(arr, n);\n    cout &lt;&lt; \"The maximum subarray sum is: \" &lt;&lt; maxSum &lt;&lt; endl;\n    return 0;\n}\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.util.*;\n\npublic class tUf {\n    public static int maxSubarraySum(int[] arr, int n) {\n        int maxi = Integer.MIN_VALUE; // maximum sum\n\n        for (int i = 0; i &lt; n; i++) {\n            int sum = 0;\n            for (int j = i; j &lt; n; j++) {\n                // current subarray = arr[i.....j]\n\n                //add the current element arr[j]\n                // to the sum i.e. sum of arr[i...j-1]\n                sum += arr[j];\n\n                maxi = Math.max(maxi, sum); // getting the maximum\n            }\n        }\n\n        return maxi;\n    }\n\n    public static void main(String args[]) {\n        int[] arr = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n        int n = arr.length;\n        int maxSum = maxSubarraySum(arr, n);\n        System.out.println(\"The maximum subarray sum is: \" + maxSum);\n\n    }\n\n}\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\nimport sys\n\ndef maxSubarraySum(arr, n):\n    maxi = -sys.maxsize - 1 # maximum sum\n\n    for i in range(n):\n        sum = 0\n        for j in range(i, n):\n            # current subarray = arr[i.....j]\n\n            #add the current element arr[j]\n            # to the sum i.e. sum of arr[i...j-1]\n            sum += arr[j]\n\n            maxi = max(maxi, sum) # getting the maximum\n\n    return maxi\n\narr = [ -2, 1, -3, 4, -1, 2, 1, -5, 4]\nn = len(arr)\nmaxSum = maxSubarraySum(arr, n)\nprint(\"The maximum subarray sum is:\", maxSum)\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\nfunction maxSubarraySum(arr, n) {\n    let maxi = Number.MIN_SAFE_INTEGER; // maximum sum\n\n    for (let i = 0; i &lt; n; i++) {\n        let sum = 0;\n        for (let j = i; j &lt; n; j++) {\n            // current subarray = arr[i.....j]\n\n            //add the current element arr[j]\n            // to the sum i.e. sum of arr[i...j-1]\n            sum += arr[j];\n\n            maxi = Math.max(maxi, sum); // getting the maximum\n        }\n    }\n\n    return maxi;\n}\n\nlet arr = [ -2, 1, -3, 4, -1, 2, 1, -5, 4];\nlet n = arr.length;\nlet maxSum = maxSubarraySum(arr, n);\nconsole.log(\"The maximum subarray sum is: \" + maxSum);\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n</div>\n</details>\n\n\n\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n<p><strong>Time Complexity: </strong>O(N<sup>2</sup>), where N = size of the array.<br><strong>Reason: </strong>We are using two nested loops, each running approximately N times.</p>\n<p><strong>Space Complexity: </strong>O(1) as we are not using any extra space.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Better Approach Ends from here -->\n\n\n<!-- Optimal Approach - 1 Starts from here -->\n<div id=\"optimal-approach-1\">\n<details>\n<summary class=\"main-summary\">\n<span>\nOptimal Approach \n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<h3><strong>Intuition: </strong></h3>\n<p>The intuition of the algorithm is not to consider the subarray as a part of the answer if its sum is less than 0. <strong><em>A subarray with a sum less than 0 will always reduce our answer and so this type of subarray cannot be a part of the subarray with maximum sum.</em></strong></p>\n<p>Here, we will iterate the given array with a single loop and while iterating we will add the elements in a sum variable. Now, if at any point the sum becomes less than 0, we will set the sum as 0 as we are not going to consider any subarray with a negative sum. Among all the sums calculated, we will consider the maximum one.</p>\n<p>Thus we can solve this problem with a single loop.</p>\n<h3><strong>Approach:</strong></h3>\n<p>The steps are as follows:</p>\n<ol><li>We will run a loop(say i) to iterate the given array.</li><li>Now, while iterating we will add the elements to the sum variable and consider the maximum one.</li><li>If at any point the sum becomes negative we will set the sum to 0 as we are not going to consider it as a part of our answer.</li></ol>\n<p><strong>Note: </strong>In some cases, the question might say to consider the sum of the empty subarray while solving this problem. So, in these cases, before returning the answer we will compare the maximum subarray sum calculated with 0(i.e. The sum of an empty subarray is 0). And after that, we will return the maximum one.<br>For e.g. if the given array is {-1, -4, -5}, the answer will be 0 instead of -1 in this case.&nbsp;</p>\n<p><em>This is applicable to all the approaches discussed above.</em></p>\n<p><em>But if this case is not explicitly mentioned we will not consider this case.</em></p>\n<p><strong>Note: </strong><em>For a better understanding of intuition, please watch the video at the bottom of the page.</em></p>\n</div>\n</details>\n\n\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">Javascript</button>\n\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nlong long maxSubarraySum(int arr[], int n) {\n    long long maxi = LONG_MIN; // maximum sum\n    long long sum = 0;\n\n    for (int i = 0; i &lt; n; i++) {\n\n        sum += arr[i];\n\n        if (sum &gt; maxi) {\n            maxi = sum;\n        }\n\n        // If sum &lt; 0: discard the sum calculated\n        if (sum &lt; 0) {\n            sum = 0;\n        }\n    }\n\n    // To consider the sum of the empty subarray\n    // uncomment the following check:\n\n    //if (maxi &lt; 0) maxi = 0;\n\n    return maxi;\n}\n\nint main()\n{\n    int arr[] = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    long long maxSum = maxSubarraySum(arr, n);\n    cout &lt;&lt; \"The maximum subarray sum is: \" &lt;&lt; maxSum &lt;&lt; endl;\n    return 0;\n}\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.util.*;\n\npublic class Main {\n    public static long maxSubarraySum(int[] arr, int n) {\n        long maxi = Long.MIN_VALUE; // maximum sum\n        long sum = 0;\n\n        for (int i = 0; i &lt; n; i++) {\n\n            sum += arr[i];\n\n            if (sum &gt; maxi) {\n                maxi = sum;\n            }\n\n            // If sum &lt; 0: discard the sum calculated\n            if (sum &lt; 0) {\n                sum = 0;\n            }\n        }\n\n        // To consider the sum of the empty subarray\n        // uncomment the following check:\n\n        //if (maxi &lt; 0) maxi = 0;\n\n        return maxi;\n    }\n\n    public static void main(String args[]) {\n        int[] arr = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n        int n = arr.length;\n        long maxSum = maxSubarraySum(arr, n);\n        System.out.println(\"The maximum subarray sum is: \" + maxSum);\n\n    }\n\n}\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\nimport sys\n\ndef maxSubarraySum(arr, n):\n    maxi = -sys.maxsize-1 # maximum sum\n    sum = 0\n\n    for i in range(n):\n        sum += arr[i]\n\n        if sum &gt; maxi:\n            maxi = sum\n\n        # If sum &lt; 0: discard the sum calculated\n        if sum &lt; 0:\n            sum = 0\n\n    # To consider the sum of the empty subarray\n    # uncomment the following check:\n\n    #if maxi &lt; 0: maxi = 0\n\n    return maxi\n\narr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nn = len(arr)\nmaxSum = maxSubarraySum(arr, n)\nprint(\"The maximum subarray sum is:\", maxSum)\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\nfunction maxSubarraySum(arr, n) {\n    let maxi = Number.MIN_SAFE_INTEGER; // maximum sum\n    let sum = 0;\n\n    for (let i = 0; i &lt; n; i++) {\n        sum += arr[i];\n\n        if (sum &gt; maxi) {\n            maxi = sum;\n        }\n\n        // If sum &lt; 0: discard the sum calculated\n        if (sum &lt; 0) {\n            sum = 0;\n        }\n    }\n\n    // To consider the sum of the empty subarray\n    // uncomment the following check:\n\n    //if (maxi &lt; 0) maxi = 0;\n\n    return maxi;\n}\n\nconst arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\nconst n = arr.length;\nconst maxSum = maxSubarraySum(arr, n);\nconsole.log(\"The maximum subarray sum is: \" + maxSum);\n\n</code>\n</pre>\n<p> <strong>Output</strong>: The maximum subarray sum is: 6 </p>\n</div>\n</div>\n</details>\n\n\n\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n<p><strong>Time Complexity: </strong>O(N), where N = size of the array.<br><strong>Reason: </strong>We are using a single loop running N times.</p>\n<p><strong>Space Complexity: </strong>O(1) as we are not using any extra space.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Optimal Approach - 1 ends from here -->\n\n<!-- Optimal Approach - 2 Starts from here -->\n<div id=\"optimal-approach-2\">\n<details>\n<summary class=\"main-summary\">\n<span>\nFollow-up question\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<p>There might be more than one subarray with the maximum sum. We need to print any of them.</p>\n<p><strong>Intuition: </strong>Our approach is to store the starting index and the ending index of the subarray. Thus we can easily get the subarray afterward without actually storing the subarray elements.</p>\n<p>If we carefully observe our algorithm, we can notice that the subarray always starts at the particular index where the sum variable is equal to 0, and at the ending index, the sum always crosses the previous maximum sum(i.e.<strong> maxi</strong>).</p>\n<ul><li>So, we will keep a track of the starting index inside the loop using a <strong>start</strong> variable.</li><li>We will take two variables <strong>ansStart</strong> and <strong>ansEnd</strong> initialized with -1. And when the sum crosses the maximum sum, we will set <strong>ansStart</strong> to the <strong>start</strong> variable and <strong>ansEnd</strong> to the <strong>current index i.e. i</strong>.</li></ul>\n<p>The rest of the approach will be the same as Kadane\u2019s Algorithm.</p>\n<p><strong>Note: </strong><em>For a better understanding of intuition, please watch the video at the bottom of the page.</em></p>\n</div>\n</details>\n\n\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">Javascript</button>\n\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nlong long maxSubarraySum(int arr[], int n) {\n    long long maxi = LONG_MIN; // maximum sum\n    long long sum = 0;\n\n    int start = 0;\n    int ansStart = -1, ansEnd = -1;\n    for (int i = 0; i &lt; n; i++) {\n\n        if (sum == 0) start = i; // starting index\n\n        sum += arr[i];\n\n        if (sum &gt; maxi) {\n            maxi = sum;\n\n            ansStart = start;\n            ansEnd = i;\n        }\n\n        // If sum &lt; 0: discard the sum calculated\n        if (sum &lt; 0) {\n            sum = 0;\n        }\n    }\n\n    //printing the subarray:\n    cout &lt;&lt; \"The subarray is: [\";\n    for (int i = ansStart; i &lt;= ansEnd; i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; \"]n\";\n\n    // To consider the sum of the empty subarray\n    // uncomment the following check:\n\n    //if (maxi &lt; 0) maxi = 0;\n\n    return maxi;\n}\n\nint main()\n{\n    int arr[] = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    long long maxSum = maxSubarraySum(arr, n);\n    cout &lt;&lt; \"The maximum subarray sum is: \" &lt;&lt; maxSum &lt;&lt; endl;\n    return 0;\n}\n</code>\n</pre>\n<p><strong>Output: </strong><strong><br></strong>The subarray is: [4 -1 2 1 ]<br>The maximum subarray sum is: 6</p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.util.*;\n\npublic class tUf {\n    public static long maxSubarraySum(int[] arr, int n) {\n        long maxi = Long.MIN_VALUE; // maximum sum\n        long sum = 0;\n\n        int start = 0;\n        int ansStart = -1, ansEnd = -1;\n        for (int i = 0; i &lt; n; i++) {\n\n            if (sum == 0) start = i; // starting index\n\n            sum += arr[i];\n\n            if (sum &gt; maxi) {\n                maxi = sum;\n\n                ansStart = start;\n                ansEnd = i;\n            }\n\n            // If sum &lt; 0: discard the sum calculated\n            if (sum &lt; 0) {\n                sum = 0;\n            }\n        }\n\n        //printing the subarray:\n        System.out.print(\"The subarray is: [\");\n        for (int i = ansStart; i &lt;= ansEnd; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.print(\"]n\");\n\n        // To consider the sum of the empty subarray\n        // uncomment the following check:\n\n        //if (maxi &lt; 0) maxi = 0;\n\n        return maxi;\n    }\n\n    public static void main(String args[]) {\n        int[] arr = { -2, 1, -3, 4, -1, 2, 1, -5, 4};\n        int n = arr.length;\n        long maxSum = maxSubarraySum(arr, n);\n        System.out.println(\"The maximum subarray sum is: \" + maxSum);\n\n    }\n\n}\n</code>\n</pre>\n<p><strong>Output: </strong><strong><br></strong>The subarray is: [4 -1 2 1 ]<br>The maximum subarray sum is: 6</p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\nimport sys\n\ndef maxSubarraySum(arr, n):\n    maxi = -sys.maxsize - 1  # maximum sum\n    sum = 0\n\n    start = 0\n    ansStart, ansEnd = -1, -1\n    for i in range(n):\n\n        if sum == 0:\n            start = i  # starting index\n\n        sum += arr[i]\n\n        if sum &gt; maxi:\n            maxi = sum\n\n            ansStart = start\n            ansEnd = i\n\n        # If sum &lt; 0: discard the sum calculated\n        if sum &lt; 0:\n            sum = 0\n\n    # printing the subarray:\n    print(\"The subarray is: [\", end=\"\")\n    for i in range(ansStart, ansEnd + 1):\n        print(arr[i], end=\" \")\n    print(\"]\")\n\n    # To consider the sum of the empty subarray\n    # uncomment the following check:\n\n    # if maxi &lt; 0:\n    #     maxi = 0\n\n    return maxi\n\narr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nn = len(arr)\nmaxSum = maxSubarraySum(arr, n)\nprint(\"The maximum subarray sum is:\", maxSum)\n</code>\n</pre>\n<p><strong>Output: </strong><strong><br></strong>The subarray is: [4 -1 2 1 ]<br>The maximum subarray sum is: 6</p>\n</div>\n\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\nfunction maxSubarraySum(arr, n) {\n    let maxi = Number.MIN_SAFE_INTEGER; // maximum sum\n    let sum = 0;\n\n    let start = 0;\n    let ansStart = -1, ansEnd = -1;\n    for (let i = 0; i &lt; n; i++) {\n\n        if (sum == 0) start = i; // starting index\n\n        sum += arr[i];\n\n        if (sum &gt; maxi) {\n            maxi = sum;\n\n            ansStart = start;\n            ansEnd = i;\n        }\n\n        // If sum &lt; 0: discard the sum calculated\n        if (sum &lt; 0) {\n            sum = 0;\n        }\n    }\n\n    //printing the subarray:\n    console.log(\"The subarray is: [\");\n    for (let i = ansStart; i &lt;= ansEnd; i++) {\n        console.log(arr[i] + \" \");\n    }\n    console.log(\"]n\");\n\n    // To consider the sum of the empty subarray\n    // uncomment the following check:\n\n    //if (maxi &lt; 0) maxi = 0;\n\n    return maxi;\n}\n\nlet arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\nlet n = arr.length;\nlet maxSum = maxSubarraySum(arr, n);\nconsole.log(\"The maximum subarray sum is: \" + maxSum);\n</code>\n</pre>\n<p><strong>Output: </strong><strong><br></strong>The subarray is: [4 -1 2 1 ]<br>The maximum subarray sum is: 6</p>\n</div>\n</div>\n</details>\n\n\n\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n<p><strong>Time Complexity: </strong>O(N), where N = size of the array.<br><strong>Reason: </strong>We are using a single loop running N times.</p>\n<p><strong>Space Complexity: </strong>O(1) as we are not using any extra space.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Optimal Approach - 2 ends from here -->\n\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n<details>\n<summary class=\"main-summary\">\n<span>\nVideo Explanation\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"yt-video-wrapper\">\n<iframe width=\"810\" height=\"456\" src=\"https://www.youtube.com/embed/AHZpyENo7k4?start=1209\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script src=\"https://takeuforward.org/UXApproachDropDowns/4ApproachJSScript.js\"></script>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script>\n\nconst codeSections = document.querySelectorAll('.code-section');\n\n// Get last selected language from localStorage or set default value\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\n// Update last selected language for all sections and store in localStorage\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\n// Handle copy button click event\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\n// Set initial state of the tabs\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<script>\nconst codeSections = document.querySelectorAll('.code-section');\n\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>\n<!-- /wp:html -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;<strong><a href=\"https://www.linkedin.com/in/abhay-rai-b60125185/\" target=\"_blank\" rel=\"noreferrer noopener\">Abhay Rai</a></strong>&nbsp;, <em><a href=\"https://www.linkedin.com/in/imsudip/\" target=\"_blank\" rel=\"noopener\" title=\"\"><strong>Sudip Ghosh</strong></a></em></em> <em>and <strong><a href=\"https://www.linkedin.com/in/kriti39/\" target=\"_blank\" rel=\"noopener\" title=\"\">KRITIDIPTA GHOSH</a></strong></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->",
    "category_tag": "data-structure",
    "likes": 1273,
    "preview": "Problem Statement: Given an integer array arr, find the contiguous subarray (containing at least one number) which has the largest sum and returns its sum and prints the subarray. Examples Example..."
}