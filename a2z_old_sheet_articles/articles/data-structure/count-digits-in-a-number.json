{
    "dislikes": 44,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:10:52 GMT+0530 (India Standard Time)",
    "slug": "count-digits-in-a-number",
    "aid": "1906",
    "tuf_plus": "",
    "title": "Count digits in a number",
    "topics": [
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "maths",
            "topic-title": "Maths"
        }
    ],
    "category_tag": "data-structure",
    "likes": 1191,
    "preview": "Problem Statement: Given an integer N, return the number of digits in N. Examples Example 1: Input:N = 12345 Output:5 Explanation: The number 12345 has 5 digits. Example 2: Input:N = 7789 Output: 4...",
    "content": "<p><strong>Problem Statement: </strong>Given an integer N, return the number of digits in N.\n</p>\n\n\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n    <details class=\"article_example_details\">\n        <summary class=\"article_example_summary\">\n            <span><strong>\n                    Examples\n                </strong>\n            </span>\n            <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n            </svg>\n        </summary>\n        <div class=\"atricle_example_content\">\n            <pre class=\"wp-block-preformatted\">\n                <span><strong>Example 1:</strong></span>\n                <span><strong>Input:</strong>N = 12345</span>\n               \n                <span><strong>Output:</strong>5</span>\n                \n                <span><strong>Explanation: </strong> The number 12345 has 5 digits.</span>\n                                        \n                <span><strong>Example 2:</strong></span>\n                <span><strong>Input:</strong>N = 7789</span>                \n                \n                <span><strong>Output: </strong>4</span>\n                \n                <span><strong>Explanation: </strong>The number 7789 has 4 digits.</span>                            \n\n            </pre>\n        </div>\n    </details>\n</div>\n\n\n<!-- This is Practice Section-->\n<div class=\"practice\">\n    <span><strong>Practice: </strong></span>\n    <div class=\"problem-buttons\">\n\n         \n        <a href=\"https://www.codingninjas.com/codestudio/problems/count-digits_8416387?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf\" target=\"_blank\" rel=\"noopener\">\n            <span>Solve Problem</span>\n            <img src=\"https://takeuforward-content-images.s3.ap-south-1.amazonaws.com/content/Group-11-5-pFOq-8ga\" alt=\"code-studio\">\n        </a>\n    </div>\n    \n</div>\n\n\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out yourself first. </em></p>\n\n\n<!-- This is Approaches Drop-Down -->\n<div class=\"dsa_article_dropdown_approachs \">\n\n    <!-- Approach - 1 Starts from here -->\n    <div id=\"brute-force-approach\">\n        <details>\n            <summary class=\"main-summary\">\n                <span>\n                    <!-- Change Name Here -->\n                   Brute Force Approach \n                </span>\n                <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                    <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                    </path>\n                </svg>\n            </summary>\n            <div class=\"common-drops\">\n                <details class=\"secondary-details\" open=\"\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Algorithm / Intuition\n                        </span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <div class=\"approach-algorithm\">\n                        \n                        <p>To count the number of digits in a number, we can use the algorithm created in<a href=\"https://takeuforward.org/maths/extract-digits-from-a-given-number\"> Extract Digits</a> as now instead of extracting digits we are simply creating a counter to count the number of digits in the number..</p>\n                        \n                        <p><strong>Algorithm:</strong></p>\n                        <p><strong>Step 1:</strong>Initialise a counter to store the number of digits.</p>\n                        \n                        <p><strong>Step 2:</strong>While N is greater than 0, execute the following:\n                        <ol><li>Increment the counter by 1</li><li>Update N by removing its last digit by performing a modulo 10 (%10) operation on it.</li></ol></p>\n                                                                    \n                        <p><strong>Step 3:</strong>After exiting the while loop, we return the counter as the number of digits.</p>\n                        \n                    </div>\n                </details>\n                <details class=\"code-section secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Code\n                        </span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <div class=\"code-tabs\">\n                        <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n                        <button class=\"code-tab\" data-lang=\"java\">Java</button>\n                        <button class=\"code-tab\" data-lang=\"python\">Python</button>\n                        <button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n                        <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n                            </path>\n                        </svg>\n                    </div>\n                    <div class=\"code-content\">\n                        <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n                            <pre class=\"wp-block-code\">\n                                <code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\n\n// Function to count the number\n// of digits in an integer 'n'.\nint countDigits(int n){\n    // Initialize a counter variable\n    // 'cnt' to store the count of digits.\n    int cnt = 0;\n    // While loop iterates until 'n'\n    // becomes 0 (no more digits left).\n    while(n &gt; 0){\n        // Increment the counter\n        // for each digit encountered.\n        cnt = cnt + 1;\n        // Divide 'n' by 10 to\n        // remove the last digit.\n        n = n / 10;\n    }\n    // Return the\n    // count of digits.\n    return cnt;\n}\n\n\n\nint main() {\n    int N = 329823;\n    cout &lt;&lt; &quot;N: &quot;&lt;&lt; N &lt;&lt; endl;\n    int digits = countDigits(N);\n    cout &lt;&lt; &quot;Number of Digits in N: &quot;&lt;&lt; digits &lt;&lt; endl;\n    return 0;\n}\n\n                                </code>\n                            </pre>\n                        </div>\n                        <div class=\"code-block \" data-lang=\"java\">\n                            <pre class=\"wp-block-code\">\n                                <code lang=\"java\" class=\"language-java\">\nimport java.util.Scanner;\n\npublic class Main {\n    // Function to count the number\n    // of digits in an integer 'n'.\n    public static int countDigits(int n) {\n        // Initialize a counter variable\n        // 'cnt' to store the count of digits.\n        int cnt = 0;\n        // While loop iterates until 'n'\n        // becomes 0 (no more digits left).\n        while (n &gt; 0) {\n            // Increment the counter\n            // for each digit encountered.\n            cnt = cnt + 1;\n            // Divide 'n' by 10 to\n            // remove the last digit.\n            n = n / 10;\n        }\n        // Return the\n        // count of digits.\n        return cnt;\n    }\n\n    public static void main(String[] args) {\n        int N = 329823;\n        System.out.println(&quot;N: &quot; + N);\n        int digits = countDigits(N);\n        System.out.println(&quot;Number of Digits in N: &quot; + digits);\n    }\n}\n\n                                </code>\n                            </pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"python\">\n                            <pre class=\"wp-block-code\">\n                                <code lang=\"python\" class=\"language-python\">\n# Function to count the number\n# of digits in an integer 'n'.\ndef countDigits(n):\n    # Initialize a counter variable\n    # 'cnt' to store the count of digits.\n    cnt = 0\n    # While loop iterates until 'n'\n    # becomes 0 (no more digits left).\n    while n &gt; 0:\n        # Increment the counter\n        # for each digit encountered.\n        cnt = cnt + 1\n        # Divide 'n' by 10 to\n        # remove the last digit.\n        n = n // 10\n    # Return the\n    # count of digits.\n    return cnt\n\n\nif __name__ == &quot;__main__&quot;:\n    N = 329823\n    print(&quot;N:&quot;, N)\n    digits = countDigits(N)\n    print(&quot;Number of Digits in N:&quot;, digits)\n                                </code>\n                            </pre>\n                        </div>\n                         <div class=\"code-block\" data-lang=\"javascript\">\n                        <pre class=\"wp-block-code\">\n                            <code lang=\"javascript\" class=\"language-javascript\">\n// Function to count the number\n// of digits in an integer 'n'.\nfunction countDigits(n) {\n    // Initialize a counter variable\n    // 'cnt' to store the count of digits.\n    let cnt = 0;\n    // While loop iterates until 'n'\n    // becomes 0 (no more digits left).\n    while (n > 0) {\n        // Increment the counter\n        // for each digit encountered.\n        cnt = cnt + 1;\n        // Divide 'n' by 10 to\n        // remove the last digit.\n        n = Math.floor(n / 10);\n    }\n    // Return the\n    // count of digits.\n    return cnt;\n}\n\n// Main function\nfunction main() {\n    let N = 329823;\n    console.log(\"N: \" + N);\n    let digits = countDigits(N);\n    console.log(\"Number of Digits in N: \" + digits);\n}\n\n// Execute the main function\nmain();\n\n                            </code>\n                        </pre>\n                        </div>\n                        <p>\n                           <strong>Output: </strong>N: 329823</p>\n                           <p>Number of Digits in N: 6</p>\n\n\n                    </div>\n                </details>\n                <details class=\"secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Complexity Analysis\n                        </span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <p>\n                        <p><strong>Time Complexity: O(log<sub>10</sub>N + 1)</strong> where N is the input number. The time complexity is determined by the number of digits in the input integer N. In the worst case when N is a multiple of 10 the number of digits in N is log<sub>10</sub>N + 1. \n                        <ol><li>In the while loop we divide N by 10 until it becomes 0 which takes log<sub>10</sub>N iterations.</li><li>In each iteration of the while loop we perform constant time operations like division and increment the counter.</li></ol></p>\n\n                        <p><strong>Space Complexity : O(1)</strong> as only a constant amount of additional memory for the counter regardless of size of the input number.</p>\n\n                    </p>\n                </details>\n            </div>\n        </details>\n    </div>\n    <!-- Approach - 1 Ends here -->\n\n\n    <!-- Approach - 2 Starts from here -->\n\n    <div id=\"optimal-approach\">\n        <details>\n            <summary class=\"main-summary\">\n                <span>\n                    Optimal Approach \n                </span>\n                <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                    <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                    </path>\n                </svg>\n            </summary>\n            <div class=\"common-drops\">\n                <details class=\"secondary-details\" open=\"\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Algorithm / Intuition\n                        </span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <div class=\"approach-algorithm\">\n                        \n                        <p>The logarithmic base 10 of a positive integers gives the number of digits in n. We add 1 to the result to ensure that the count is correct even for numbers that are powers of 10.</p>\n                        <p>We cast the result to an integer to ensure that any fractional part is discarded giving the exact count of digits.</p>\n\n                        \n                        <p><strong>Algorithm</strong></p>\n                        <p><strong>Step 1: </strong>\n                        Initialise a variable to store the count of digits of the number.</p>\n                                                                     \n                        <p><strong>Step 2: </strong>The count of digits can be calculated using log<sub>10</sub> N + 1.\n                        <ol><li>log<sub>10</sub> N operation gives the logarithmic base 10 of  which returns the power to which 10 must be raised to, to be equal to N.</li><li>We add  1 to the result which accounts for the possibility that N itself is a power of 10.</li><li>Financially cast the result to an integer to ensure that it is rounded down to the nearest whole number.</li></ol></p>\n                        \n\n                                          \n                        <p><strong>Step 3: </strong>Return the value of count which represents the count of digits in the input integer N</p>\n                        \n                        \n                    </div>\n                </details>\n                <details class=\"code-section secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Code\n                        </span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <div class=\"code-tabs\">\n                        <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n                        <button class=\"code-tab\" data-lang=\"java\">Java</button>\n                        <button class=\"code-tab\" data-lang=\"python\">Python</button>\n                        <button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n                        <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n                            </path>\n                        </svg>\n                    </div>\n                    <div class=\"code-content\">\n                        <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n                            <pre class=\"wp-block-code\">\n                                <code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\n\n\n// Calculate the count of digits in 'n'\n// using logarithmic operation log10(n) + 1.\nint countDigits(int n){\n    // Initialize a variable 'cnt' to\n    // store the count of digits.\n    int cnt = (int)(log10(n)+1);\n\n    // The expression (int)(log10(n)+1)\n    // calculates the number of digits in 'n'\n    // and casts it to an integer.\n    \n    // Adding 1 to the result accounts\n    // for the case when 'n' is a power of 10,\n    // ensuring that the count is correct.\n   \n    // Finally, the result is cast\n    // to an integer to ensure it is rounded\n    // down to the nearest whole number.\n    \n    // Return the count of digits in 'n'.\n    return cnt;\n}\n\n\n\n\nint main() {\n    int N = 329823;\n    cout &lt;&lt; &quot;N: &quot;&lt;&lt; N &lt;&lt; endl;\n    int digits = countDigits(N);\n    cout &lt;&lt; &quot;Number of Digits in N: &quot;&lt;&lt; digits &lt;&lt; endl;\n    return 0;\n}\n                                </code>\n                            </pre>\n                        </div>\n                        <div class=\"code-block \" data-lang=\"java\">\n                            <pre class=\"wp-block-code\">\n                                <code lang=\"java\" class=\"language-java\">\nimport java.util.*;\n\npublic class Main {\n    // Calculate the count of digits in 'n'\n    // using logarithmic operation log10(n) + 1.\n    static int countDigits(int n) {\n        // Initialize a variable 'cnt' to\n        // store the count of digits.\n        int cnt = (int) (Math.log10(n) + 1);\n\n        // The expression (int)(Math.log10(n) + 1)\n        // calculates the number of digits in 'n'\n        // and casts it to an integer.\n\n        // Adding 1 to the result accounts\n        // for the case when 'n' is a power of 10,\n        // ensuring that the count is correct.\n\n        // Finally, the result is cast\n        // to an integer to ensure it is rounded\n        // down to the nearest whole number.\n\n        // Return the count of digits in 'n'.\n        return cnt;\n    }\n\n    public static void main(String[] args) {\n        int N = 329823;\n        System.out.println(&quot;N: &quot; + N);\n        int digits = countDigits(N);\n        System.out.println(&quot;Number of Digits in N: &quot; + digits);\n    }\n}\n                                </code>\n                            </pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"python\">\n                            <pre class=\"wp-block-code\">\n                                <code lang=\"python\" class=\"language-python\">\n                     \nimport math\n\n# Calculate the count of digits in 'n'\n# using logarithmic operation log10(n) + 1.\ndef countDigits(n):\n    # Initialize a variable 'cnt' to\n    # store the count of digits.\n    cnt = int(math.log10(n) + 1)\n\n    # The expression int(math.log10(n) + 1)\n    # calculates the number of digits in 'n'\n    # and casts it to an integer.\n    \n    # Adding 1 to the result accounts\n    # for the case when 'n' is a power of 10,\n    # ensuring that the count is correct.\n   \n    # Finally, the result is cast\n    # to an integer to ensure it is rounded\n    # down to the nearest whole number.\n    \n    # Return the count of digits in 'n'.\n    return cnt\n\n# Main function\nif __name__ == &quot;__main__&quot;:\n    N = 329823\n    print(&quot;N:&quot;, N)\n    digits = countDigits(N)\n    print(&quot;Number of Digits in N:&quot;, digits)\n\n                                </code>\n                            </pre>\n                        </div>\n                         <div class=\"code-block\" data-lang=\"javascript\">\n                        <pre class=\"wp-block-code\">\n                            <code lang=\"javascript\" class=\"language-javascript\">\n// Calculate the count of digits in 'n'\n// using logarithmic operation log10(n) + 1.\nfunction countDigits(n) {\n    // Initialize a variable 'cnt' to\n    // store the count of digits.\n    let cnt = Math.floor(Math.log10(n) + 1);\n\n    // The expression Math.floor(Math.log10(n) + 1)\n    // calculates the number of digits in 'n'\n    // and rounds it down to the nearest whole number.\n\n    // Adding 1 to the result accounts\n    // for the case when 'n' is a power of 10,\n    // ensuring that the count is correct.\n\n    // Return the count of digits in 'n'.\n    return cnt;\n}\n\nlet N = 329823;\nconsole.log(&quot;N: &quot; + N);\nlet digits = countDigits(N);\nconsole.log(&quot;Number of Digits in N: &quot; + digits);\n                            </code>\n                        </pre>\n                        </div>\n                        <p>\n                             <strong>Output: </strong>N: 329823</p>\n                             <p>Number of Digits in N: 6</p>\n\n                                               \n                    </div>\n                </details>\n                <details class=\"secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Complexity Analysis\n                        </span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <p>\n                        <p><strong>Time Complexity: O(1)</strong>as simple arithmetic operations in constant time are computed on integers.</p>\n                        <p><strong>Space Complexity : O(1)</strong>as only a constant amount of additional memory for the count variable regardless of size of the input number.\n</p>\n\n\n                    </p>\n                </details>\n            </div>\n        </details>\n    </div>\n</div>\n\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n    <details>\n        <summary class=\"main-summary\">\n            <span>\n                Video Explanation\n            </span>\n            <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n            </svg>\n        </summary>\n        <div class=\"yt-video-wrapper\">\n          <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1xNbjMdbjug?si=DbLwgdlyBuMwY0jH\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n        </div>\n    </details>\n</div>\n\n<script src=\"https://takeuforward.org/UXApproachDropDowns/2ApproachJSScript.js\"></script>\n\n<blockquote class=\"wp-block-quote\">\n    Special thanks to <strong><a href=\"https://www.linkedin.com/in/gauri-tomar-005048268\">Gauri Tomar</a></strong> for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,<strong><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\"> please check out this article</a></strong>\n</blockquote>\n\n\n<script>\n\n    const codeSections = document.querySelectorAll('.code-section');\n\n    // Get last selected language from localStorage or set default value\n    let lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp';\n\n    codeSections.forEach((section, sectionIndex) => {\n        const codeTabs = section.querySelectorAll('.code-tab');\n        const codeBlocks = section.querySelectorAll('.code-block');\n        const copyBtn = section.querySelector('.copy-btn');\n\n        codeTabs.forEach((tab) => {\n            tab.addEventListener('click', () => {\n                codeTabs.forEach((t) => {\n                    t.classList.remove('dsa_article_code_active');\n                });\n                tab.classList.add('dsa_article_code_active');\n\n                const lang = tab.dataset.lang;\n                const activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\n                codeBlocks.forEach((block) => {\n                    if (block === activeBlock) {\n                        block.classList.add('dsa_article_code_active');\n                    } else {\n                        block.classList.remove('dsa_article_code_active');\n                    }\n                });\n\n                // Update last selected language for all sections and store in localStorage\n                lastSelectedLanguage = lang;\n                localStorage.setItem('lastSelectedLanguage', lang);\n                codeSections.forEach((otherSection, otherIndex) => {\n                    if (otherIndex !== sectionIndex) {\n                        const otherTabs = otherSection.querySelectorAll('.code-tab');\n                        otherTabs.forEach((otherTab) => {\n                            if (otherTab.dataset.lang === lang) {\n                                otherTab.classList.add('dsa_article_code_active');\n                            } else {\n                                otherTab.classList.remove('dsa_article_code_active');\n                            }\n                        });\n                        const otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\n                        const otherCodeBlocks = otherSection.querySelectorAll('.code-block');\n                        otherCodeBlocks.forEach((block) => {\n                            if (block === otherActiveBlock) {\n                                block.classList.add('dsa_article_code_active');\n                            } else {\n                                block.classList.remove('dsa_article_code_active');\n                            }\n                        });\n                    }\n                });\n            });\n        });\n\n        // Handle copy button click event\n        copyBtn.addEventListener('click', () => {\n            const activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\n            navigator.clipboard.writeText(activeBlock.innerText);\n            copyBtn.classList.add('dsa_article_code_active');\n            setTimeout(() => {\n                copyBtn.classList.remove('dsa_article_code_active');\n            }, 1000);\n        });\n    });\n\n    // Set initial state of the tabs\n    codeSections.forEach((section) => {\n        const codeTabs = section.querySelectorAll('.code-tab');\n        const codeBlocks = section.querySelectorAll('.code-block');\n\n        codeTabs.forEach((tab) => {\n            if (tab.dataset.lang === lastSelectedLanguage) {\n                tab.classList.add('dsa_article_code_active');\n            } else {\n                tab.classList.remove('dsa_article_code_active');\n            }\n        });\n\n        codeBlocks.forEach((block) => {\n            if (block.dataset.lang === lastSelectedLanguage) {\n                block.classList.add('dsa_article_code_active');\n            } else {\n                block.classList.remove('dsa_article_code_active');\n            }\n        });\n    });\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>"
}