{
    "dislikes": 16,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:58 GMT+0530 (India Standard Time)",
    "slug": "move-all-zeros-to-the-end-of-the-array",
    "aid": "1637",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/move-zeros-to-end",
    "title": "Move all Zeros to the end of the array",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "two-pointers",
            "topic-title": "Two Pointer"
        }
    ],
    "category_tag": "data-structure",
    "likes": 482,
    "preview": "In this article we will learn how to solve the most asked coding interview problem: \"Move all Zeros to the end of the array\" Problem Statement: You are given an array of integers, your task is to m...",
    "content": "<!-- wp:paragraph -->\n<p>In this article we will learn how to solve the most asked coding interview problem: \"Move all Zeros to the end of the array\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> You are given an array of integers, your task is to move all the zeros in the array to the end of the array and move non-negative integers to the front by maintaining their order.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\"><!-- Insert New Examples Here -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> 1 ,0 ,2 ,3 ,0 ,4 ,0 ,1\n<strong>Output:</strong> 1 ,2 ,3 ,4 ,1 ,0 ,0 ,0\n<strong>Explanation:</strong> All the zeros are moved to the end and non-negative integers are moved to front by maintaining order\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> 1,2,0,1,0,4,0\n<strong>Output:</strong> 1,2,1,4,0,0,0\n<strong>Explanation:</strong> All the zeros are moved to the end and non-negative integers are moved to front by maintaining order</pre></pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Practice Section-->\n<div class=\"practice\">\n<span><strong>Practice: </strong></span>\n<div class=\"problem-buttons\">\n\n<!-- Add Problem Link inside href -->\n<a href=\"https://bit.ly/3MrYBRa\" target=\"_blank\" rel=\"noopener\">\n<span>Solve Problem</span>\n<img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Group-11-5.png\" alt=\"code-studio\">\n</a>\n</div>\n</div>\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out\nyourself first. </em></p>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<div class=\"horizontal_navbar_dsa_article\">\n<div class=\"grid_container_two\">\n<a href=\"#brute-force-approach\" class=\"two-boxes box-a\">\nBrute Force Approach\n</a>\n<a href=\"#optimal-approach\" class=\"two-boxes box-c\">\nOptimal Approach\n</a>\n<a href=\"#dsa_article_video_explanation\" class=\"three-boxes box-d\">\n<svg width=\"26\" height=\"26\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8 10L13.19 7L8 4V10ZM19.56 2.17C19.69 2.64 19.78 3.27 19.84 4.07C19.91 4.87 19.94 5.56 19.94 6.16L20 7C20 9.19 19.84 10.8 19.56 11.83C19.31 12.73 18.73 13.31 17.83 13.56C17.36 13.69 16.5 13.78 15.18 13.84C13.88 13.91 12.69 13.94 11.59 13.94L10 14C5.81 14 3.2 13.84 2.17 13.56C1.27 13.31 0.69 12.73 0.44 11.83C0.31 11.36 0.22 10.73 0.16 9.93C0.0900001 9.13 0.0599999 8.44 0.0599999 7.84L0 7C0 4.81 0.16 3.2 0.44 2.17C0.69 1.27 1.27 0.69 2.17 0.44C2.64 0.31 3.5 0.22 4.82 0.16C6.12 0.0899998 7.31 0.0599999 8.41 0.0599999L10 0C14.19 0 16.8 0.16 17.83 0.44C18.73 0.69 19.31 1.27 19.56 2.17Z\" fill=\"red\"></path>\n</svg>\n\n</a>\n<div class=\"box-e tooltip\">\n<svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.842 9.25L11.9577 10.17C11.2502 10.89 10.8081 11.5 10.8081 13H8.84297V12.5C8.84297 11.39 9.28511 10.39 9.99255 9.67L11.2109 8.41C11.5745 8.05 11.7906 7.55 11.7906 7C11.7906 6.46957 11.5836 5.96086 11.2151 5.58579C10.8465 5.21071 10.3467 5 9.82552 5C9.30434 5 8.80451 5.21071 8.43598 5.58579C8.06745 5.96086 7.86041 6.46957 7.86041 7H5.89531C5.89531 5.93913 6.30938 4.92172 7.04644 4.17157C7.7835 3.42143 8.78316 3 9.82552 3C10.8679 3 11.8675 3.42143 12.6046 4.17157C13.3417 4.92172 13.7557 5.93913 13.7557 7C13.7543 7.84324 13.4259 8.65183 12.842 9.25ZM10.8081 17H8.84297V15H10.8081M9.82552 0C8.53521 0 7.25754 0.258658 6.06545 0.761205C4.87337 1.26375 3.79021 2.00035 2.87783 2.92893C1.03519 4.8043 0 7.34784 0 10C0 12.6522 1.03519 15.1957 2.87783 17.0711C3.79021 17.9997 4.87337 18.7362 6.06545 19.2388C7.25754 19.7413 8.53521 20 9.82552 20C12.4314 20 14.9306 18.9464 16.7732 17.0711C18.6158 15.1957 19.651 12.6522 19.651 10C19.651 4.47 15.2296 0 9.82552 0Z\" fill=\"black\"></path>\n</svg>\n<div class=\"bottom\">\n<p>Expand any one approach by clicking the given options in the bar. Clicking one approach on bar,\ncloses all other expands. You can manually expand more than one approach at a time</p>\n<i></i>\n</div>\n\n</div>\n</div>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Approaches Drop-Down -->\n<div class=\"dsa_article_dropdown_approachs \">\n\n<!-- Brute Force Approach Starts from here -->\n<div id=\"brute-force-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBrute Force Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<!-- Insert Algorithm / Intuition of Brute Force Apporach Here -->\n<h3><strong>Solution 1:</strong></h3>\n<h3><strong>Brute Force Approach</strong>:&nbsp;</h3>\n<p>The extremely naive solution, we can think of, involves the use of an extra array. The algorithm is as follows.</p>\n<h3><strong>Algorithm:</strong></h3>\n<ul><li>Suppose, there are <strong>N-X </strong>zeros and <strong>X </strong>non-zero elements in the array. We will first copy those <strong>X</strong> non-zero elements from the original array to a temporary array.&nbsp;</li><li>Then, we will copy the elements from the temporary array one by one and fill the first <strong>X </strong>places of the original array.&nbsp;</li><li>The last <strong>N-X </strong>places of the original array will be then filled with zero. Now, our task is completed.</li></ul>\n<p><strong>Dry run:</strong> <em>Please refer </em><a href=\"https://youtu.be/wvcQg43_V8U\"><em>video</em></a><em> for it.</em></p>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n\n<!-- Insert C++ code of Brute Force Here -->\n#include &lt;bits/stdc++.h>\nusing namespace std;\n\nvector&lt;int> moveZeros(int n, vector&lt;int> a) {\n    //temporary array:\n    vector&lt;int> temp;\n    //copy non-zero elements\n    //from original -> temp array:\n    for (int i = 0; i &lt; n; i++) {\n        if (a[i] != 0)\n            temp.push_back(a[i]);\n    }\n\n    // number of non-zero elements.\n    int nz = temp.size();\n\n    //copy elements from temp\n    //fill first nz fields of\n    //original array:\n    for (int i = 0; i &lt; nz; i++) {\n        a[i] = temp[i];\n    }\n\n    //fill rest of the cells with 0:\n    for (int i = nz; i &lt; n; i++) {\n        a[i] = 0;\n    }\n    return a;\n}\n\n\nint main()\n{\n    vector&lt;int> arr = {1, 0, 2, 3, 2, 0, 0, 4, 5, 1};\n    int n = 10;\n    vector&lt;int> ans = moveZeros(n, arr);\n    for (auto &amp;it : ans) {\n        cout &lt;&lt; it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; '\\n';\n    return 0;\n}\n\n</code>\n</pre>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\n\n<!-- Insert Java code of Brute Force Here -->\nimport java.util.*;\n\npublic class tUf {\n    public static int[] moveZeros(int n, int []a) {\n        //temporary array:\n        ArrayList&lt;Integer> temp = new ArrayList&lt;>();\n        //copy non-zero elements\n        //from original -> temp array:\n        for (int i = 0; i &lt; n; i++) {\n            if (a[i] != 0)\n                temp.add(a[i]);\n        }\n\n        // number of non-zero elements.\n        int nz = temp.size();\n\n        //copy elements from temp\n        //fill first nz fields of\n        //original array:\n        for (int i = 0; i &lt; nz; i++) {\n            a[i] = temp.get(i);\n        }\n\n        //fill rest of the cells with 0:\n        for (int i = nz; i &lt; n; i++) {\n            a[i] = 0;\n        }\n        return a;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {1, 0, 2, 3, 2, 0, 0, 4, 5, 1};\n        int n = 10;\n        int[] ans = moveZeros(n, arr);\n        for (int i = 0; i &lt; n; i++) {\n            System.out.print(ans[i] + \" \");\n        }\n        System.out.println(\"\");\n    }\n}\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\n\n<!-- Insert Python code of Brute Force Here -->\ndef moveZeros(n: int,  a: [int]) -> [int]:\n    # Temporary array\n    temp = []\n    \n    # Copy non-zero elements from original to temp array\n    for i in range(n):\n        if a[i] != 0:\n            temp.append(a[i])\n    \n    # Number of non-zero elements\n    nz = len(temp)\n    \n    # Copy elements from temp to fill first nz fields of original array\n    for i in range(nz):\n        a[i] = temp[i]\n    \n    # Fill the rest of the cells with 0\n    for i in range(nz, n):\n        a[i] = 0\n    \n    return a\n\narr = [1, 0, 2, 3, 2, 0, 0, 4, 5, 1]\nn = 10\nans = moveZeros(n, arr)\nfor it in ans:\n    print(it, end=\" \")\nprint()\n\n\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\n<!-- Insert javascript code of Brute Force Here -->\nfunction moveZeros(n, a) {\n    // Temporary array\n    let temp = [];\n    \n    // Copy non-zero elements from original array to temp array\n    for (let i = 0; i &lt; n; i++) {\n        if (a[i] !== 0) {\n            temp.push(a[i]);\n        }\n    }\n    \n    // Number of non-zero elements\n    let nz = temp.length;\n    \n    // Copy elements from temp and fill the first nz fields of the original array\n    for (let i = 0; i &lt; nz; i++) {\n        a[i] = temp[i];\n    }\n    \n    // Fill the rest of the cells with 0\n    for (let i = nz; i &lt; n; i++) {\n        a[i] = 0;\n    }\n    \n    return a;\n}\n\nlet arr = [1, 0, 2, 3, 2, 0, 0, 4, 5, 1];\nlet n = 10;\nlet ans = moveZeros(n, arr);\nconsole.log(ans.join(' '));\n\n</code>\n</pre>\n</div>\n<p>\n<!-- Insert Output of Brute Force Here -->\n<p><strong>Output:</strong> 1 2 3 2 4 5 1 0 0 0</p> \n\n</p>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n<!-- Insert Time and Space Complexity of Brute Force Here -->\n<p><strong>Time Complexity: </strong>O(N) + O(X) + O(N-X) ~ O(2*N), where N = total no. of elements,<br>X = no. of non-zero elements, and N-X = total no. of zeros.<br><strong>Reason: </strong>O(N) for copying non-zero elements from the original to the temporary array. O(X) for again copying it back from the temporary to the original array. O(N-X) for filling zeros in the original array. So, the total time complexity will be O(2*N).</p>\n<p><strong>Space Complexity: </strong>O(N), as we are using a temporary array to solve this problem and the maximum size of the array can be N in the worst case.<br><strong>Reason: </strong>The temporary array stores the non-zero elements. In the worst case, all the given array elements will be non-zero.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Brute Force Approach Ends here -->\n\n\n<!-- Optimal Approach Starts from here -->\n\n<div id=\"optimal-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nOptimal Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<!-- Insert Algorithm of Better Approach Here -->\n<h3><strong>Optimal Approach(Using 2 pointers)</strong>:&nbsp;</h3>\n<p>We can optimize the approach using 2 pointers i.e. i and j. The pointer j will point to the first 0 in the array and i will point to the next index.</p>\n<p>Assume, the given array is {1, 0, 2, 3, 2, 0, 0, 4, 5, 1}. Now, initially, we will place the 2-pointers like the following:</p>\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/06/Screenshot-2023-06-26-162005.png\" alt=\"\" class=\"wp-image-11440\"/></figure>\n<p>The algorithm will be the following.</p>\n<h3><strong>Algorithm:</strong></h3>\n<ol><li>First, using a loop, we will place the pointer j. If we don\u2019t find any 0, we will not perform the following steps.</li><li>After that, we will point i to index j+1 and start moving the pointer using a loop.</li><li>While moving the pointer i, we will do the following:<ol><li><strong>If a[i] != 0 i.e. a[i] is a non-zero element: </strong>We will swap a[i] and a[j]. Now, the current j is pointing to the non-zero element a[i]. So, we will shift the pointer j by 1 so that it can again point to the first zero.</li></ol></li><li>Finally, our array will be set in the right manner.</li></ol>\n<p><strong>Dry run: </strong><em>Please refer </em><a href=\"https://youtu.be/wvcQg43_V8U\"><em>video</em></a><em> for a detailed dry run.</em></p>\n<p>The first 2 steps are shown below:</p>\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/06/Screenshot-2023-06-26-162339.png\" alt=\"\" class=\"wp-image-11441\"/></figure>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n\n<!-- Insert C++ code of Optimal Approach Here-->\n#include &lt;bits/stdc++.h>\nusing namespace std;\n\nvector&lt;int> moveZeros(int n, vector&lt;int> a) {\n    int j = -1;\n    //place the pointer j:\n    for (int i = 0; i &lt; n; i++) {\n        if (a[i] == 0) {\n            j = i;\n            break;\n        }\n    }\n\n    //no non-zero elements:\n    if (j == -1) return a;\n\n    //Move the pointers i and j\n    //and swap accordingly:\n    for (int i = j + 1; i &lt; n; i++) {\n        if (a[i] != 0) {\n            swap(a[i], a[j]);\n            j++;\n        }\n    }\n    return a;\n}\n\n\nint main()\n{\n    vector&lt;int> arr = {1, 0, 2, 3, 2, 0, 0, 4, 5, 1};\n    int n = 10;\n    vector&lt;int> ans = moveZeros(n, arr);\n    for (auto &amp;it : ans) {\n        cout &lt;&lt; it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; '\\n';\n    return 0;\n}\n</code>\n</pre>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\n\n<!-- Insert Java code of Optimal Approach Here -->\nimport java.util.*;\n\npublic class tUf {\n    public static int[] moveZeros(int n, int []a) {\n        int j = -1;\n        //place the pointer j:\n        for (int i = 0; i &lt; n; i++) {\n            if (a[i] == 0) {\n                j = i;\n                break;\n            }\n        }\n\n        //no non-zero elements:\n        if (j == -1) return a;\n\n        //Move the pointers i and j\n        //and swap accordingly:\n        for (int i = j + 1; i &lt; n; i++) {\n            if (a[i] != 0) {\n                //swap a[i] &amp; a[j]:\n                int tmp = a[i];\n                a[i] = a[j];\n                a[j] = tmp;\n                j++;\n            }\n        }\n        return a;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {1, 0, 2, 3, 2, 0, 0, 4, 5, 1};\n        int n = 10;\n        int[] ans = moveZeros(n, arr);\n        for (int i = 0; i &lt; n; i++) {\n            System.out.print(ans[i] + \" \");\n        }\n        System.out.println(\"\");\n    }\n}\n\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\n\n<!-- Insert Python code of Optimal Approach Here -->\ndef moveZeros(n: int,  a: [int]) -> [int]:\n    j = -1\n    # Place the pointer j\n    for i in range(n):\n        if a[i] == 0:\n            j = i\n            break\n    \n    # No non-zero elements\n    if j == -1:\n        return a\n    \n    # Move the pointers i and j and swap accordingly\n    for i in range(j + 1, n):\n        if a[i] != 0:\n            a[i], a[j] = a[j], a[i]\n            j += 1\n    \n    return a\n\n\narr = [1, 0, 2, 3, 2, 0, 0, 4, 5, 1]\nn = 10\nans = moveZeros(n, arr)\nfor it in ans:\n    print(it, end=' ')\nprint()\n\n\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\n<!-- Insert javascript code of Brute Force Here -->\nfunction moveZeros(n, a) {\n    let j = -1;\n    \n    // Place the pointer j\n    for (let i = 0; i &lt; n; i++) {\n        if (a[i] === 0) {\n            j = i;\n            break;\n        }\n    }\n    \n    // No non-zero elements\n    if (j === -1) return a;\n    \n    // Move the pointers i and j and swap accordingly\n    for (let i = j + 1; i &lt; n; i++) {\n        if (a[i] !== 0) {\n            [a[i], a[j]] = [a[j], a[i]];\n            j++;\n        }\n    }\n    \n    return a;\n}\n\nlet arr = [1, 0, 2, 3, 2, 0, 0, 4, 5, 1];\nlet n = 10;\nlet ans = moveZeros(n, arr);\nconsole.log(ans.join(' '));\n\n</code>\n</pre>\n</div>\n<p>\n<!-- Insert Output of Optimal Apporach Here -->\n<p><strong>Output:</strong> 1 2 3 2 4 5 1 0 0 0</p> \n\n</p>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n\n<!-- Insert Time and Space Complexity of Optimal Approach-->\n<p><strong>Time Complexity: </strong>O(N), N = size of the array.<br><strong>Reason: </strong>We have used 2 loops and using those loops, we are basically traversing the array once.</p>\n<p><strong>Space Complexity: </strong>O(1) as we are not using any extra space to solve this problem.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Optimal Approach Starts from here -->\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n<details>\n<summary class=\"main-summary\">\n<span>\nVideo Explanation\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"yt-video-wrapper\">\n\n<!-- Insert iframe embed Link of Youtube Video-->\n<iframe class=\"lazy-loaded\" loading=\"lazy\" title=\"Move Zeros to End\" width=\"810\" height=\"456\" data-lazy-type=\"iframe\" data-src=\"https://www.youtube.com/embed/wvcQg43_V8U?start=1633\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/wvcQg43_V8U?feature=oembed\"></iframe><noscript>\n<iframe loading=\"lazy\" title=\"Move Zeros to End\" width=\"810\" height=\"456\" src=\"https://www.youtube.com/embed/wvcQg43_V8U?start=1633\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"></iframe></noscript>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script>\n\nconst codeSections = document.querySelectorAll('.code-section');\n\n// Get last selected language from localStorage or set default value\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\n// Update last selected language for all sections and store in localStorage\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\n// Handle copy button click event\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\n// Set initial state of the tabs\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<script>\nconst codeSections = document.querySelectorAll('.code-section');\n\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script src=\"https://takeuforward.org/UXApproachDropDowns/2ApproachJSScript.js\"></script>\n<!-- /wp:html -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to\u00a0<strong><a href=\"https://www.linkedin.com/in/sai-bargav-nellepalli-74799b1bb/\" target=\"_blank\" rel=\"noreferrer noopener\">Sai bargav Nellepalli</a></strong> and <strong><a href=\"https://www.linkedin.com/in/kriti39/\" title=\"\">KRITIDIPTA GHOSH</a></strong>\u00a0for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}