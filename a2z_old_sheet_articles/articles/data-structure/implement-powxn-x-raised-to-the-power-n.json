{
    "dislikes": 17,
    "video": "l0YC3876qxg",
    "publishedOn": "Sun Mar 24 2024 22:09:18 GMT+0530 (India Standard Time)",
    "slug": "implement-powxn-x-raised-to-the-power-n",
    "aid": "1449",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/pow(x,n)",
    "title": "Implement Pow(x,n) | X raised to the power N",
    "topics": [
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "maths",
            "topic-title": "Maths"
        }
    ],
    "category_tag": "data-structure",
    "likes": 146,
    "preview": "Problem Statement: Given a double x and integer n, calculate x raised to power n. Basically Implement pow(x, n). Examples: Example 1: Input: x = 2.00000, n = 10 Output: 1024.00000 Explanation: You...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> Given a double x and integer n, calculate x raised to power n. Basically Implement pow(x, n).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Examples:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n\n<strong>Input:</strong> x = 2.00000, n = 10\n\n<strong>Output:</strong> 1024.00000\n\n<strong>Explanation:</strong> You need to calculate 2.00000 raised to 10 which gives ans 1024.00000\n\n<strong>Example 2:</strong>\n\n<strong>Input:</strong> x = 2.10000, n = 3\n\n<strong>Output:</strong> 9.26100\n\n<strong>Explanation:</strong> You need to calculate 2.10000 raised to 3 which gives ans 9.26100\n</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Solution</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph {\"textColor\":\"vivid-red\"} -->\n<p class=\"has-vivid-red-color has-text-color\"><strong><em>Disclaimer</em></strong>: <em>Don't jump directly to the solution, try it out yourself first.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 1: </strong>Brute force approach&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach:&nbsp; </strong>Looping from 1 to n and keeping a ans(double) variable. Now every time your loop runs, multiply x with ans. At last, we will return the ans.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Now if n is negative we must <a href=\"https://takeuforward.org/data-structure/check-whether-a-number-is-positive-or-negative/\" target=\"_blank\" rel=\"noreferrer noopener\">check if n is negative</a>, if it is negative divide 1 by the and.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ndouble myPow(double x, int n) {\n      double ans = 1.0;\n      for (int i = 0; i &lt; n; i++) {\n        ans = ans * x;\n      }\n      return ans;\n}\nint main()\n{\n    cout&lt;&lt;myPow(2,10)&lt;&lt;endl;\n}</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> 1024</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\"> import java.util.*;\n public class Main{\n public static double myPow(double x, int n) {\n        double ans = 1.0;\n        for(int i = 0; i&lt;n; i++){\n            ans = ans * x;\n        }\n        return ans;\n    }\n    public static void main(String args[])\n    {\n        System.out.println(myPow(2,10));\n    }\n }\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> 1024.0</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">def myPow(x: float, n: int) -> float:\n    ans = 1.0\n    for i in range(n):\n        ans = ans * x\n    return ans\n\nif __name__ == \"__main__\":\n    print(myPow(2, 10))\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> 1024.0</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 2: </strong>Using <a href=\"https://takeuforward.org/data-structure/calculate-the-power-of-a-number-binary-exponentiation/\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Binary Exponentiation</strong></a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach</strong>: Initialize ans as 1.0&nbsp; and store a duplicate copy of n i.e nn using to avoid overflow</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Check if nn is a negative number, in that case, make it a positive number.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Keep on iterating until nn is greater than zero, now if nn is an odd power then multiply x with ans ans reduce nn by 1. Else multiply x with itself and divide nn by two.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Now after the entire binary exponentiation is complete and nn becomes zero, check if n is a negative value we know the answer will be 1 by and.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong> </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\ndouble myPow(double x, int n) {\n  double ans = 1.0;\n  long long nn = n;\n  if (nn &lt; 0) nn = -1 * nn;\n  while (nn) {\n    if (nn % 2) {\n      ans = ans * x;\n      nn = nn - 1;\n    } else {\n      x = x * x;\n      nn = nn / 2;\n    }\n  }\n  if (n &lt; 0) ans = (double)(1.0) / (double)(ans);\n  return ans;\n}\n\nint main() {\n  cout &lt;&lt; myPow(2, 10) &lt;&lt; endl;\n}</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output: </strong>1024</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(log n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\"> import java.util.*;\n public class Main{\n public static double myPow(double x, int n) {\n    double ans = 1.0;\n    long nn = n;\n    if (nn &lt; 0) nn = -1 * nn;\n    while (nn &gt; 0) {\n      if (nn % 2 == 1) {\n        ans = ans * x;\n        nn = nn - 1;\n      } else {\n        x = x * x;\n        nn = nn / 2;\n      }\n    }\n    if (n &lt; 0) ans = (double)(1.0) / (double)(ans);\n    return ans;\n  }\n\n    public static void main(String args[])\n    {\n        System.out.println(myPow(2,10));\n    }\n }\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output: </strong>1024.0</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(log n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">def myPow(x: float, n: int) -> float:\n    ans = 1.0\n    nn = n\n    if nn &lt; 0:\n        nn = -1 * nn\n    while nn:\n        if nn % 2:\n            ans = ans * x\n            nn = nn - 1\n        else:\n            x = x * x\n            nn = nn // 2\n    if n &lt; 0:\n        ans = 1.0 / ans\n    return ans\n\nif __name__ == \"__main__\":\n    print(myPow(2, 10))</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output: </strong>1024.0</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(log n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to\u00a0<strong><a href=\"https://www.linkedin.com/in/rushikeshadhav\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"><strong>Rushikesh Adhav</strong></a></strong>\u00a0 <em>and\u00a0<strong><em><a href=\"https://www.linkedin.com/in/imsudip/\" target=\"_blank\" rel=\"noreferrer noopener\">Sudip Ghosh</a></em></strong></em></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}