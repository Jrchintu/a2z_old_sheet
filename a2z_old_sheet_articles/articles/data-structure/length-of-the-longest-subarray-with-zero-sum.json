{
    "dislikes": 43,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:05 GMT+0530 (India Standard Time)",
    "slug": "length-of-the-longest-subarray-with-zero-sum",
    "aid": "1386",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/longest-subarray-with-sum-k",
    "title": "Length of the longest subarray with zero Sum",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        }
    ],
    "likes": 279,
    "category_tag": "data-structure",
    "preview": "Problem Statement: Given an array containing both positive and negative integers, we have to find the length of the longest subarray with the sum of all elements equal to zero. Examples Example 1:...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> Given an array containing both positive and negative integers, we have to find the length of the longest subarray with the sum of all elements equal to zero.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\"><!-- Insert New Examples Here -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input Format</strong>: N = 6, array[] = {9, -3, 3, -1, 6, -5}\n<strong>Result</strong>: 5\n<strong>Explanation</strong>: The following subarrays sum to zero:\n{-3, 3} , {-1, 6, -5}, {-3, 3, -1, 6, -5}\nSince we require the length of the longest subarray, our answer is 5!\n\n<strong>Example 2:</strong>\n<strong>Input Format:</strong> N = 8, array[] = {6, -2, 2, -8, 1, 7, 4, -10}\n<strong>Result</strong>: 8\nSubarrays with sum 0 : {-2, 2}, {-8, 1, 7}, {-2, 2, -8, 1, 7}, {6, -2, 2, -8, 1, 7, 4, -10}\nLength of longest subarray = 8\n\n<strong>Example 3:</strong>\n<strong>Input Format:</strong> N = 3, array[] = {1, 0, -5}\n<strong>Result</strong>: 1\nSubarray : {0}\nLength of longest subarray = 1\n\n<strong>Example 4:</strong>\n<strong>Input Format:</strong> N = 5, array[] = {1, 3, -5, 6, -2}\n<strong>Result</strong>: 0\nSubarray: There is no subarray that sums to zero\n\n</pre>\n</pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Practice Section-->\n<div class=\"practice\">\n<span><strong>Practice: </strong></span>\n<div class=\"problem-buttons\">\n\n<!-- Add Problem Link inside href -->\n<a href=\"https://bit.ly/42OqnNq\" target=\"_blank\" rel=\"noopener\">\n<span>Solve Problem</span>\n<img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Group-11-5.png\" alt=\"code-studio\">\n</a>\n</div>\n</div>\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out\nyourself first. </em></p>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<div class=\"horizontal_navbar_dsa_article\">\n<div class=\"grid_container_two\">\n<a href=\"#brute-force-approach\" class=\"two-boxes box-a\">\nBrute Force Approach\n</a>\n<a href=\"#optimal-approach\" class=\"two-boxes box-c\">\nOptimal Approach\n</a>\n<a href=\"#dsa_article_video_explanation\" class=\"three-boxes box-d\">\n<svg width=\"26\" height=\"26\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8 10L13.19 7L8 4V10ZM19.56 2.17C19.69 2.64 19.78 3.27 19.84 4.07C19.91 4.87 19.94 5.56 19.94 6.16L20 7C20 9.19 19.84 10.8 19.56 11.83C19.31 12.73 18.73 13.31 17.83 13.56C17.36 13.69 16.5 13.78 15.18 13.84C13.88 13.91 12.69 13.94 11.59 13.94L10 14C5.81 14 3.2 13.84 2.17 13.56C1.27 13.31 0.69 12.73 0.44 11.83C0.31 11.36 0.22 10.73 0.16 9.93C0.0900001 9.13 0.0599999 8.44 0.0599999 7.84L0 7C0 4.81 0.16 3.2 0.44 2.17C0.69 1.27 1.27 0.69 2.17 0.44C2.64 0.31 3.5 0.22 4.82 0.16C6.12 0.0899998 7.31 0.0599999 8.41 0.0599999L10 0C14.19 0 16.8 0.16 17.83 0.44C18.73 0.69 19.31 1.27 19.56 2.17Z\" fill=\"red\"></path>\n</svg>\n\n</a>\n<div class=\"box-e tooltip\">\n<svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.842 9.25L11.9577 10.17C11.2502 10.89 10.8081 11.5 10.8081 13H8.84297V12.5C8.84297 11.39 9.28511 10.39 9.99255 9.67L11.2109 8.41C11.5745 8.05 11.7906 7.55 11.7906 7C11.7906 6.46957 11.5836 5.96086 11.2151 5.58579C10.8465 5.21071 10.3467 5 9.82552 5C9.30434 5 8.80451 5.21071 8.43598 5.58579C8.06745 5.96086 7.86041 6.46957 7.86041 7H5.89531C5.89531 5.93913 6.30938 4.92172 7.04644 4.17157C7.7835 3.42143 8.78316 3 9.82552 3C10.8679 3 11.8675 3.42143 12.6046 4.17157C13.3417 4.92172 13.7557 5.93913 13.7557 7C13.7543 7.84324 13.4259 8.65183 12.842 9.25ZM10.8081 17H8.84297V15H10.8081M9.82552 0C8.53521 0 7.25754 0.258658 6.06545 0.761205C4.87337 1.26375 3.79021 2.00035 2.87783 2.92893C1.03519 4.8043 0 7.34784 0 10C0 12.6522 1.03519 15.1957 2.87783 17.0711C3.79021 17.9997 4.87337 18.7362 6.06545 19.2388C7.25754 19.7413 8.53521 20 9.82552 20C12.4314 20 14.9306 18.9464 16.7732 17.0711C18.6158 15.1957 19.651 12.6522 19.651 10C19.651 4.47 15.2296 0 9.82552 0Z\" fill=\"black\"></path>\n</svg>\n<div class=\"bottom\">\n<p>Expand any one approach by clicking the given options in the bar. Clicking one approach on bar,\ncloses all other expands. You can manually expand more than one approach at a time</p>\n<i></i>\n</div>\n\n</div>\n</div>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Approaches Drop-Down -->\n<div class=\"dsa_article_dropdown_approachs \">\n\n<!-- Brute Force Approach Starts from here -->\n<div id=\"brute-force-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBrute Force Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<!-- Insert Algorithm / Intuition of Brute Force Apporach Here -->\n<h3><strong>Solution 1 (Naive approach) :</strong></h3>\n<h3><strong>Intuition</strong>:</h3>\n<p>We are required to find the longest subarray that sums to zero. So our initial approach could be to consider all possible subarrays of the given array and check for the subarrays that sum to zero. Among these valid subarrays (a sum equal to zero) we\u2019ll return the length of the largest subarray by maintaining a variable, say max.&nbsp;&nbsp;&nbsp;</p>\n<h3><strong>Approach :</strong>&nbsp;&nbsp;</h3>\n<ol><li>Initialize a variable max = 0, which stores the length of the longest subarray with a sum of 0.</li><li>Traverse the array from the start and initialize a variable sum = 0 which stores the sum of the subarray starting with the current index</li><li>Traverse from the next element of current_index up to the end of the array, each time add the element to the sum and check if it is equal to 0.<ol><li>If sum = 0, check if the length of the subarray so far is > max and if yes update max</li></ol></li><li>Now keep adding elements and repeat step 3 a.</li><li>After the outer loop traverses all elements return max</li></ol>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n\n<!-- Insert C++ code of Brute Force Here -->\n#include &lt;bits/stdc++.h>\nusing namespace std;\n\nint solve(vector&lt;int>&amp; a) {\n    int maxLen = 0;\n    unordered_map&lt;int, int> sumIndexMap;\n    int sum = 0;\n\n    for (int i = 0; i &lt; a.size(); i++) {\n        sum += a[i];\n\n        if (sum == 0) {\n            maxLen = i + 1;\n        } else if (sumIndexMap.find(sum) != sumIndexMap.end()) {\n            maxLen = max(maxLen, i - sumIndexMap[sum]);\n        } else {\n            sumIndexMap[sum] = i;\n        }\n    }\n\n    return maxLen;\n}\n\nint main() {\n    vector&lt;int> a = {9, -3, 3, -1, 6, -5};\n    cout &lt;&lt; solve(a) &lt;&lt; endl;\n\n    return 0;\n}\n\n</code>\n</pre>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\n\n<!-- Insert Java code of Brute Force Here -->\nimport java.util.*;\n\npublic class Solution {\nstatic int solve(int[] a){\n\tint  max = 0;\n\tfor(int i = 0; i &lt; a.length; ++i){\n\t\tint sum = 0;\n\t\tfor(int j = i; j &lt; a.length; ++j){\n\t\t\tsum += a[j];\n\t\t\tif(sum == 0){\n\t\t\t\tmax = Math.max(max, j-i+1);\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n   }\n\n    public static void main(String args[]) \n    { \n        int a[] = {9, -3, 3, -1, 6, -5};\n        System.out.println(solve(a));\n    } \n}\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\n\n<!-- Insert Python code of Brute Force Here -->\nfrom typing import List\n\ndef solve(a: List[int]) -&gt; int:\n    maxx = 0\n    for i in range(len(a)):\n        sum = 0\n        for j in range(i, len(a)):\n            sum += a[j]\n            if sum == 0:\n                maxx = max(maxx, j-i+1)\n    return maxx\n\nif __name__ == \"__main__\":\n    a = [9, -3, 3, -1, 6, -5]\n    print(solve(a))\n\n\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\n<!-- Insert javascript code of Brute Force Here -->\nfunction solve(a) {\n  let maxLen = 0;\n  let sumIndexMap = new Map();\n  let sum = 0;\n\n  for (let i = 0; i &lt; a.length; i++) {\n    sum += a[i];\n\n    if (sum === 0) {\n      maxLen = i + 1;\n    } else if (sumIndexMap.has(sum)) {\n      maxLen = Math.max(maxLen, i - sumIndexMap.get(sum));\n    } else {\n      sumIndexMap.set(sum, i);\n    }\n  }\n\n  return maxLen;\n}\n\nlet a = [9, -3, 3, -1, 6, -5];\nconsole.log(solve(a));\n\n</code>\n</pre>\n</div>\n<p>\n<!-- Insert Output of Brute Force Here -->\n<p><strong>Output:</strong> 5</p> \n\n</p>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n<!-- Insert Time and Space Complexity of Brute Force Here -->\n<p><strong>Time Complexity</strong>: O(N^2) as we have two loops for traversal</p>\n<p><strong>Space Complexity</strong>: O(1) as we aren\u2019t using any extra space.</p>\n<p>Can this be done in a single traversal? Let\u2019s check :)</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Brute Force Approach Ends here -->\n\n\n<!-- Optimal Approach Starts from here -->\n\n<div id=\"optimal-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nOptimal Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<!-- Insert Algorithm of Better Approach Here -->\n<h3><strong>Solution 2 (Optimised Approach):</strong></h3>\n<h3><strong>Intuition</strong>:\u00a0 </h3>\n<p>Now let\u2019s say we know that the sum of subarray(i, j) = S, and we also know that the sum of subarray(i, x) = S where i &lt; x &lt; j. We can conclude that the sum of subarray(x+1, j) = 0.</p>\n<p>Let us understand the above statement clearly,</p>\n<p>So in this problem, we\u2019ll store the <a href=\"https://takeuforward.org/data-structure/prefix-sum-technique/\" target=\"_blank\" rel=\"noreferrer noopener\">prefix sum</a> of every element, and if we observe that 2 elements have the same prefix sum, we can conclude that the 2nd part of this subarray sums to zero</p>\n<p>Now let\u2019s understand the approach</p>\n<h3><strong>Approach</strong>:&nbsp;</h3>\n<ol><li>First, let us initialize a variable say <strong>sum</strong> <strong>= 0</strong> which stores the sum of elements traversed so far and another variable says max = 0 which stores the length of the longest subarray with sum zero.</li><li>Declare a HashMap&lt;Integer, Integer&gt; which stores the prefix sum of every element as a key and its index as a value.</li><li>Now traverse the array, and add the array element to our sum.&nbsp;</li></ol>\n<p>&nbsp;(i)&nbsp; If sum = 0, then we can say that the subarray until the current index has a sum = 0,&nbsp; &nbsp; &nbsp; so we update max with the maximum value of (max, current_index+1)</p>\n<p>(ii)&nbsp; If the sum is not equal to zero then we check the hashmap if we\u2019ve seen a subarray with this sum before</p>\n<p>if HashMap contains sum -&gt; this is where the above-discussed case occurs (subarray with equal sum), so we update our max&nbsp;</p>\n<p>else -&gt; Insert (sum, current_index) into hashmap to store prefix sum until the current index</p>\n<ol start=\"4\"><li>After traversing the entire array our max variable has the length of the longest substring having a sum equal to zero, so return max.</li></ol>\n<p><strong>NOTE</strong>: we do not update the index of a sum if it\u2019s seen again because we require the length of the <strong><em>longest</em></strong> subarray</p>\n<p><strong>Dry Run</strong>: Let us dry-run the algorithm for a better understanding</p>\n<pre class=\"wp-block-preformatted\"><strong>Input</strong> : N = 5, array[] = {1, 2, -2, 4, -4}\n\n<strong>Output</strong> : 5</pre>\n<ol><li>Initially sum = 0, max = 0</li><li><a href=\"https://takeuforward.org/c/c-stl/unordered_map-in-c-stl/\" target=\"_blank\" rel=\"noreferrer noopener\">HashMap</a>&lt;Integer, Integer> h = [ ];</li><li><strong>i=0 </strong>-> <strong>sum=1</strong>, sum!=0 so check in the hashmap if we\u2019ve seen a subarray with this sum before, in our case hashmap does not contain sum (1), so we add (sum, i) to the hashmap.<br><strong>h = [[1,0]]</strong></li><li><strong>i=1</strong> -><strong> sum=3</strong>, sum!=0 so check in the hashmap if we\u2019ve seen a subarray with this sum before, in our case hashmap does not contain sum (3), so we add (sum, i) to the hashmap.<br><strong>h=[[1,0], [3,1]]\u00a0</strong></li><li><strong>i=2</strong> -> <strong>sum=1</strong>, sum!=0 so check in hashmap if it contains sum, in our case hashmap contains sum (1)<br>Here we can observe that our current sum is seen before which concludes that it\u2019s a zero subarray. So we now update our max as maximum(max, 2-0) => <strong>max = 2</strong><br><strong>h=[[1,0], [3,1]]</strong></li><li><strong>i=3</strong> -> <strong>sum=5</strong>, sum!=0 so check in <a href=\"https://takeuforward.org/c/c-stl/unordered_map-in-c-stl/\" target=\"_blank\" rel=\"noreferrer noopener\">hashmap</a> if it contains sum, in our case hashmap does not contain sum (5), so we add (sum, i) to hashmap.<br><strong>h=[[1,0], [3,1], [5,3]]\u00a0</strong></li><li><strong>i=4</strong> -> <strong>sum=1</strong>, sum!=0 so check in hashmap if it contains sum, in our case hashmap contains sum (1). Here we can again observe our above-discussed case, So we now update our max as maximum(max, 4-0) => <strong>max = maximum(2, 4) = 4</strong><br><strong>h=[[1,0], [3,1], [5,3]]</strong>\u00a0</li><li>Now that we have traversed our whole array, our answer is max = 4, Subarray = {2, -2, 4, -4}</li></ol>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n\n<!-- Insert C++ code of Optimal Approach Here-->\nint maxLen(int A[], int n)\n{\n    // Your code here\n    unordered_map&lt;int,int&gt; mpp; \n    int maxi = 0;\n    int sum = 0; \n    for(int i = 0;i&lt;n;i++) {\n        sum += A[i]; \n        if(sum == 0) {\n            maxi = i + 1; \n        }\n        else {\n            if(mpp.find(sum) != mpp.end()) {\n                maxi = max(maxi, i - mpp[sum]); \n            }\n            else {\n                mpp[sum] = i;\n            }\n        }   \n    }\n\n    return maxi; \n}\n</code>\n</pre>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\n\n<!-- Insert Java code of Optimal Approach Here -->\nint maxLen(int A[], int n)\n    {\n        // Your code here\n        HashMap&lt;Integer, Integer&gt; mpp = new HashMap&lt;Integer, Integer&gt;();\n\n        int maxi = 0;\n        int sum = 0; \n\n        for(int i = 0;i&lt;n;i++) {\n\n            sum += A[i]; \n\n            if(sum == 0) {\n                maxi = i + 1; \n            }\n            else {\n                if(mpp.get(sum) != null) {\n\n                    maxi = Math.max(maxi, i - mpp.get(sum)); \n                }\n                else {\n\n                    mpp.put(sum, i); \n                }\n            }\n        }\n        return maxi; \n    }\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\n\n<!-- Insert Python code of Optimal Approach Here -->\nfrom typing import List\ndef maxLen(A: List[int], n: int) -> int:\n    mpp = {}\n    maxi = 0\n    sum = 0\n    for i in range(n):\n        sum += A[i]\n        if sum == 0:\n            maxi = i + 1\n        else:\n            if sum in mpp:\n                maxi = max(maxi, i - mpp[sum])\n            else:\n                mpp[sum] = i\n    return maxi\n\n\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\n<!-- Insert javascript code of Brute Force Here -->\nfunction maxLen(A, n) {\n  let mpp = new Map();\n  let maxi = 0;\n  let sum = 0;\n\n  for (let i = 0; i &lt; n; i++) {\n    sum += A[i];\n    if (sum === 0) {\n      maxi = i + 1;\n    } else {\n      if (mpp.has(sum)) {\n        maxi = Math.max(maxi, i - mpp.get(sum));\n      } else {\n        mpp.set(sum, i);\n      }\n    }\n  }\n\n  return maxi;\n}\n\nlet A = [9, -3, 3, -1, 6, -5];\nlet n = A.length;\nconsole.log(maxLen(A, n));\n\n\n</code>\n</pre>\n</div>\n<p>\n<!-- Insert Output of Optimal Apporach Here -->\n<p><strong>Output:</strong> 3</p> \n\n</p>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n\n<!-- Insert Time and Space Complexity of Optimal Approach-->\n<p><strong>Time Complexity: </strong>O(N), as we are traversing the array only once</p>\n<p><strong>Space Complexity: </strong>O(N), in the worst case we would insert all array elements prefix sum into our hashmap</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Optimal Approach Starts from here -->\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n<details>\n<summary class=\"main-summary\">\n<span>\nVideo Explanation\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"yt-video-wrapper\">\n\n<!-- Insert iframe embed Link of Youtube Video-->\n<iframe class=\"lazy-loaded\" loading=\"lazy\" title=\"Subarray with Given Sum 0\" width=\"810\" height=\"456\" data-lazy-type=\"iframe\" data-src=\"https://www.youtube.com/embed/xmguZ6GbatA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/xmguZ6GbatA?feature=oembed\"></iframe><noscript>\n<iframe loading=\"lazy\" title=\"Subarray with Given Sum 0\" width=\"810\" height=\"456\" src=\"https://www.youtube.com/embed/xmguZ6GbatA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"></iframe></noscript>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script>\n\nconst codeSections = document.querySelectorAll('.code-section');\n\n// Get last selected language from localStorage or set default value\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\n// Update last selected language for all sections and store in localStorage\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\n// Handle copy button click event\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\n// Set initial state of the tabs\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<script>\nconst codeSections = document.querySelectorAll('.code-section');\n\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script src=\"https://takeuforward.org/UXApproachDropDowns/2ApproachJSScript.js\"></script>\n<!-- /wp:html -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;<strong>Varsha M.</strong>&nbsp;<em>and&nbsp;<em><a href=\"https://www.linkedin.com/in/imsudip/\" target=\"_blank\" rel=\"noreferrer noopener\">Sudip Ghosh</a></em></em>&nbsp;</em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/contribute/help-us-grow-takeuforward/\">please check out this articl</a><em>e</em></p></blockquote>\n<!-- /wp:quote -->"
}