{
    "dislikes": 11,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:10:15 GMT+0530 (India Standard Time)",
    "slug": "leaders-in-an-array",
    "aid": "1719",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/leaders-in-an-array",
    "title": "Leaders in an Array",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        }
    ],
    "category_tag": "data-structure",
    "likes": 296,
    "preview": "Problem Statement: Given an array, print all the elements which are leaders. A Leader is an element that is greater than all of the elements on its right side in the array. Examples Example 1: Inpu...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong>&nbsp;Given an array, print all the elements which are leaders. A Leader is an element that is greater than all of the elements on its right side in the array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\"><!-- Insert New Examples Here -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong>\n arr = [4, 7, 1, 0]\n<strong>Output</strong>:\n 7 1 0\n<strong>Explanation:</strong>\n Rightmost element is always a leader. 7 and 1 are greater than the elements in their right side.\n\n<strong>Example 2:</strong>\n<strong>Input:</strong>\n arr = [10, 22, 12, 3, 0, 6]\n<strong>Output:</strong>\n 22 12 6\n<strong>Explanation:</strong>\n 6 is a leader. In addition to that, 12 is greater than all the elements in its right side (3, 0, 6), also 22 is greater than 12, 3, 0, 6.\n</pre>\n</pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Practice Section-->\n<div class=\"practice\">\n<span><strong>Practice: </strong></span>\n<div class=\"problem-buttons\">\n\n<!-- Add Problem Link inside href -->\n<a href=\"https://bit.ly/3I6VADy\" target=\"_blank\" rel=\"noopener\">\n<span>Solve Problem</span>\n<img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Group-11-5.png\" alt=\"code-studio\">\n</a>\n</div>\n</div>\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out\nyourself first. </em></p>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<div class=\"horizontal_navbar_dsa_article\">\n<div class=\"grid_container_two\">\n<a href=\"#brute-force-approach\" class=\"two-boxes box-a\">\nBrute Force Approach\n</a>\n<a href=\"#optimal-approach\" class=\"two-boxes box-c\">\nOptimal Approach\n</a>\n<a href=\"#dsa_article_video_explanation\" class=\"three-boxes box-d\">\n<svg width=\"26\" height=\"26\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8 10L13.19 7L8 4V10ZM19.56 2.17C19.69 2.64 19.78 3.27 19.84 4.07C19.91 4.87 19.94 5.56 19.94 6.16L20 7C20 9.19 19.84 10.8 19.56 11.83C19.31 12.73 18.73 13.31 17.83 13.56C17.36 13.69 16.5 13.78 15.18 13.84C13.88 13.91 12.69 13.94 11.59 13.94L10 14C5.81 14 3.2 13.84 2.17 13.56C1.27 13.31 0.69 12.73 0.44 11.83C0.31 11.36 0.22 10.73 0.16 9.93C0.0900001 9.13 0.0599999 8.44 0.0599999 7.84L0 7C0 4.81 0.16 3.2 0.44 2.17C0.69 1.27 1.27 0.69 2.17 0.44C2.64 0.31 3.5 0.22 4.82 0.16C6.12 0.0899998 7.31 0.0599999 8.41 0.0599999L10 0C14.19 0 16.8 0.16 17.83 0.44C18.73 0.69 19.31 1.27 19.56 2.17Z\" fill=\"red\"></path>\n</svg>\n\n</a>\n<div class=\"box-e tooltip\">\n<svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.842 9.25L11.9577 10.17C11.2502 10.89 10.8081 11.5 10.8081 13H8.84297V12.5C8.84297 11.39 9.28511 10.39 9.99255 9.67L11.2109 8.41C11.5745 8.05 11.7906 7.55 11.7906 7C11.7906 6.46957 11.5836 5.96086 11.2151 5.58579C10.8465 5.21071 10.3467 5 9.82552 5C9.30434 5 8.80451 5.21071 8.43598 5.58579C8.06745 5.96086 7.86041 6.46957 7.86041 7H5.89531C5.89531 5.93913 6.30938 4.92172 7.04644 4.17157C7.7835 3.42143 8.78316 3 9.82552 3C10.8679 3 11.8675 3.42143 12.6046 4.17157C13.3417 4.92172 13.7557 5.93913 13.7557 7C13.7543 7.84324 13.4259 8.65183 12.842 9.25ZM10.8081 17H8.84297V15H10.8081M9.82552 0C8.53521 0 7.25754 0.258658 6.06545 0.761205C4.87337 1.26375 3.79021 2.00035 2.87783 2.92893C1.03519 4.8043 0 7.34784 0 10C0 12.6522 1.03519 15.1957 2.87783 17.0711C3.79021 17.9997 4.87337 18.7362 6.06545 19.2388C7.25754 19.7413 8.53521 20 9.82552 20C12.4314 20 14.9306 18.9464 16.7732 17.0711C18.6158 15.1957 19.651 12.6522 19.651 10C19.651 4.47 15.2296 0 9.82552 0Z\" fill=\"black\"></path>\n</svg>\n<div class=\"bottom\">\n<p>Expand any one approach by clicking the given options in the bar. Clicking one approach on bar,\ncloses all other expands. You can manually expand more than one approach at a time</p>\n<i></i>\n</div>\n\n</div>\n</div>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Approaches Drop-Down -->\n<div class=\"dsa_article_dropdown_approachs \">\n\n<!-- Brute Force Approach Starts from here -->\n<div id=\"brute-force-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBrute Force Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<!-- Insert Algorithm / Intuition of Brute Force Apporach Here -->\n<h3><strong>Solution 1:</strong></h3>\n<h3><strong>Intuition:</strong></h3>\n<p>There is no special intuition needed here. Just a common fact that we need to compare elements in order to find the greatest is more than enough.</p>\n<h3><strong>Approach</strong></h3>\n<ul><li>In this brute force approach, we start checking all the elements from the start of the array to the end to see if an element is greater than all the elements on its right (i.e, the leader).</li><li>For this, we will use nested loops where the outer loop will check for each element in the array whether it is a leader or not.</li><li>The inner loop checks if there is any element to the right that is greater than the element currently traversed by the outer loop.</li><li>We start by initializing the outer loop pointer to the start element and setting it as the current leader.</li><li>If any element traversed is found greater than the element currently set as a leader, it will not go to the ans array and we increment the outer loop pointer by 1 and set the next element as the current leader.</li><li>If we don\u2019t find any other element to the right greater than the current element, then we push the current element to the ans array stating that is it the leader element.</li></ul>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n\n<!-- Insert C++ code of Brute Force Here -->\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nvector&lt;int&gt; printLeadersBruteForce(int arr[], int n) {\n\n  vector&lt;int&gt; ans;\n  \n  for (int i = 0; i &lt; n; i++) {\n    bool leader = true;\n\n    //Checking whether arr[i] is greater than all \n    //the elements in its right side\n    for (int j = i + 1; j &lt; n; j++)\n      if (arr[j] &gt; arr[i]) {\n          \n        // If any element found is greater than current leader\n        // curr element is not the leader.\n        leader = false;\n        break;\n      }\n\n    // Push all the leaders in ans array.\n    if (leader)\n    ans.push_back(arr[i]);\n\n  }\n  \n  return ans;\n}\n\nint main() {\n    \n  // Array Initialization.\n  int n = 6;\n  int arr[n] = {10, 22, 12, 3, 0, 6};\n\n  vector&lt;int&gt; ans = printLeadersBruteForce(arr,n);\n  \n  for(int i = 0;i&lt;ans.size();i++){\n      \n      cout&lt;&lt;ans[i]&lt;&lt;\" \";\n  }\n  \n  cout&lt;&lt;endl;\n  return 0;\n}\n\n</code>\n</pre>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\n\n<!-- Insert Java code of Brute Force Here -->\nimport java.util.*;\n\nclass TUF{\n\npublic static ArrayList&lt;Integer&gt; \n                     printLeadersBruteForce(int[] arr, int n){\n    \n  ArrayList&lt;Integer&gt; ans= new ArrayList&lt;&gt;();\n  \n  for (int i = 0; i &lt; n; i++) {\n    boolean leader = true;\n\n    //Checking whether arr[i] is greater than all \n    //the elements in its right side\n    for (int j = i + 1; j &lt; n; j++)\n      if (arr[j] &gt; arr[i]) {\n          \n        // If any element found is greater than current leader\n        // curr element is not the leader.\n        leader = false;\n        break;\n      }\n\n    // Push all the leaders in ans array.\n    if (leader)\n    ans.add(arr[i]);\n\n  }\n  \n  return ans;\n   \n}\n\npublic static void main(String args[]) \n{\n  // Array Initialization.\n  int n = 6;\n  int arr[]=  {10, 22, 12, 3, 0, 6};\n\n\n  ArrayList&lt;Integer&gt; ans= printLeadersBruteForce(arr,n);\n  \n  for (int i = 0; i &lt; ans.size(); i++) {\n    System.out.print(ans.get(i)+\" \");\n  }\n\n}\n}\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\n\n<!-- Insert Python code of Brute Force Here -->\ndef printLeadersBruteForce(arr, n):\n    ans = []\n  \n    for i in range(n):\n        leader = True\n\n        # Checking whether arr[i] is greater than all \n        # the elements in its right side\n        for j in range(i+1, n):\n            if arr[j] &gt; arr[i]:\n                # If any element found is greater than current leader,\n                # curr element is not the leader.\n                leader = False\n                break\n\n        # Push all the leaders in ans array.\n        if leader:\n            ans.append(arr[i])\n\n    return ans\n\n# Main function\nif __name__ == '__main__':\n    # Array Initialization\n    n = 6\n    arr = [10, 22, 12, 3, 0, 6]\n\n    ans = printLeadersBruteForce(arr, n)\n\n    for i in range(len(ans)):\n        print(ans[i], end=\" \")\n\n    print()\n\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\n<!-- Insert javascript code of Brute Force Here -->\nfunction printLeadersBruteForce(arr, n) {\n\n  let ans = [];\n\n  for (let i = 0; i &lt; n; i++) {\n    let leader = true;\n\n    //Checking whether arr[i] is greater than all \n    //the elements in its right side\n    for (let j = i + 1; j &lt; n; j++)\n      if (arr[j] &gt; arr[i]) {\n\n        // If any element found is greater than current leader\n        // curr element is not the leader.\n        leader = false;\n        break;\n      }\n\n    // Push all the leaders in ans array.\n    if (leader)\n      ans.push(arr[i]);\n\n  }\n\n  return ans;\n}\n\n// Array Initialization.\nlet n = 6;\nlet arr = [10, 22, 12, 3, 0, 6];\n\nlet ans = printLeadersBruteForce(arr, n);\n\nfor (let i = 0; i &lt; ans.length; i++) {\n  console.log(ans[i]);\n}\n</code>\n</pre>\n</div>\n<p>\n<!-- Insert Output of Brute Force Here -->\n<p><strong>Output:</strong></p>\n<p>22 12 6</p>\n</p>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n<!-- Insert Time and Space Complexity of Brute Force Here -->\n<p><strong>Time Complexity:</strong> O(N^2) { Since there are nested loops being used, at the worst case n^2 time would be consumed }.</p>\n<p><strong>Space Complexity: O(N)</strong> { There is no extra space being used in this approach. But, a O(N) of space for ans array will be used in the worst case }.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Brute Force Approach Ends here -->\n\n\n<!-- Optimal Approach Starts from here -->\n\n<div id=\"optimal-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nOptimal Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n\n<!-- Insert Algorithm of Better Approach Here -->\n<h3><strong>Solution 2:</strong></h3>\n<h3><strong>Approach</strong>:</h3>\n<p><img width=\"221\" height=\"399\" src=\"https://lh3.googleusercontent.com/q9mAQ0qpQIQ83jbG_a55XKHKTOf0jpWWZPBN6jpBLqyHZLx7o7XVCCSJWVInyFNxcBP3srruP2jrEFtpZpirH7r0KXoppkXFvTrLaiFavylbb6yc0kJt2ne4Xk25ToB5R_7CLWRm\"></p>\n<ul><li>In the above approach, we do a fresh traversal for each candidate. If we think carefully, we only want to compare the elements on the right side. So, what if we start from the last element?</li><li>That is, we'll try to remember the greatest element encountered so far and we'll use that to decide whether a candidate is a leader or not.</li><li>First, we'll start the traversal from the right. Then, we move toward the left. Whenever we encounter a new element, we check with the greatest element obtained so far.</li><li>If the current element is greater than the greatest so far, then the current element is one of the leaders and we update the greatest element.</li><li>Else, we proceed with the further elements on the left. This method prints the leaders in the reverse direction of their occurrences. If we are concerned about the order, we can use an extra array or a string to order.</li></ul>\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n\n<!-- Insert C++ code of Optimal Approach Here-->\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nvector&lt;int&gt; printLeaders(int arr[], int n) {\n\n  vector&lt;int&gt; ans;\n  \n // Last element of an array is always a leader,\n // push into ans array.\n int max = arr[n - 1];\n ans.push_back(arr[n-1]);\n\n  // Start checking from the end whether a number is greater\n  // than max no. from right, hence leader.\n  for (int i = n - 2; i &gt;= 0; i--)\n    if (arr[i] &gt; max) {\n      ans.push_back(arr[i]);\n      max = arr[i];\n    }\n\n  \n  return ans;\n}\n\nint main() {\n    \n  // Array Initialization.\n  int n = 6;\n  int arr[n] = {10, 22, 12, 3, 0, 6};\n\n  vector&lt;int&gt; ans = printLeaders(arr,n);\n  \n  \n  for(int i = ans.size()-1;i&gt;=0;i--){\n      \n      cout&lt;&lt;ans[i]&lt;&lt;\" \";\n  }\n  \n  cout&lt;&lt;endl;\n  return 0;\n}\n</code>\n</pre>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\n\n<!-- Insert Java code of Optimal Approach Here -->\nimport java.util.*;\n\nclass TUF{\n\npublic static ArrayList&lt;Integer&gt; \n                     printLeadersBruteForce(int[] arr, int n){\n    \n  ArrayList&lt;Integer&gt; ans= new ArrayList&lt;&gt;();\n  \n   // Last element of an array is always a leader,\n   // push into ans array.\n   int max = arr[n - 1];\n\n    ans.add(arr[n-1]);\n    \n    // Start checking from the end whether a number is greater\n    // than max no. from right, hence leader.\n    for (int i = n - 2; i &gt;= 0; i--)\n      if (arr[i] &gt; max) {\n        ans.add(arr[i]);\n        max = arr[i];\n      }\n\n  return ans;\n   \n}\n\npublic static void main(String args[]) \n{\n  // Array Initialization.\n  int n = 6;\n  int arr[]=  {10, 22, 12, 3, 0, 6};\n\n\n  ArrayList&lt;Integer&gt; ans= printLeadersBruteForce(arr,n);\n  \n  Collections.sort(ans, Collections.reverseOrder());\n  \n  for (int i = 0; i &lt; ans.size(); i++) {\n    System.out.print(ans.get(i)+\" \");\n  }\n\n}\n}\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\n\n<!-- Insert Python code of Optimal Approach Here -->\ndef printLeaders(arr, n):\n    ans = []\n  \n    # Last element of an array is always a leader,\n    # push into ans array.\n    max_elem = arr[n - 1]\n    ans.append(arr[n - 1])\n\n    # Start checking from the end whether a number is greater\n    # than max no. from right, hence leader.\n    for i in range(n - 2, -1, -1):\n        if arr[i] &gt; max_elem:\n            ans.append(arr[i])\n            max_elem = arr[i]\n\n    return ans\n\n# Main function\nif __name__ == '__main__':\n    # Array Initialization\n    n = 6\n    arr = [10, 22, 12, 3, 0, 6]\n\n    ans = printLeaders(arr, n)\n\n    for i in range(len(ans)-1, -1, -1):\n        print(ans[i], end=\" \")\n\n    print()\n\n</code>\n</pre>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\n\n<!-- Insert javascript code of Brute Force Here -->\nfunction printLeaders(arr, n) {\n\n  let ans = [];\n\n  // Last element of an array is always a leader,\n  // push into ans array.\n  let max = arr[n - 1];\n  ans.push(arr[n - 1]);\n\n  // Start checking from the end whether a number is greater\n  // than max no. from right, hence leader.\n  for (let i = n - 2; i &gt;= 0; i--) {\n    if (arr[i] &gt; max) {\n      ans.push(arr[i]);\n      max = arr[i];\n    }\n  }\n\n  return ans;\n}\n\n// Array Initialization.\nlet n = 6;\nlet arr = [10, 22, 12, 3, 0, 6];\n\nlet ans = printLeaders(arr, n);\n\nfor (let i = ans.length - 1; i &gt;= 0; i--) {\n  console.log(ans[i]);\n}\n</code>\n</pre>\n</div>\n<p>\n<!-- Insert Output of Optimal Apporach Here -->\n<p><strong>Output:</strong></p>\n<p>22 12 6</p>\n</p>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n\n<!-- Insert Time and Space Complexity of Optimal Approach-->\n<p><strong>Time Complexity: O(N) </strong>{ Since the array is traversed single time back to front, it will consume O(N) of time where N = size of the array }.</p>\n<p><strong>Space Complexity: O(N) </strong>{ There is no extra space being used in this approach. But, a O(N) of space for ans array will be used in the worst case }.</p>\n</p>\n</details>\n</div>\n</details>\n</div>\n<!-- Optimal Approach Starts from here -->\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n<details>\n<summary class=\"main-summary\">\n<span>\nVideo Explanation\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"yt-video-wrapper\">\n\n<!-- Insert iframe embed Link of Youtube Video-->\n<iframe class=\"lazy-loaded\" loading=\"lazy\" title=\"Leaders in an Array\" width=\"810\" height=\"456\" data-lazy-type=\"iframe\" data-src=\"https://www.youtube.com/embed/cHrH9CQ8pmY\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/cHrH9CQ8pmY?feature=oembed\"></iframe><noscript>\n<iframe loading=\"lazy\" title=\"Leaders in an Array\" width=\"810\" height=\"456\" src=\"https://www.youtube.com/embed/cHrH9CQ8pmY\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"></iframe></noscript>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script>\n\nconst codeSections = document.querySelectorAll('.code-section');\n\n// Get last selected language from localStorage or set default value\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\n// Update last selected language for all sections and store in localStorage\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\n// Handle copy button click event\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\n// Set initial state of the tabs\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<script>\nconst codeSections = document.querySelectorAll('.code-section');\n\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script src=\"https://takeuforward.org/UXApproachDropDowns/2ApproachJSScript.js\"></script>\n<!-- /wp:html -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;<strong><a href=\"https://www.linkedin.com/in/prathap02/\" target=\"_blank\" rel=\"noreferrer noopener\">Prathap P</a></strong>&nbsp;and <a href=\"https://www.linkedin.com/in/priyanshi-goel-7b6a42210/\" target=\"_blank\" rel=\"noopener\" title=\"\"><strong>Priyanshi Goel</strong></a></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}