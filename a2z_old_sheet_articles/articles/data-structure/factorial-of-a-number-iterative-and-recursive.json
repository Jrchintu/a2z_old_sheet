{
    "dislikes": 5,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:43 GMT+0530 (India Standard Time)",
    "slug": "factorial-of-a-number-iterative-and-recursive",
    "aid": "1567",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/factorial-of-a-given-number",
    "title": "Factorial of a Number : Iterative and Recursive",
    "topics": [
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "maths",
            "topic-title": "Maths"
        },
        {
            "topic-id": "recursion",
            "topic-title": "Recursion"
        }
    ],
    "likes": 164,
    "category_tag": "data-structure",
    "preview": "Problem Statement: Given a number X, print its factorial. To obtain the factorial of a number, it has to be multiplied by all the whole numbers preceding it. More precisely X! = X*(X-1)*(X-2) \u2026 1....",
    "content": "<p><strong>Problem Statement: </strong> Given a number <strong>X,</strong>&nbsp; print its factorial.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To obtain the factorial of a number, it has to be multiplied by all the whole numbers preceding it. More precisely X!\n    = X*(X-1)*(X-2) \u2026 1.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Note: X&nbsp; is always a positive number.&nbsp;</p>\n<!-- /wp:paragraph -->\n\n\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n    <details class=\"article_example_details\">\n        <summary class=\"article_example_summary\">\n            <span><strong>\n                    Examples\n                </strong>\n            </span>\n\n        </summary>\n        <div class=\"atricle_example_content\">\n            <pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> X = 5\n<strong>Output:</strong> 120\n<strong>Explanation:</strong> 5! = 5*4*3*2*1\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> X = 3\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> 3!=3*2*1</pre>\n            <!-- /wp:preformatted -->\n        </div>\n    </details>\n</div>\n\n\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Here is the practice link for <a\n            href=\"https://takeuforward.org/plus/dsa/beginner-problem/basic-maths/factorial-of-a-given-number-i\"\n            target=\"_blank\">Iterative</a> and <a\n            href=\"https://takeuforward.org/plus/dsa/beginner-problem/basic-recursion/factorial-of-a-given-number-ii\"\n            target=\"_blank\">Recursive</a> Problems to help you assess your knowledge better. It's highly recommend trying to\n        solve it before looking at the solution. </em></p>\n\n\n<!-- This is Approaches Drop-Down -->\n<div class=\"dsa_article_dropdown_approachs \">\n\n    <!-- Approach - 1 Starts from here -->\n    <div id=\"brute-force-approach\">\n        <details>\n            <summary class=\"main-summary\">\n                <span>\n                    <!-- Change Name Here -->\n                    Iterative Solution\n                </span>\n\n            </summary>\n            <div class=\"common-drops\">\n                <details class=\"secondary-details\" open=\"\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Algorithm\n                        </span>\n                        \n                    </summary>\n                    <div class=\"approach-algorithm\">\n\n                        <ul>\n                            <li>Since the factorial of a number <code>X</code> is the product of the number itself and\n                                all its preceding positive integers, we can calculate it using a loop.</li>\n                            <li>We initialize a variable (say <code>fact</code>) to 1, which will hold the running\n                                product.</li>\n                            <li>We run a loop from <code>i = 1</code> to <code>X</code>.</li>\n                            <li>In each iteration, we multiply <code>fact</code> by <code>i</code> (i.e.,\n                                <code>fact = fact * i</code>).\n                            </li>\n                            <li>After the loop ends, <code>fact</code> will contain the factorial of <code>X</code>.\n                            </li>\n                        </ul>\n\n\n                    </div>\n                </details>\n                <details class=\"code-section secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>Code</span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <div class=\"code-tabs\">\n                        <div><button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">Cpp</button><button\n                                class=\"code-tab\" data-lang=\"java\">Java</button><button class=\"code-tab\"\n                                data-lang=\"python\">Python</button><button class=\"code-tab\"\n                                data-lang=\"javascript\">Javascript</button></div>\n                        <div class=\"copy-btn\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                                viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\">\n                                <rect width=\"8\" height=\"4\" x=\"8\" y=\"2\" rx=\"1\" ry=\"1\" />\n                                <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\" />\n                            </svg></div>\n                    </div>\n                    <div class=\"code-content\">\n                        <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span><span>18</span><span>19</span><span>20</span><span>21</span><span>22</span><span>23</span><span>24</span><span>25</span><span>26</span><span>27</span><span>28</span><span>29</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\n// Function to calculate factorial of a number\nint factorial(int X) {\n    int ans = 1;\n\n    // Loop from 1 to X to compute factorial\n    for (int i = 1; i &lt;= X; i++) {\n        ans = ans * i;\n    }\n\n    // Return the final result\n    return ans;\n}\n\nint main() {\n    // Input value for which factorial is to be calculated\n    int X = 5;\n\n    // Call the factorial function and store the result\n    int result = factorial(X);\n\n    // Print the result\n    cout &lt;&lt; \"The factorial of \" &lt;&lt; X &lt;&lt; \" is \" &lt;&lt; result;\n\n    return 0;\n}\n</code></pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"java\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span><span>18</span><span>19</span><span>20</span><span>21</span><span>22</span><span>23</span><span>24</span><span>25</span><span>26</span><span>27</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n\n    // Function to calculate factorial of a number\n    public static int factorial(int X) {\n        int ans = 1;\n\n        // Loop from 1 to X to compute factorial\n        for (int i = 1; i &lt;= X; i++) {\n            ans = ans * i;\n        }\n\n        // Return the final result\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        // Input value for which factorial is to be calculated\n        int X = 5;\n\n        // Call the factorial function and store the result\n        int result = factorial(X);\n\n        // Print the result\n        System.out.println(\"The factorial of \" + X + \" is \" + result);\n    }\n}\n</code></pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"python\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span><span>18</span><span>19</span><span>20</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\"># Function to calculate factorial of a number\ndef factorial(X):\n    ans = 1\n\n    # Loop from 1 to X to compute factorial\n    for i in range(1, X + 1):\n        ans *= i\n\n    # Return the final result\n    return ans\n\n# Input value for which factorial is to be calculated\nX = 5\n\n# Call the factorial function and store the result\nresult = factorial(X)\n\n# Print the result\nprint(f\"The factorial of {X} is {result}\")\n</code></pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"javascript\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span><span>18</span><span>19</span><span>20</span><span>21</span><span>22</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">// Function to calculate factorial of a number\nfunction factorial(X) {\n    let ans = 1;\n\n    // Loop from 1 to X to compute factorial\n    for (let i = 1; i &lt;= X; i++) {\n        ans *= i;\n    }\n\n    // Return the final result\n    return ans;\n}\n\n// Input value for which factorial is to be calculated\nconst X = 5;\n\n// Call the factorial function and store the result\nconst result = factorial(X);\n\n// Print the result\nconsole.log(`The factorial of ${X} is ${result}`);\n</code></pre>\n                        </div>\n                    </div>\n                </details>\n                <details class=\"secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Complexity Analysis\n                        </span>\n\n                    </summary>\n                    <p>\n                        <!-- wp:paragraph -->\n                    <p><strong>Time Complexity: O(n)</strong></p>\n                    <!-- /wp:paragraph -->\n\n                    <!-- wp:paragraph -->\n                    <p><strong>Space Complexity: O(1)</strong></p>\n                    <!-- /wp:paragraph -->\n                    </p>\n                </details>\n            </div>\n        </details>\n    </div>\n    <!-- Approach - 1 Ends here -->\n\n\n    <!-- Approach - 2 Starts from here -->\n\n    <div id=\"optimal-approach\">\n        <details>\n            <summary class=\"main-summary\">\n                <span>\n                    Recursive Solution\n                </span>\n\n            </summary>\n            <div class=\"common-drops\">\n                <details class=\"secondary-details\" open=\"\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Algorithm\n                        </span>\n\n                    </summary>\n                    <div class=\"approach-algorithm\">\n                        <ul>\n                            <li>The factorial of a number <code>N</code> can be calculated by multiplying all natural\n                                numbers from 1 to <code>N</code>.</li>\n                            <li>We can visualize this using recursion:</li>\n                            <ul>\n                                <li><code>factorial(N) = N * factorial(N - 1)</code></li>\n                                <li>This means the factorial of <code>N</code> is the product of <code>N</code> and the\n                                    factorial of <code>N - 1</code>.</li>\n                            </ul>\n                            <li>We define a base case:\n                                <ul>\n                                    <li>If <code>N == 0</code>, we return 1, since <code>0! = 1</code> by definition.\n                                    </li>\n                                </ul>\n                            </li>\n                            <li>This approach breaks the problem into smaller subproblems, and the results of each\n                                subproblem are multiplied together as the recursive calls return.</li>\n                            <li>The final result is stored and printed as the output of the <code>factorial(N)</code>\n                                function.</li>\n                        </ul>\n\n                    </div>\n                    <!-- wp:paragraph -->\n                    <p><strong>Recursion Tree for the following problem can be represented as follows :</strong></p>\n                    <!-- /wp:paragraph -->\n\n                    <!-- wp:image {\"id\":7744,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n                    <figure class=\"wp-block-image size-full\"><img\n                            src=\"https://static.takeuforward.org/wp/uploads/2023/02/Screenshot-2023-02-26-231432.png\"\n                            alt=\"\" class=\"wp-image-7744\" /></figure>\n                    <!-- /wp:image -->\n                </details>\n                <details class=\"code-section secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>Code</span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <div class=\"code-tabs\">\n                        <div><button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">Cpp</button><button\n                                class=\"code-tab\" data-lang=\"java\">Java</button><button class=\"code-tab\"\n                                data-lang=\"python\">Python</button><button class=\"code-tab\"\n                                data-lang=\"javascript\">Javascript</button></div>\n                        <div class=\"copy-btn\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                                viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\">\n                                <rect width=\"8\" height=\"4\" x=\"8\" y=\"2\" rx=\"1\" ry=\"1\" />\n                                <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\" />\n                            </svg></div>\n                    </div>\n                    <div class=\"code-content\">\n                        <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span><span>18</span><span>19</span><span>20</span><span>21</span><span>22</span><span>23</span><span>24</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// Recursive function to calculate factorial of a number\nint factorial(int n) {\n    // Base case: factorial of 0 is 1\n    if (n == 0) {\n        return 1;\n    }\n\n    // Recursive case: n * factorial of (n-1)\n    return n * factorial(n - 1);\n}\n\nint main() {\n    // Define the number to compute factorial\n    int n = 3;\n\n    // Call the factorial function and print the result\n    cout &lt;&lt; factorial(n) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"java\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span><span>18</span><span>19</span><span>20</span><span>21</span><span>22</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n\n    // Recursive function to calculate factorial of a number\n    public static int factorial(int n) {\n        // Base case: factorial of 0 is 1\n        if (n == 0) {\n            return 1;\n        }\n\n        // Recursive case: n * factorial of (n-1)\n        return n * factorial(n - 1);\n    }\n\n    public static void main(String[] args) {\n        // Define the number to compute factorial\n        int n = 3;\n\n        // Call the factorial function and print the result\n        System.out.println(factorial(n));\n    }\n}\n</code></pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"python\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\"># Recursive function to calculate factorial of a number\ndef factorial(n):\n    # Base case: factorial of 0 is 1\n    if n == 0:\n        return 1\n\n    # Recursive case: n * factorial of (n-1)\n    return n * factorial(n - 1)\n\n# Define the number to compute factorial\nn = 3\n\n# Call the factorial function and print the result\nprint(factorial(n))\n</code></pre>\n                        </div>\n                        <div class=\"code-block\" data-lang=\"javascript\">\n                            <div class=\"line-numbers line-num\">\n                                <span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span>\n                            </div>\n                            <pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">// Recursive function to calculate factorial of a number\nfunction factorial(n) {\n    // Base case: factorial of 0 is 1\n    if (n === 0) {\n        return 1;\n    }\n\n    // Recursive case: n * factorial of (n-1)\n    return n * factorial(n - 1);\n}\n\n// Define the number to compute factorial\nconst n = 3;\n\n// Call the factorial function and print the result\nconsole.log(factorial(n));\n</code></pre>\n                        </div>\n                    </div>\n                </details>\n                <details class=\"secondary-details\">\n                    <summary class=\"secondary-summary\">\n                        <span>\n                            Complexity Analysis\n                        </span>\n                        <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                            <path\n                                d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                            </path>\n                        </svg>\n                    </summary>\n                    <p>\n                        <!-- wp:paragraph -->\n                    <p><strong>Time Complexity:</strong> O(N), Since the function is being called n times, and for each\n                        function, we have only one printable line that takes O(1) time, so the cumulative time\n                        complexity would be O(N) </p>\n                    <!-- /wp:paragraph -->\n\n                    <!-- wp:paragraph -->\n                    <p><strong>Space Complexity:</strong> O(N), In the worst case, the recursion stack space would be\n                        full with all the function calls waiting to get completed and that would make it an O(N)\n                        recursion stack space.</p>\n                    <!-- /wp:paragraph -->\n\n                    </p>\n                </details>\n            </div>\n        </details>\n    </div>\n</div>\n\n<!-- This is Video Explination Drop-Down -->\n<!-- <div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n    <details>\n        <summary class=\"main-summary\">\n            <span>\n                Video Explanation\n            </span>\n            <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n            </svg>\n        </summary>\n        <div class=\"yt-video-wrapper\">\n            \n\n        </div>\n    </details>\n</div> -->\n\n<script src=\"https://takeuforward.org/UXApproachDropDowns/2ApproachJSScript.js\"></script>\n\n<blockquote class=\"wp-block-quote\">\n\n</blockquote>\n\n\n<script>\n\n    const codeSections = document.querySelectorAll('.code-section');\n\n    // Get last selected language from localStorage or set default value\n    let lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp';\n\n    codeSections.forEach((section, sectionIndex) => {\n        const codeTabs = section.querySelectorAll('.code-tab');\n        const codeBlocks = section.querySelectorAll('.code-block');\n        const copyBtn = section.querySelector('.copy-btn');\n\n        codeTabs.forEach((tab) => {\n            tab.addEventListener('click', () => {\n                codeTabs.forEach((t) => {\n                    t.classList.remove('dsa_article_code_active');\n                });\n                tab.classList.add('dsa_article_code_active');\n\n                const lang = tab.dataset.lang;\n                const activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\n                codeBlocks.forEach((block) => {\n                    if (block === activeBlock) {\n                        block.classList.add('dsa_article_code_active');\n                    } else {\n                        block.classList.remove('dsa_article_code_active');\n                    }\n                });\n\n                // Update last selected language for all sections and store in localStorage\n                lastSelectedLanguage = lang;\n                localStorage.setItem('lastSelectedLanguage', lang);\n                codeSections.forEach((otherSection, otherIndex) => {\n                    if (otherIndex !== sectionIndex) {\n                        const otherTabs = otherSection.querySelectorAll('.code-tab');\n                        otherTabs.forEach((otherTab) => {\n                            if (otherTab.dataset.lang === lang) {\n                                otherTab.classList.add('dsa_article_code_active');\n                            } else {\n                                otherTab.classList.remove('dsa_article_code_active');\n                            }\n                        });\n                        const otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\n                        const otherCodeBlocks = otherSection.querySelectorAll('.code-block');\n                        otherCodeBlocks.forEach((block) => {\n                            if (block === otherActiveBlock) {\n                                block.classList.add('dsa_article_code_active');\n                            } else {\n                                block.classList.remove('dsa_article_code_active');\n                            }\n                        });\n                    }\n                });\n            });\n        });\n\n        // Handle copy button click event\n        copyBtn.addEventListener('click', () => {\n            const activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\n            navigator.clipboard.writeText(activeBlock.innerText);\n            copyBtn.classList.add('dsa_article_code_active');\n            setTimeout(() => {\n                copyBtn.classList.remove('dsa_article_code_active');\n            }, 1000);\n        });\n    });\n\n    // Set initial state of the tabs\n    codeSections.forEach((section) => {\n        const codeTabs = section.querySelectorAll('.code-tab');\n        const codeBlocks = section.querySelectorAll('.code-block');\n\n        codeTabs.forEach((tab) => {\n            if (tab.dataset.lang === lastSelectedLanguage) {\n                tab.classList.add('dsa_article_code_active');\n            } else {\n                tab.classList.remove('dsa_article_code_active');\n            }\n        });\n\n        codeBlocks.forEach((block) => {\n            if (block.dataset.lang === lastSelectedLanguage) {\n                block.classList.add('dsa_article_code_active');\n            } else {\n                block.classList.remove('dsa_article_code_active');\n            }\n        });\n    });\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>"
}