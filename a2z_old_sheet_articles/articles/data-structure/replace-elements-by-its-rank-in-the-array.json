{
    "dislikes": 10,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:54 GMT+0530 (India Standard Time)",
    "slug": "replace-elements-by-its-rank-in-the-array",
    "aid": "1614",
    "tuf_plus": "",
    "title": "Replace elements by its rank in the array",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "hashing",
            "topic-title": "Hashing"
        }
    ],
    "category_tag": "data-structure",
    "likes": 77,
    "preview": "Replace elements by its rank in the array Problem Statement: Given an array of N integers, the task is to replace each element of the array by its rank in the array. Examples: Example 1: Input: 20...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Replace elements by its rank in the array</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Problem Statement: </strong>Given an array of N integers, the task is to replace each element of the array by its rank in the array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Examples:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> 20 15 26 2 98 6\n<strong>Output:</strong> 4 3 5 1 6 2\n<strong>Explanation:</strong> When sorted,the array is 2,6,15,20,26,98. So the rank of 2 is 1,rank of 6 is 2,rank of 15 is 3 and so\u2026\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> 1 5 8 15 8 25 9\n<strong>Output:</strong> 1 2 3 5 3 6 4\n<strong>Explanation:</strong> When sorted,the array is 1,5,8,8,9,15,25. So the rank of 1 is 1,rank of 5 is 2,rank of 8 is 3 and so\u2026</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 1:Naive approach</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Intuition: </strong>Use two for loops and calculate a rank for each element.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Iterative over the array using a for loop.</li><li>Now use another for loop to check the number of elements having value less than the current element.</li><li>We can use a set to get the number of unique elements having value less than the current element.</li><li>Number of such unique elements + 1 is the rank of that element.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main()\n{\n\tint n = 6;\n\tint arr[n] = {20, 15, 26, 2, 98, 6};\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tset&lt;int&gt;s;\n\t\tfor (int j = 0; j &lt; n; j++) {\n\t\t\tif (arr[j] &lt; arr[i]) {\n\t\t\t\ts.insert(arr[j]);\n\t\t\t}\n\t\t}\n\t\tcout &lt;&lt; s.size() + 1 &lt;&lt; \" \";\n\t}\n\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> 4 3 5 1 6 2</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong> O(N*N) as we are using double for loop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity:</strong> O(N) as we are using set.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    int n = 6;\n    int arr[] = {20,15,26,2,98,6};\n    for (int i = 0; i &lt; n; i++) {\n      Set &lt; Integer &gt; s = new HashSet &lt; Integer &gt; ();\n      for (int j = 0; j &lt; n; j++) {\n        if (arr[j] &lt; arr[i]) {\n          s.add(arr[j]);\n        }\n      }\n      int rank = s.size() + 1;\n      System.out.print(rank + \" \");\n    }\n  }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> 4 3 5 1 6 2</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong> O(N*N) as we are using double for loop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity:</strong> O(N) as we are using set.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 2: optimized</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Intuition: </strong>Sort the array and store the rank of the element in a map.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Copy all the elements of the array in a dummy array.</li><li>Sort the dummy array.</li><li>Take a variable temp to calculate the rank of each element.Initially the value of temp is 1.</li><li>Maintain a map to store the rank of each element.</li><li>Now traverse through the dummy array,if element is previously not stored in map then store the value of element with the temp and then increament temp.</li><li>Now traverse through the original array and print the rank of that corresponding element using map.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main()\n{\n\tint n = 6;\n\tint arr[n] = {20, 15, 26, 2, 98, 6};\n\tmap&lt;int, int&gt;mp;\n\tint temp = 1;\n\tint brr[n];\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tbrr[i] = arr[i];\n\t}\n\tsort(brr, brr + n);\n\tfor (int i = 0; i &lt; n; i++) {\n\t\t//if element is previously not store in the map\n\t\tif (mp[brr[i]] == 0) {\n\t\t\tmp[brr[i]] = temp;\n\t\t\ttemp++;\n\t\t}\n\t}\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tcout &lt;&lt; mp[arr[i]] &lt;&lt; \" \";\n\t}\n\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> 4 3 5 1 6 2</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong>O(n)+O(nlogn)+O(n). O(n) for copying the elements from the original to the dummy array, O(nlogn) for sorting the dummy array, and O(n) for printing the ranks.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity:</strong>O(N+N), for using dummy array and hashmap.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    int arr[] = {20,15,26,2,98,6};\n    HashMap &lt; Integer, Integer &gt; mp = new HashMap &lt; Integer, Integer &gt; ();\n    int temp = 1;\n    int n = arr.length;\n    int brr[] = new int[n];\n    for (int i = 0; i &lt; n; i++) {\n      brr[i] = arr[i];\n    }\n    Arrays.sort(brr);\n    for (int i = 0; i &lt; n; i++) {\n      //if element is previously not store in the map\n      if (mp.get(brr[i]) == null) {\n        mp.put(brr[i], temp);\n        temp++;\n      }\n    }\n    for (int i = 0; i &lt; n; i++) {\n      System.out.print(mp.get(arr[i]) + \" \");\n    }\n  }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> 4 3 5 1 6 2</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong>O(n)+O(nlogn)+O(n). O(n) for copying the elements from the original to the dummy array, O(nlogn) for sorting the dummy array, and O(n) for printing the ranks.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity:</strong>O(N+N), for using dummy array and hashmap.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;<a href=\"https://www.linkedin.com/in/pranav-padawe-9486241ba/\" target=\"_blank\" rel=\"noreferrer noopener\">Pranav Padawe</a>&nbsp;for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}