{
    "dislikes": 18,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:41 GMT+0530 (India Standard Time)",
    "slug": "reverse-a-given-array",
    "aid": "1554",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/reverse-an-array",
    "title": "Reverse a given Array",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        }
    ],
    "category_tag": "data-structure",
    "likes": 365,
    "preview": "Problem Statement: You are given an array. The task is to reverse the array and print it. Examples: Example 1: Input: N = 5, arr[] = {5,4,3,2,1} Output: {1,2,3,4,5} Explanation: Since the order of...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> You are given an array. The task is to reverse the array and print it.&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Examples:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> N = 5, arr[] = {5,4,3,2,1}\n<strong>Output:</strong> {1,2,3,4,5}\n<strong>Explanation:</strong> Since the order of elements gets reversed the first element will occupy the fifth position, the second element occupies the fourth position and so on.\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> N=6 arr[] = {10,20,30,40}\n<strong>Output:</strong> {40,30,20,10}\n<strong>Explanation:</strong> Since the order of elements gets reversed the first element will occupy the fifth position, the second element occupies the fourth position and so on.</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Solution</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Disclaimer</em></strong>: <em>Don't jump directly to the solution, try it out yourself first.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 1: Using an extra array.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach</strong>: Declare an array,ans[] of the same size as the input array. Iterate from the back of the input array while storing the elements in ans[]&nbsp; in opposite direction.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><img width=\"624\" height=\"351\" src=\"https://lh3.googleusercontent.com/clOYBkJmcqseUotwY_M55DvL6IbyATkhgR_SSXDR59B1_m8HjNmu2RbMkX7N5cQICuynMki-A1PTn1LrxXJQZzWg6C1jE5G7OE8y98_K4x-MbypT4Aphs3XDTg2iC66-af4dnfbQ\"></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n//Function to print array\nvoid printArray(int ans[], int n) {\n  cout &lt;&lt; \"The reversed array is:- \" &lt;&lt; endl;\n   for (int i = 0; i &lt; n; i++) {\n      cout &lt;&lt; ans[i] &lt;&lt; \" \";\n   }\n}\n//Function to reverse array using an auxiliary array\nvoid reverseArray(int arr[], int n) {\n   int ans[n];\n   for (int i = n - 1; i &gt;= 0; i--) {\n      ans[n - i - 1] = arr[i];\n   }\n   printArray(ans, n);\n}\nint main() {\n   int n = 5;\n   int arr[] = {5,4,3,2,1};\n   reverseArray(arr, n);\n   return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n), </strong>single-pass for reversing array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(n),</strong> for the extra array used.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n   //Function to print array\n   static void printArray(int ans[], int n) {\n      System.out.print(\"Reversed array is:- \\n\");\n      for (int i = 0; i &lt; n; i++) {\n         System.out.print(ans[i] + \" \");\n      }\n   }\n   //Function to reverse array using an auxiliary array\n   static void reverseArray(int arr[], int n) {\n      int[] ans = new int[n];\n      for (int i = n - 1; i &gt;= 0; i--) {\n         ans[n - i - 1] = arr[i];\n      }\n      printArray(ans, n);\n   }\n   public static void main(String[] args) {\n      int n = 5;\n      int arr[] = { 5, 4, 3, 2, 1};\n      reverseArray(arr, n);\n   }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n), </strong>single-pass for reversing array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(n),</strong> for the extra array used.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\"># function to print array\ndef printArray(arr, n):\n    print(\"The reversed array is:- \")\n    for i in range(n):\n        print(arr[i], end=\" \")\n    print()\n\n\ndef reverseArray(arr, n):\n    ans = [0] * n\n    for i in range(n - 1, -1, -1):\n        ans[n - i - 1] = arr[i]\n    printArray(ans, n)\n\n\n# Driver Code\nif __name__ == \"__main__\":\n    arr = [5, 4, 3, 2, 1]\n    n = len(arr)\n    reverseArray(arr, n)</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n), </strong>single-pass for reversing array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(n),</strong> for the extra array used.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 2: Space-optimized iterative method</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach: </strong>Unlike the previous method we use the same array to obtain the result. Follow the steps below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Keep a pointer p1\u00a0 at the first index and another p2 at the last index of the array.\u00a0</li><li>Swap the elements pointed by p1 and p2, Post swapping increment p1 and decrement p2.</li><li>This process is repeated for only the first n/2 elements where n is the length of array.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Note: Swapping all the n elements instead of n/2 elements leaves the array unaltered.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><img width=\"624\" height=\"153\" src=\"https://lh3.googleusercontent.com/iHCnj-AeDCeoc5f8vav2X489jxyB0QO9wzlKqs_r9iv9S2WWBiqQaduu7okTqZq87iVNEJ7OFybknUVyY3V0CQHeGZeQYuUfIVu5dwMn8mtWBsUJlmOZhw2rSMvwAhDt5PoRI3Z_\"></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\n\nusing namespace std;\n//Function to print array\nvoid printArray(int arr[], int n) {\n   cout &lt;&lt; \"The reversed array is:- \" &lt;&lt; endl;\n   for (int i = 0; i &lt; n; i++) {\n      cout &lt;&lt; arr[i] &lt;&lt; \" \";\n   }\n}\n//Function to reverse array \nvoid reverseArray(int arr[], int n) {\n   int p1 = 0, p2 = n - 1;\n   while (p1 &lt; p2) {\n      swap(arr[p1], arr[p2]);\n      p1++; p2--;\n   }\n   printArray(arr, n);\n}\nint main() {\n   int n = 5;\n   int arr[] = { 5, 4, 3, 2, 1};\n   reverseArray(arr, n);\n   return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong>, single-pass involved.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)&nbsp;</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n   //Function to print array\n   static void printArray(int arr[], int n) {\n      System.out.print(\"Reversed array is:- \\n\");\n      for (int i = 0; i &lt; n; i++) {\n         System.out.print(arr[i] + \" \");\n      }\n   }\n   //Function to reverse array \n   static void reverseArray(int arr[], int n) {\n      int p1 = 0, p2 = n - 1;\n      while (p1 &lt; p2) {\n         int tmp = arr[p1];\n         arr[p1] = arr[p2];\n         arr[p2] = tmp;\n         p1++;\n         p2--;\n      }\n      printArray(arr, n);\n   }\n   public static void main(String[] args) {\n      int n = 5;\n      int arr[] = { 5, 4, 3, 2, 1};\n      reverseArray(arr, n);\n\n   }\n}  \n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong>, single-pass involved.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)&nbsp;</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\"># function to print array\ndef printArray(arr, n):\n    print(\"The reversed array is:- \")\n    for i in range(n):\n        print(arr[i], end=\" \")\n    print()\n\n\n\n\ndef reverseArray(arr, n):\n    p1 = 0\n    p2 = n - 1\n    while p1 &lt; p2:\n        arr[p1], arr[p2] = arr[p2], arr[p1]\n        p1 += 1\n        p2 -= 1\n    printArray(arr, n)\n\n# Driver Code\nif __name__ == \"__main__\":\n    arr = [5, 4, 3, 2, 1]\n    n = len(arr)\n    reverseArray(arr, n)</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong>, single-pass involved.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)&nbsp;</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 3: Recursive method</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach</strong>: The recursive method has an approach almost similar to the iterative one. The approach has been broken down into some steps for simplicity.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>Create a function that takes an array, start index, and end index of the array as parameters.</li><li>Swap the elements present\u00a0 at the start and end index,\u00a0</li><li>The portion of the array left to be reversed is arr[start+1,end-1]. Make a recursive call to reverse the rest of the array. While calling recursion pass <strong>start +1\u00a0 </strong>and<strong> ends - 1 </strong>as parameters for the shrunk array. Repeat step 2.</li><li>Continue recursion as long as the \u2018start &lt; end\u2019 condition is satisfied. This is the base case for our recursion.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\n\nusing namespace std;\n//Function to print array\nvoid printArray(int arr[], int n) {\n   cout &lt;&lt; \"The reversed array is:- \" &lt;&lt; endl;\n   for (int i = 0; i &lt; n; i++) {\n      cout &lt;&lt; arr[i] &lt;&lt; \" \";\n   }\n}\n//Function to reverse array using recursion\nvoid reverseArray(int arr[], int start, int end) {\n   if (start &lt; end) {\n      swap(arr[start], arr[end]);\n      reverseArray(arr, start + 1, end - 1);\n   }\n}\nint main() {\n   int n = 5;\n   int arr[] = { 5, 4, 3, 2, 1 };\n   reverseArray(arr, 0, n - 1);\n   printArray(arr, n);\n   return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n   //Function to print array\n   static void printArray(int arr[], int n) {\n      System.out.print(\"Reversed array is:- \\n\");\n      for (int i = 0; i &lt; n; i++) {\n         System.out.print(arr[i] + \" \");\n      }\n   }\n   //Function to reverse array using recursion\n   static void reverseArray(int arr[], int start, int end) {\n      if (start &lt; end) {\n         int tmp = arr[start];\n         arr[start] = arr[end];\n         arr[end] = tmp;\n         reverseArray(arr, start + 1, end - 1);\n      }\n   }\n   public static void main(String[] args) {\n      int n = 5;\n      int arr[] = { 5, 4, 3, 2, 1};\n      reverseArray(arr, 0, n - 1);\n      printArray(arr, n);\n   }\n}\n \n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\"># function to print array\ndef printArray(arr, n):\n    print(\"The reversed array is:- \")\n    for i in range(n):\n        print(arr[i], end=\" \")\n    print()\n\n\ndef reverseArray(arr, start, end):\n    if start &lt; end:\n        arr[start], arr[end] = arr[end], arr[start]\n        reverseArray(arr, start + 1, end - 1)\n\n\n# Driver Code\nif __name__ == \"__main__\":\n    arr = [5, 4, 3, 2, 1]\n    n = len(arr)\n    reverseArray(arr, 0, n - 1)\n    printArray(arr, n)</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution 4: Using library function (New Approach)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Approach</strong>: C++ and Java have inbuilt functions to reverse an array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>For C++:-</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The <strong>std::reverse</strong> function in C++ is predefined in a header file algorithm.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Syntax:&nbsp;array_name.reverse(BidirectionalIterator first, BidirectionalIterator last)</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Bidirectional iterators first and last indicate the starting and ending positions in the array. Elements that lie in this range are reversed. Note that this range includes the first but <strong>excludes the last element</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>For Java:-</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reverse method in java can be imported from the Collections class present in java.util package.&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Note:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>Since this method expects an <strong>object</strong> as a parameter we have to convert the array into a list object using <strong>asList()</strong>.</li><li>Java collections require wrapper classes instead of primitive data types. In order to reverse an integer array use <strong>Integer</strong> instead of int.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Syntax:</em></strong> <strong><em>Collections.reverse(class_obj);&nbsp;</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\n#include&lt;algorithm&gt;\n\nusing namespace std;\n//Function to print array\nvoid printArray(int arr[], int n) {\n   cout &lt;&lt; \"The reversed array is:- \" &lt;&lt; endl;\n   for (int i = 0; i &lt; n; i++) {\n      cout &lt;&lt; arr[i] &lt;&lt; \" \";\n   }\n}\n//Reverse array using library function\nvoid reverseArray(int arr[], int n) {\n   //Reversing elements from index 0 to n-1 \n   reverse(arr, arr + n);\n}\nint main() {\n   int n = 5;\n   int arr[] = { 5, 4, 3, 2, 1 };\n   reverseArray(arr, n);\n   printArray(arr, n);\n   return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.*;\npublic class Main {\n   //Function to print array\n   static void printArray(Integer arr[], int n) {\n      System.out.print(\"Reversed array is:- \\n\");\n      for (int i = 0; i &lt; n; i++) {\n         System.out.print(arr[i] + \" \");\n      }\n   }\n   //Reverse array using library function\n   static void reverseArray(Integer arr[]) {\n      //fetching array as list object\n      //reversing the fetched object\n      Collections.reverse(Arrays.asList(arr));\n   }\n   public static void main(String[] args) {\n      int n = 5;\n      Integer arr[] = {5,4,3,2,1};\n      reverseArray(arr);\n      printArray(arr, n);\n   }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\"># function to print array\ndef printArray(arr, n):\n    print(\"The reversed array is:- \")\n    for i in range(n):\n        print(arr[i], end=\" \")\n    print()\n\n\ndef reverseArray(arr, n):\n    arr.reverse()\n\n\n# Driver Code\nif __name__ == \"__main__\":\n    arr = [5, 4, 3, 2, 1]\n    n = len(arr)\n    reverseArray(arr, n)\n    printArray(arr, n)</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The reversed array is:-<br>1 2 3 4 5</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(n)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to\u00a0<strong><a href=\"https://www.linkedin.com/in/somparna-c-a724a5121/\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Somparna Chakrabarti</strong></a></strong>\u00a0<em><em>and\u00a0<a href=\"https://www.linkedin.com/in/imsudip/\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Sudip Ghosh</strong></a></em></em></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}