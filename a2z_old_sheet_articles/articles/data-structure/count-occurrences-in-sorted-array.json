{
    "dislikes": 1,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:10:17 GMT+0530 (India Standard Time)",
    "slug": "count-occurrences-in-sorted-array",
    "aid": "1728",
    "title": "Count Occurrences in Sorted Array",
    "tuf_plus": "",
    "topics": [
        {
            "topic-id": "arrays",
            "topic-title": "Arrays"
        },
        {
            "topic-id": "binary-search",
            "topic-title": "Binary Search"
        },
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "hashing",
            "topic-title": "Hashing"
        }
    ],
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> You are given a sorted array containing N integers and a number X, you have to find the occurrences of X in the given array.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\"><!-- Insert New Examples Here -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> N = 7,  X = 3 , array[] = {2, 2 , 3 , 3 , 3 , 3 , 4}\n<strong>Output</strong>: 4\n<strong>Explanation:</strong> 3 is occurring 4 times in \nthe given array so it is our answer.\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> N = 8,  X = 2 , array[] = {1, 1, 2, 2, 2, 2, 2, 3}\n<strong>Output</strong>: 5\n<strong>Explanation:</strong> 2 is occurring 5 times in the given array so it is our answer.</pre>\n</pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Practice Section-->\n<div class=\"practice\">\n<span><strong>Practice: </strong></span>\n<div class=\"problem-buttons\">\n\n<!-- Add Problem Link inside href -->\n<a href=\"https://www.codingninjas.com/codestudio/problems/occurrence-of-x-in-a-sorted-array_630456?utm_source=striver&amp;utm_medium=website&amp;utm_campaign=codestudio_a_zcourse\" target=\"_blank\" rel=\"noopener\">\n<span>Solve Problem</span>\n<img src=\"https://static.takeuforward.org/wp/uploads/2023/04/Group-11-5.png\" alt=\"code-studio\">\n</a>\n</div>\n</div>\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out\nyourself first. </em></p>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<div class=\"horizontal_navbar_dsa_article\">\n<div class=\"grid_container_two\">\n<a href=\"#brute-force-approach\" class=\"two-boxes box-a\">\nBrute Force Approach\n</a>\n<a href=\"#optimal-approach\" class=\"two-boxes box-c\">\nOptimal Approach\n</a>\n<a href=\"#dsa_article_video_explanation\" class=\"three-boxes box-d\">\n<svg width=\"26\" height=\"26\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8 10L13.19 7L8 4V10ZM19.56 2.17C19.69 2.64 19.78 3.27 19.84 4.07C19.91 4.87 19.94 5.56 19.94 6.16L20 7C20 9.19 19.84 10.8 19.56 11.83C19.31 12.73 18.73 13.31 17.83 13.56C17.36 13.69 16.5 13.78 15.18 13.84C13.88 13.91 12.69 13.94 11.59 13.94L10 14C5.81 14 3.2 13.84 2.17 13.56C1.27 13.31 0.69 12.73 0.44 11.83C0.31 11.36 0.22 10.73 0.16 9.93C0.0900001 9.13 0.0599999 8.44 0.0599999 7.84L0 7C0 4.81 0.16 3.2 0.44 2.17C0.69 1.27 1.27 0.69 2.17 0.44C2.64 0.31 3.5 0.22 4.82 0.16C6.12 0.0899998 7.31 0.0599999 8.41 0.0599999L10 0C14.19 0 16.8 0.16 17.83 0.44C18.73 0.69 19.31 1.27 19.56 2.17Z\" fill=\"red\"></path>\n</svg>\n\n</a>\n<div class=\"box-e tooltip\">\n<svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.842 9.25L11.9577 10.17C11.2502 10.89 10.8081 11.5 10.8081 13H8.84297V12.5C8.84297 11.39 9.28511 10.39 9.99255 9.67L11.2109 8.41C11.5745 8.05 11.7906 7.55 11.7906 7C11.7906 6.46957 11.5836 5.96086 11.2151 5.58579C10.8465 5.21071 10.3467 5 9.82552 5C9.30434 5 8.80451 5.21071 8.43598 5.58579C8.06745 5.96086 7.86041 6.46957 7.86041 7H5.89531C5.89531 5.93913 6.30938 4.92172 7.04644 4.17157C7.7835 3.42143 8.78316 3 9.82552 3C10.8679 3 11.8675 3.42143 12.6046 4.17157C13.3417 4.92172 13.7557 5.93913 13.7557 7C13.7543 7.84324 13.4259 8.65183 12.842 9.25ZM10.8081 17H8.84297V15H10.8081M9.82552 0C8.53521 0 7.25754 0.258658 6.06545 0.761205C4.87337 1.26375 3.79021 2.00035 2.87783 2.92893C1.03519 4.8043 0 7.34784 0 10C0 12.6522 1.03519 15.1957 2.87783 17.0711C3.79021 17.9997 4.87337 18.7362 6.06545 19.2388C7.25754 19.7413 8.53521 20 9.82552 20C12.4314 20 14.9306 18.9464 16.7732 17.0711C18.6158 15.1957 19.651 12.6522 19.651 10C19.651 4.47 15.2296 0 9.82552 0Z\" fill=\"black\"></path>\n</svg>\n<div class=\"bottom\">\n<p>Expand any one approach by clicking the given options in the bar. Clicking one approach on bar,\ncloses all other expands. You can manually expand more than one approach at a time</p>\n<i></i>\n</div>\n\n</div>\n</div>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<div class=\"dsa_article_dropdown_approachs \">\n\n<!-- Brute Force Approach Starts from here -->\n<div id=\"brute-force-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nBrute Force Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<h3><strong>Approach</strong>: </h3>\n<p>The approach is simple. We will linearly search the entire array, and try to increase the counter whenever we get the target value in the array. Using a for loop that runs from 0 to n - 1, containing an if the condition that checks whether the value at that index equals target. If true then increase the counter, at last return the counter.</p>\n\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint count(vector&lt;int&gt;&amp; arr, int n, int x) {\n    int cnt = 0;\n    for (int i = 0; i &lt; n; i++) {\n\n        // counting the occurrences:\n        if (arr[i] == x) cnt++;\n    }\n    return cnt;\n}\n\nint main()\n{\n    vector&lt;int&gt; arr =  {2, 4, 6, 8, 8, 8, 11, 13};\n    int n = 8, x = 8;\n    int ans = count(arr, n, x);\n    cout &lt;&lt; \"The number of occurrences is: \"\n         &lt;&lt; ans &lt;&lt; \"\\n\";\n    return 0;\n}\n</code>\n</pre>\n<p>\n<strong>Output:</strong> The number of occurrences is: 3\n</p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.util.*;\n\npublic class tUf {\n    public static int count(int arr[], int n, int x) {\n        int cnt = 0;\n        for (int i = 0; i &lt; n; i++) {\n\n            // counting the occurrences:\n            if (arr[i] == x) cnt++;\n        }\n        return cnt;\n    }\n\n    public static void main(String[] args) {\n        int[] arr =  {2, 4, 6, 8, 8, 8, 11, 13};\n        int n = 8, x = 8;\n        int ans = count(arr, n, x);\n        System.out.println(\"The number of occurrences is: \" + ans);\n    }\n}\n</code>\n</pre>\n<p>\n<strong>Output:</strong> The number of occurrences is: 3\n</p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\ndef count(arr: [int], n: int, x: int) -&gt; int:\n    cnt = 0\n    for i in range(n):\n        if arr[i] == x:\n            cnt += 1\n    return cnt\n\nif __name__ == \"__main__\":\n    arr = [2, 4, 6, 8, 8, 8, 11, 13]\n    n = 8\n    x = 8\n    ans = count(arr, n, x)\n    print(\"The number of occurrences is:\", ans)</code>\n</pre>\n<p>\n<strong>Output:</strong> The number of occurrences is: 3\n</p>\n</div>\n<div class=\"code-block \" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\nfunction count(arr, n, x) {\n    let cnt = 0;\n    for (let i = 0; i &lt; n; i++) {\n        // counting the occurrences:\n        if (arr[i] === x) cnt++;\n    }\n    return cnt;\n}\n\nlet arr = [2, 4, 6, 8, 8, 8, 11, 13];\nlet n = 8, x = 8;\nlet ans = count(arr, n, x);\nconsole.log(\"The number of occurrences is:\", ans);\n</code>\n</pre>\n<p>\n<strong>Output:</strong> The number of occurrences is: 3\n</p>\n</div>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n</p><p><strong>Time Complexity: </strong>O(N), N = size of the given array<br><strong>Reason: </strong>We are traversing the whole array.</p>\n<p><strong>Space Complexity: </strong>O(1) as we are not using any extra space.</p>\n\n<p></p>\n</details>\n</div>\n</details>\n</div>\n<!-- Brute Force Approach Ends here -->\n\n<!-- Optimal Approach Starts from here -->\n\n<div id=\"optimal-approach\">\n<details>\n<summary class=\"main-summary\">\n<span>\nOptimal Approach\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"common-drops\">\n<details class=\"secondary-details\" open=\"\">\n<summary class=\"secondary-summary\">\n<span>\nAlgorithm / Intuition\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"approach-algorithm\">\n<h3><strong>Optimal Approach(Binary Search)</strong>:&nbsp;</h3>\n<p>In the previous article, we discussed how to find the first and the last occurrences of a number in a sorted array using <a href=\"https://takeuforward.org/data-structure/binary-search-explained/\">Binary Search</a>.</p>\n<p><em>The primary objective of the Binary Search algorithm is to efficiently determine the appropriate half to eliminate, thereby reducing the search space by half. It does this by determining a specific condition that ensures that the target is not present in that half.</em></p>\n<p>Now in order to solve this problem, we are going to use the previous concept. We will find the first and the last occurrences and figure out the number of occurrences like the following:</p>\n<p>Total number of occurrences = last occurrence - first occurrence + 1</p>\n<h3><strong>Algorithm:</strong></h3>\n<ul><li>We will get the first and the last occurrences of the number using the function <strong>firstAndLastPosition()</strong>. For the implementation details of the function, please refer to the <a href=\"https://takeuforward.org/data-structure/last-occurrence-in-a-sorted-array/\">previous article</a>.</li><li>After getting the indices, we will check the following cases:<ul><li><strong>If the first index == -1: </strong>This means that the target value is not present in the array. So, we will return 0 as the answer.</li><li><strong>Otherwise: </strong>We will find the total number of occurrences like this: <br>The total number of occurrences&nbsp; = (last index - first index + 1) and return this length as the answer.</li></ul></li></ul>\n\n</div>\n</details>\n<details class=\"code-section secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nCode\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<div class=\"code-tabs\">\n<button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n<button class=\"code-tab\" data-lang=\"java\">Java</button>\n<button class=\"code-tab\" data-lang=\"python\">Python</button>\n<button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n<svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n</path>\n</svg>\n</div>\n<div class=\"code-content\">\n<div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint firstOccurrence(vector&lt;int&gt; &amp;arr, int n, int k) {\n    int low = 0, high = n - 1;\n    int first = -1;\n\n    while (low &lt;= high) {\n        int mid = (low + high) / 2;\n        // maybe an answer\n        if (arr[mid] == k) {\n            first = mid;\n            //look for smaller index on the left\n            high = mid - 1;\n        }\n        else if (arr[mid] &lt; k) {\n            low = mid + 1; // look on the right\n        }\n        else {\n            high = mid - 1; // look on the left\n        }\n    }\n    return first;\n}\n\nint lastOccurrence(vector&lt;int&gt; &amp;arr, int n, int k) {\n    int low = 0, high = n - 1;\n    int last = -1;\n\n    while (low &lt;= high) {\n        int mid = (low + high) / 2;\n        // maybe an answer\n        if (arr[mid] == k) {\n            last = mid;\n            //look for larger index on the right\n            low = mid + 1;\n        }\n        else if (arr[mid] &lt; k) {\n            low = mid + 1; // look on the right\n        }\n        else {\n            high = mid - 1; // look on the left\n        }\n    }\n    return last;\n}\n\n\npair&lt;int, int&gt; firstAndLastPosition(vector&lt;int&gt;&amp; arr, int n, int k) {\n    int first = firstOccurrence(arr, n, k);\n    if (first == -1) return { -1, -1};\n    int last = lastOccurrence(arr, n, k);\n    return {first, last};\n}\n\nint count(vector&lt;int&gt;&amp; arr, int n, int x) {\n    pair&lt;int, int&gt; ans = firstAndLastPosition(arr, n, x);\n    if (ans.first == -1) return 0;\n    return (ans.second - ans.first + 1);\n}\n\nint main()\n{\n    vector&lt;int&gt; arr =  {2, 4, 6, 8, 8, 8, 11, 13};\n    int n = 8, x = 8;\n    int ans = count(arr, n, x);\n    cout &lt;&lt; \"The number of occurrences is: \"\n         &lt;&lt; ans &lt;&lt; \"\\n\";\n    return 0;\n}\n</code>\n</pre>\n<p>\n<strong>Output:</strong>The number of occurrences is: 3\n</p>\n</div>\n<div class=\"code-block \" data-lang=\"java\">\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nimport java.util.*;\n\npublic class tUf {\n\n    public static int firstOccurrence(int[] arr, int n, int k) {\n        int low = 0, high = n - 1;\n        int first = -1;\n\n        while (low &lt;= high) {\n            int mid = (low + high) / 2;\n            // maybe an answer\n            if (arr[mid] == k) {\n                first = mid;\n                // look for smaller index on the left\n                high = mid - 1;\n            } else if (arr[mid] &lt; k) {\n                low = mid + 1; // look on the right\n            } else {\n                high = mid - 1; // look on the left\n            }\n        }\n        return first;\n    }\n\n    public static int lastOccurrence(int[] arr, int n, int k) {\n        int low = 0, high = n - 1;\n        int last = -1;\n\n        while (low &lt;= high) {\n            int mid = (low + high) / 2;\n            // maybe an answer\n            if (arr[mid] == k) {\n                last = mid;\n                // look for larger index on the right\n                low = mid + 1;\n            } else if (arr[mid] &lt; k) {\n                low = mid + 1; // look on the right\n            } else {\n                high = mid - 1; // look on the left\n            }\n        }\n        return last;\n    }\n\n    public static int[] firstAndLastPosition(int[] arr, int n, int k) {\n        int first = firstOccurrence(arr, n, k);\n        if (first == -1) return new int[] { -1, -1};\n        int last = lastOccurrence(arr, n, k);\n        return new int[] {first, last};\n    }\n\n    public static int count(int arr[], int n, int x) {\n        int[] ans = firstAndLastPosition(arr, n, x);\n        if (ans[0] == -1) return 0;\n        return (ans[1] - ans[0] + 1);\n    }\n\n    public static void main(String[] args) {\n        int[] arr =  {2, 4, 6, 8, 8, 8, 11, 13};\n        int n = 8, x = 8;\n        int ans = count(arr, n, x);\n        System.out.println(\"The number of occurrences is: \" + ans);\n    }\n}\n</code>\n</pre>\n<p>\n<strong>Output:</strong>The number of occurrences is: 3\n</p>\n</div>\n<div class=\"code-block\" data-lang=\"python\">\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">\ndef firstOccurrence(arr, n, k):\n    low = 0\n    high = n - 1\n    first = -1\n\n    while low &lt;= high:\n        mid = (low + high) // 2\n        # maybe an answer\n        if arr[mid] == k:\n            first = mid\n            # look for smaller index on the left\n            high = mid - 1\n        elif arr[mid] &lt; k:\n            low = mid + 1  # look on the right\n        else:\n            high = mid - 1  # look on the left\n\n    return first\n\n\ndef lastOccurrence(arr, n, k):\n    low = 0\n    high = n - 1\n    last = -1\n\n    while low &lt;= high:\n        mid = (low + high) // 2\n        # maybe an answer\n        if arr[mid] == k:\n            last = mid\n            # look for larger index on the right\n            low = mid + 1\n        elif arr[mid] &lt; k:\n            low = mid + 1  # look on the right\n        else:\n            high = mid - 1  # look on the left\n\n    return last\n\n\ndef firstAndLastPosition(arr, n, k):\n    first = firstOccurrence(arr, n, k)\n    if first == -1:\n        return (-1, -1)\n    last = lastOccurrence(arr, n, k)\n    return (first, last)\n\ndef count(arr: [int], n: int, x: int) -&gt; int:\n    first, last = firstAndLastPosition(arr, n, x)\n    if first == -1:\n        return 0\n    return last - first + 1\n\nif __name__ == \"__main__\":\n    arr = [2, 4, 6, 8, 8, 8, 11, 13]\n    n = 8\n    x = 8\n    ans = count(arr, n, x)\n    print(\"The number of occurrences is:\", ans)</code>\n</pre>\n<p>\n<strong>Output:</strong>The number of occurrences is: 3\n</p>\n</div>\n<div class=\"code-block\" data-lang=\"javascript\">\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">\nfunction firstOccurrence(arr, n, k) {\n    let low = 0, high = n - 1;\n    let first = -1;\n\n    while (low &lt;= high) {\n        let mid = Math.floor((low + high) / 2);\n        // maybe an answer\n        if (arr[mid] === k) {\n            first = mid;\n            // look for smaller index on the left\n            high = mid - 1;\n        }\n        else if (arr[mid] &lt; k) {\n            low = mid + 1; // look on the right\n        }\n        else {\n            high = mid - 1; // look on the left\n        }\n    }\n    return first;\n}\n\nfunction lastOccurrence(arr, n, k) {\n    let low = 0, high = n - 1;\n    let last = -1;\n\n    while (low &lt;= high) {\n        let mid = Math.floor((low + high) / 2);\n        // maybe an answer\n        if (arr[mid] === k) {\n            last = mid;\n            // look for larger index on the right\n            low = mid + 1;\n        }\n        else if (arr[mid] &lt; k) {\n            low = mid + 1; // look on the right\n        }\n        else {\n            high = mid - 1; // look on the left\n        }\n    }\n    return last;\n}\n\nfunction firstAndLastPosition(arr, n, k) {\n    let first = firstOccurrence(arr, n, k);\n    if (first === -1) return [-1, -1];\n    let last = lastOccurrence(arr, n, k);\n    return [first, last];\n}\n\nfunction count(arr, n, x) {\n    let [first, last] = firstAndLastPosition(arr, n, x);\n    if (first === -1) return 0;\n    return last - first + 1;\n}\n\nlet arr = [2, 4, 6, 8, 8, 8, 11, 13];\nlet n = 8, x = 8;\nlet ans = count(arr, n, x);\nconsole.log(\"The number of occurrences is:\", ans);\n</code>\n</pre>\n<p>\n<strong>Output:</strong>The number of occurrences is: 3\n</p>\n</div>\n</div>\n</details>\n<details class=\"secondary-details\">\n<summary class=\"secondary-summary\">\n<span>\nComplexity Analysis\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n</path>\n</svg>\n</summary>\n<p>\n</p><p><strong>Time Complexity: </strong>O(2*logN), where N = size of the given array.<br><strong>Reason: </strong>We are basically using the binary search algorithm twice.</p>\n<p><strong>Space Complexity: </strong>O(1) as we are using no extra space.</p>\n\n<p></p>\n</details>\n</div>\n</details>\n</div>\n<!-- Optimal Approach Starts from here -->\n\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n<details>\n<summary class=\"main-summary\">\n<span>\nVideo Explanation\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"yt-video-wrapper\">\n\n<!-- Insert iframe embed Link of Youtube Video-->\n<iframe class=\"lazy-loaded\" loading=\"lazy\" title=\"Count Occurrences\" width=\"810\" height=\"456\" data-lazy-type=\"iframe\" data-src=\"https://www.youtube.com/embed/hjR1IYVx9lY\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/pLT_9jwaPLs?feature=oembed\"></iframe><noscript>\n<iframe loading=\"lazy\" title=\"Count Occurrences\" width=\"810\" height=\"456\" src=\"https://www.youtube.com/embed/hjR1IYVx9lY\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"></iframe></noscript>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script>\n\nconst codeSections = document.querySelectorAll('.code-section');\n\n// Get last selected language from localStorage or set default value\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\n// Update last selected language for all sections and store in localStorage\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\n// Handle copy button click event\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\n// Set initial state of the tabs\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<script>\nconst codeSections = document.querySelectorAll('.code-section');\n\nlet lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp'; \n\ncodeSections.forEach((section, sectionIndex) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\nconst copyBtn = section.querySelector('.copy-btn');\n\ncodeTabs.forEach((tab) => {\ntab.addEventListener('click', () => {\ncodeTabs.forEach((t) => {\nt.classList.remove('dsa_article_code_active');\n});\ntab.classList.add('dsa_article_code_active');\n\nconst lang = tab.dataset.lang;\nconst activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\ncodeBlocks.forEach((block) => {\nif (block === activeBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n\nlastSelectedLanguage = lang;\nlocalStorage.setItem('lastSelectedLanguage', lang);\ncodeSections.forEach((otherSection, otherIndex) => {\nif (otherIndex !== sectionIndex) {\nconst otherTabs = otherSection.querySelectorAll('.code-tab');\notherTabs.forEach((otherTab) => {\nif (otherTab.dataset.lang === lang) {\notherTab.classList.add('dsa_article_code_active');\n} else {\notherTab.classList.remove('dsa_article_code_active');\n}\n});\nconst otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\nconst otherCodeBlocks = otherSection.querySelectorAll('.code-block');\notherCodeBlocks.forEach((block) => {\nif (block === otherActiveBlock) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n}\n});\n});\n});\n\ncopyBtn.addEventListener('click', () => {\nconst activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\nnavigator.clipboard.writeText(activeBlock.innerText);\ncopyBtn.classList.add('dsa_article_code_active');\nsetTimeout(() => {\ncopyBtn.classList.remove('dsa_article_code_active');\n}, 1000);\n});\n});\n\ncodeSections.forEach((section) => {\nconst codeTabs = section.querySelectorAll('.code-tab');\nconst codeBlocks = section.querySelectorAll('.code-block');\n\ncodeTabs.forEach((tab) => {\nif (tab.dataset.lang === lastSelectedLanguage) {\ntab.classList.add('dsa_article_code_active');\n} else {\ntab.classList.remove('dsa_article_code_active');\n}\n});\n\ncodeBlocks.forEach((block) => {\nif (block.dataset.lang === lastSelectedLanguage) {\nblock.classList.add('dsa_article_code_active');\n} else {\nblock.classList.remove('dsa_article_code_active');\n}\n});\n});\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<script src=\"https://takeuforward.org/UXApproachDropDowns/2ApproachJSScript.js\"></script>\n<!-- /wp:html -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to\u00a0<a href=\"https://www.linkedin.com/in/rushikeshadhav/\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"Rushikesh Yadav\">Rushikesh Yadav</a>\u00a0and <em><strong><a href=\"https://www.linkedin.com/in/kriti39/\" target=\"_blank\" rel=\"noreferrer noopener\">KRITIDIPTA GHOSH</a></strong></em></em> <em>for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->",
    "category_tag": "data-structure",
    "likes": 168,
    "preview": "Problem Statement: You are given a sorted array containing N integers and a number X, you have to find the occurrences of X in the given array. Examples Example 1: Input: N = 7, X = 3 , array[] = {..."
}