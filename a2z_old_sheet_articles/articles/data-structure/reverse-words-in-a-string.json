{
    "dislikes": 88,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:35 GMT+0530 (India Standard Time)",
    "slug": "reverse-words-in-a-string",
    "aid": "1531",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/reverse-every-word-in-a-string",
    "title": "Reverse Words in a String",
    "topics": [
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "string",
            "topic-title": "String"
        }
    ],
    "likes": 245,
    "category_tag": "data-structure",
    "preview": "Problem Statement: Given a string s, reverse the words of the string. Examples: Example 1: Input: s=\u201dthis is an amazing program\u201d Output: \u201cprogram amazing an is this\u201d Example 2: Input: s=\u201dThis is de...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement:</strong> Given a string s, reverse the words of the string.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Examples:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\"><strong>Example 1:</strong>\n<strong>Input:</strong> s=\u201dthis is an amazing program\u201d\n<strong>Output:</strong> \u201cprogram amazing an is this\u201d\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> s=\u201dThis is decent\u201d\n<strong>Output:</strong> \u201cdecent is This\u201d</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p><strong>Solution:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph {\"textColor\":\"accent\"} -->\n<p class=\"has-accent-color has-text-color\"><strong><em>Disclaimer</em></strong>:&nbsp;<em>Don\u2019t jump directly to the solution, try it out yourself first.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4><strong>Solution 1(Brute Force)</strong></h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong>Intuition:</strong> We just need to print the words in reverse order. Can we somehow store them in reverse order of the occurrence and then simply add it to our answer?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>Approach</h4>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Use a stack to push all the words in a stack</li><li>Now, all the words of the string are present in the stack, but in reverse order</li><li>Pop elements of the stack one by one and add them to our answer variable. Remember to add a space between the words as well.&nbsp;</li><li>Here\u2019s a quick demonstration of the same</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><img width=\"624\" height=\"351\" src=\"https://lh3.googleusercontent.com/Oh3fkumb5OccmxbeegTpT-X1eEtN8DswQxCYL2VyRtfr0-JNr20Dqy7wMl77q7fwFU4hF0BJgmEFDw2ltt7y00VM5W6-mMMd9y-LX0dP2JSguVgX_0ttxJeVecd5PikiksiKsBIt\"></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main()\n{\n    string s=\"TUF is great for interview preparation\";\n    cout&lt;&lt;\"Before reversing words: \"&lt;&lt;endl;\n    cout&lt;&lt;s&lt;&lt;endl;\n    s+=\" \";\n    stack&lt;string&gt; st;\n    int i;\n    string str=\"\";\n    for(i=0;i&lt;s.length();i++)\n    {\n        if(s[i]==' ')\n        {\n            st.push(str);\n            str=\"\";\n        }\n        else str+=s[i];\n    }\n    string ans=\"\";\n    while(st.size()!=1)\n    {\n        ans+=st.top()+\" \";\n        st.pop();\n    }\n    ans+=st.top();// The last word should'nt have a space after it\n    cout&lt;&lt;\"After reversing words: \"&lt;&lt;endl;\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Before reversing words:<br>TUF is great for interview preparation<br>After reversing words:<br>preparation interview for great is TUF</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N), Traversing the entire string</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(N), Stack and ans variable</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.*;\nclass Test\n{\npublic static void main(String[] args)\n{\n\tString s = \"TUF is great for interview preparation\";\n\tSystem.out.println(\"After reversing words: \");\n\tSystem.out.println(s);\n\ts += \" \";\n\tStack&lt;String&gt; st = new Stack&lt;String&gt;();\n\tint i;\n\tString str = \"\";\n\tfor (i = 0;i &lt; s.length();i++)\n\t{\n\t\tif (s.charAt(i) == ' ')\n\t\t{\n\t\t\tst.push(str);\n\t\t\tstr = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += s.charAt(i);\n\t\t}\n\t}\n\tString ans = \"\";\n\twhile (st.size() != 1)\n\t{\n\t\tans += st.peek() + \" \";\n\t\tst.pop();\n\t}\n\tans += st.peek(); // The last word should'nt have a space after it\n\tSystem.out.println(\"After reversing words: \");\n\tSystem.out.print(ans);\n}\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Before reversing words:<br>TUF is great for interview preparation<br>After reversing words:<br>preparation interview for great is TUF</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N), Traversing the entire string</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(N), Stack and ans variable</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>Solution 2(Optimized Solution)</strong></h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong>Intuition: </strong>Notice, that we are using a stack in order to perform our task. Can we somehow not use it and reverse the words as we move through the string? Could we store a word in reverse order when we are adding it to our answer variable?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4><strong>Approach:</strong></h4>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>We start traversing the string from the end until we hit a space. It indicates that we have gone past a word and now we need to store it.</li><li>We check if our answer variable is empty or not</li><li>If it\u2019s empty, it indicates that this is the last word we need to print, and hence, there shouldn\u2019t be any space after this word.</li><li>If it\u2019s empty we add it to our result with a space after it. Here\u2019s a quick demonstration of the same</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><img width=\"624\" height=\"351\" src=\"https://lh6.googleusercontent.com/c4i-QE5hcEFsOVrcvimOKrhw804LElIG5YHsC1W70OHrJ5kmw8PHNhCDjwm-jMhkJAo82AGNjXXYbAElxE-fSlMEA1vik64PQA3rHf2v3hj0A1odk0_ZtvdhP-BjOMiWLdOZ-MFd\"></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nstring result(string s)\n{\n    int left = 0;\n    int right = s.length()-1;\n    \n    string temp=\"\";\n    string ans=\"\";\n    \n    //Iterate the string and keep on adding to form a word\n    //If empty space is encountered then add the current word to the result\n    while (left &lt;= right) {\n        char ch= s[left];\n        if (ch != ' ') {\n            temp += ch;\n        } else if (ch == ' ') {\n            if (ans!=\"\") ans = temp + \" \" + ans;\n            else ans = temp;\n            temp = \"\";\n        }\n        left++;\n    }\n    \n    //If not empty string then add to the result(Last word is added)\n    if (temp!=\"\") {\n        if (ans!=\"\") ans = temp + \" \" + ans;\n        else ans = temp;\n    }\n    \n    return ans;    \n}\nint main()\n{\n    string st=\"TUF is great for interview preparation\";\n    cout&lt;&lt;\"Before reversing words: \"&lt;&lt;endl;\n    cout&lt;&lt;st&lt;&lt;endl;\n    cout&lt;&lt;\"After reversing words: \"&lt;&lt;endl;\n    cout&lt;&lt;result(st);\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Before reversing words:<br>TUF is great for interview preparation<br>After reversing words:<br>preparation interview for great is TUF</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N), N~length of string</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1), Constant Space</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.io.*;\nclass Test\n{\nstatic private String result(String s)\n{\n\tint left = 0;\n\tint right = s.length() - 1;\n\n\tString temp = \"\";\n\tString ans = \"\";\n\n\t//Iterate the string and keep on adding to form a word\n\t//If empty space is encountered then add the current word to the result\n\twhile (left &lt;= right)\n\t{\n\t\tchar ch = s.charAt(left);\n\t\tif (ch != ' ')\n\t\t{\n\t\t\ttemp += ch;\n\t\t}\n\t\telse if (ch == ' ')\n\t\t{\n\t\t\tif (!ans.equals(\"\"))\n\t\t\t{\n\t\t\t\tans = temp + \" \" + ans;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans = temp;\n\t\t\t}\n\t\t\ttemp = \"\";\n\t\t}\n\t\tleft++;\n\t}\n\n\t//If not empty string then add to the result(Last word is added)\n\tif (!temp.equals(\"\"))\n\t{\n\t\tif (!ans.equals(\"\"))\n\t\t{\n\t\t\tans = temp + \" \" + ans;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans = temp;\n\t\t}\n\t}\n\n\treturn ans;\n}\npublic static void main(String[] args)\n{\n\tString st = \"TUF is great for interview preparation\";\n\tSystem.out.println(\"Before reversing words: \");\n    System.out.println(st);\n    System.out.println(\"After reversing words: \");\n\tSystem.out.print(result(st));\n}\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Before reversing words:<br>TUF is great for interview preparation<br>After reversing words:<br>preparation interview for great is TUF</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity: O(N), N~length of string</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1), Constant Space</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;<strong><a href=\"https://www.linkedin.com/in/naman-daga-04071/\" target=\"_blank\" rel=\"noreferrer noopener\">Naman Daga</a></strong>&nbsp;for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}