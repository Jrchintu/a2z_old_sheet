{
    "dislikes": 8,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:12:09 GMT+0530 (India Standard Time)",
    "slug": "switch-case-statements",
    "aid": "2263",
    "title": "Switch Case Statements",
    "tuf_plus": "",
    "topics": [
        {
            "topic-id": "basics",
            "topic-title": "Introduction to DSA"
        }
    ],
    "content": "<!-- wp:paragraph -->\n<p>In case you are learning DSA, you should definitely check out our free&nbsp;<a href=\"https://takeuforward.org/strivers-a2z-dsa-course/strivers-a2z-dsa-course-sheet-2/\">A2Z DSA Course</a>&nbsp;with videos and blogs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If-else statements are like the Swiss Army knife of decision-making. They offer flexibility and can handle a wide range of conditions and branching logic. You can use them when you need to <strong>evaluate complex conditions</strong> or when <strong>conditions aren't based on simple equality checks</strong>. If-else statements are often the preferred choice for scenarios where the <strong>conditions are not easily enumerable </strong>or where you need to execute different blocks of code based on various conditions.<br>On the other hand, <strong>switch statements shine when you have a single variable to compare against multiple distinct values</strong>. They are concise, making the code cleaner and more structured. So, if-else statements and switch statements can complement each other, with if-else statements handling complex conditions and switch statements simplifying cases with multiple exact matches.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>The \u2018Switch\u2019 Statement</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12586,\"width\":401,\"height\":463,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/switch-case.png\" alt=\"\" class=\"wp-image-12586\" width=\"401\" height=\"463\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>To illustrate the switch statement, let's consider a common problem: given a number between 1 and 7, print the corresponding day of the week. Here's how we can use the switch statement for this task:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int day = 4;\n\n    switch (day) {\n        case 1:\n            cout &lt;&lt; \"Monday\";\n            break;\n        case 2:\n            cout &lt;&lt; \"Tuesday\";\n            break;\n        case 3:\n            cout &lt;&lt; \"Wednesday\";\n            break;\n        case 4:\n            cout &lt;&lt; \"Thursday\";\n            break;\n        case 5:\n            cout &lt;&lt; \"Friday\";\n            break;\n        case 6:\n            cout &lt;&lt; \"Saturday\";\n            break;\n        case 7:\n            cout &lt;&lt; \"Sunday\";\n            break;\n        default:\n            cout &lt;&lt; \"Invalid\";\n    }\n\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output: </strong>Thursday</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        int day;\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter a number (1-7): \");\n        day = scanner.nextInt();\n\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            case 3:\n                System.out.println(\"Wednesday\");\n                break;\n            case 4:\n                System.out.println(\"Thursday\");\n                break;\n            case 5:\n                System.out.println(\"Friday\");\n                break;\n            case 6:\n                System.out.println(\"Saturday\");\n                break;\n            case 7:\n                System.out.println(\"Sunday\");\n                break;\n            default:\n                System.out.println(\"Invalid\");\n        }\n\n        scanner.close();\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> Thursday</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In this example, if you set the <strong>day</strong> variable to 4, it will print \"<strong>Thursday</strong>\" since it matches the case 4 statement. The<strong> break statement is crucial</strong>; it ensures that the switch statement exits after the matching case is executed, preventing the execution of subsequent cases.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>The Default Case: </strong>The default case serves as a <strong>safety net</strong>. If <strong>none of the cases match </strong>the expression, the code inside the<strong> default block will execute</strong>. In our example, if you input a number outside the range of 1 to 7, it will print \"Invalid.\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Key Considerations for Switch Case Statements:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Requirement for a Constant Expression<br></strong>A switch statement necessitates that its expression results in a constant value. This can include constants and arithmetic operations.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    const int x = 10;\n    const int y = 5;\n\n    switch (x + y) {\n        case 15:\n            cout &lt;&lt; \"Result is 15.\" &lt;&lt; endl;\n            break;\n        case 20:\n            cout &lt;&lt; \"Result is 20.\" &lt;&lt; endl;\n            break;\n        default:\n            cout &lt;&lt; \"No match found.\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> Result is 15.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n    public static void main(String[] args) {\n        final int x = 10;\n        final int y = 5;\n\n        switch (x + y) {\n            case 15:\n                System.out.println(\"Result is 15.\");\n                break;\n            case 20:\n                System.out.println(\"Result is 20.\");\n                break;\n            default:\n                System.out.println(\"No match found.\");\n        }\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> Result is 15. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Limited to Integer or Character Types</strong><br>Switch statements are exclusively designed to handle integer or character values. Ensure that the expression provides values of type int or char.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    char grade = 'B';\n\n    switch (grade) {\n        case 'A':\n            cout &lt;&lt; \"Excellent!\" &lt;&lt; endl;\n            break;\n        case 'B':\n            cout &lt;&lt; \"Good!\" &lt;&lt; endl;\n            break;\n        default:\n            cout &lt;&lt; \"Not specified.\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> Good!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n    public static void main(String[] args) {\n        char grade = 'B';\n\n        switch (grade) {\n            case 'A':\n                System.out.println(\"Excellent!\");\n                break;\n            case 'B':\n                System.out.println(\"Good!\");\n                break;\n            default:\n                System.out.println(\"Not specified.\");\n        }\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p> <strong>Output:</strong> Good! </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Significance of the 'Break' Keyword<br></strong>The 'break' keyword holds significant importance within switch cases. It serves as an exit mechanism from the switch statement. Its omission implies the execution of all subsequent cases.<br></li><li><strong>Optional Default Case<br></strong>Optionally, you can include a 'default' case, which executes when none of the case values match. It's not obligatory and can be excluded if not needed.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:list {\"ordered\":true,\"start\":3} -->\n<ol start=\"3\"><li><strong>Prohibition of Duplicate Case Values</strong><strong><br></strong>Within a switch statement in C++, duplicates of case values are disallowed. Each case value must be distinct.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int day = 2;\n\n    switch (day) {\n        case 1:\n            cout &lt;&lt; \"Monday.\" &lt;&lt; endl;\n            break;\n        case 2:\n            cout &lt;&lt; \"Tuesday.\" &lt;&lt; endl;\n            break;\n        case 2:  // Duplicate case, not allowed\n            cout &lt;&lt; \"Duplicate case.\" &lt;&lt; endl;\n            break;\n        default:\n            cout &lt;&lt; \"Invalid day.\" &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n    public static void main(String[] args) {\n        int day = 2;\n\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday.\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday.\");\n                break;\n            case 2:  // This line will result in a compilation error in Java\n                System.out.println(\"Duplicate case.\");\n                break;\n            default:\n                System.out.println(\"Invalid day.\");\n        }\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Potential for Nested Switch Statements<br></strong>While it's possible to nest one switch statement inside another in C++, this practice is generally discouraged due to its potential to introduce complexity and hinder code readability.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int x = 2;\n    int y = 3;\n\n    switch (x) {\n        case 1:\n            cout &lt;&lt; \"x is 1.\" &lt;&lt; endl;\n            switch (y) {\n                case 1:\n                    cout &lt;&lt; \"y is 1.\" &lt;&lt; endl;\n                    break;\n                default:\n                    cout &lt;&lt; \"y is not 1.\" &lt;&lt; endl;\n            }\n            break;\n        default:\n            cout &lt;&lt; \"x is not 1.\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"\">public class Main {\n    public static void main(String[] args) {\n        int x = 2;\n        int y = 3;\n\n        switch (x) {\n            case 1:\n                System.out.println(\"x is 1.\");\n                switch (y) {\n                    case 1:\n                        System.out.println(\"y is 1.\");\n                        break;\n                    default:\n                        System.out.println(\"y is not 1.\");\n                }\n                break;\n            default:\n                System.out.println(\"x is not 1.\");\n        }\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em><em>Special thanks to\u00a0</em><strong><a href=\"https://www.linkedin.com/in/gauri-tomar-005048268\" target=\"_blank\" rel=\"noreferrer noopener\">Gauri Tomar</a></strong><em>\u00a0for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:embed {\"url\":\"https://youtu.be/EAR7De6Goz4?si=Kv_oEtv8dPNQpunH\\u0026t=2111\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"responsive\":true,\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} -->\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\nhttps://youtu.be/EAR7De6Goz4?si=Kv_oEtv8dPNQpunH&amp;t=2111\n</div></figure>\n<!-- /wp:embed -->",
    "category_tag": "switch-case",
    "likes": 446,
    "preview": "In case you are learning DSA, you should definitely check out our free A2Z DSA Course with videos and blogs. If-else statements are like the Swiss Army knife of decision-making. They offer flexibil..."
}