{
    "dislikes": 5,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:12:09 GMT+0530 (India Standard Time)",
    "slug": "if-else-statements",
    "aid": "2262",
    "title": "If-Else Statements",
    "tuf_plus": "",
    "topics": [
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        }
    ],
    "content": "<!-- wp:paragraph -->\n<p>In case you are learning DSA, you should definitely check out our free&nbsp;<a href=\"https://takeuforward.org/strivers-a2z-dsa-course/strivers-a2z-dsa-course-sheet-2/\">A2Z DSA Course</a>&nbsp;with videos and blogs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Conditional statements are a fundamental concept in programming that allows you to make decisions based on certain conditions. These statements enable your code to <strong>execute different blocks of cod</strong>e depending on whether <strong>specific conditions</strong> are met or not. In this blog post, we'll delve into the basics of <strong>conditional statements</strong>, starting with the ubiquitous<strong> if-else</strong> statement and gradually exploring more complex scenarios.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>The `if-else` Statement</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12581,\"width\":446,\"height\":247,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/if-else.png\" alt=\"\" class=\"wp-image-12581\" width=\"446\" height=\"247\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>'if statement'</strong> is used to execute a block of code only if a certain condition is met. It allows us to conditionally execute code based on whether the specified condition is true.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>'else statement'</strong>, on the other hand, is an optional companion to the if statement. It specifies what code to execute if the condition in the if statement is not met (i.e. if it is false).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Let's break down the flow of control:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>If the test condition in the if statement is true, a block of code inside the if block will be executed.</li><li>If the test condition is false, the code inside the else block (if present) will be executed.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main() {\nint age=10;\n\n\nif (age &gt;= 18) {\n    cout &lt;&lt; \"You are an adult.\" &lt;&lt; endl;\n} else {\n    cout &lt;&lt; \"You are not an adult.\" &lt;&lt; endl;\n}\n\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> You are not an adult.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        int age=10;\n       \n\n        if (age &gt;= 18) {\n            System.out.println(\"You are an adult.\");\n        } else {\n            System.out.println(\"You are not an adult.\");\n        }\n\n        scanner.close();\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p> <strong>Output:</strong> You are not an adult. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12582,\"width\":507,\"height\":272,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/if-else-age.png\" alt=\"\" class=\"wp-image-12582\" width=\"507\" height=\"272\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>In this example, we take the <strong>user's age as input</strong> and use an <strong>if statement</strong> to check if the age is greater than or equal to 18. If the condition is true, it prints \"You are an adult,\" and if it's false ie. the <strong>'else'</strong> condition is satisfied, it prints \"You are not an adult.\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Simplifying Code with \"else if\"</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As your code becomes more complex, you'll often encounter scenarios where you need to check multiple conditions. Instead of writing multiple independent if statements, you can streamline your code using else if statements.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Let's say we want to grade students based on their marks within specific ranges:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int marks = 54;\n\n\n    if (marks &lt; 25) {\n        cout &lt;&lt; \"Grade: F\" &lt;&lt; endl;\n    } else if (marks &gt;= 25 &amp;&amp; marks &lt;= 44) {\n        cout &lt;&lt; \"Grade: E\" &lt;&lt; endl;\n    } else if (marks &gt;= 45 &amp;&amp; marks &lt;= 49) {\n        cout &lt;&lt; \"Grade: D\" &lt;&lt; endl;\n    } else if (marks &gt;= 50 &amp;&amp; marks &lt;= 59) {\n        cout &lt;&lt; \"Grade: C\" &lt;&lt; endl;\n    } else if (marks &gt;= 60 &amp;&amp; marks &lt;= 69) {\n        cout &lt;&lt; \"Grade: B\" &lt;&lt; endl;\n    } else if (marks &gt;= 70) {\n        cout &lt;&lt; \"Grade: A\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Invalid marks entered.\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> Grade: C</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        int marks = 54;\n\n\n        if (marks &lt; 25) {\n            System.out.println(\"Grade: F\");\n        } else if (marks &gt;= 25 &amp;&amp; marks &lt;= 44) {\n            System.out.println(\"Grade: E\");\n        } else if (marks &gt;= 45 &amp;&amp; marks &lt;= 49) {\n            System.out.println(\"Grade: D\");\n        } else if (marks &gt;= 50 &amp;&amp; marks &lt;= 59) {\n            System.out.println(\"Grade: C\");\n        } else if (marks &gt;= 60 &amp;&amp; marks &lt;= 69) {\n            System.out.println(\"Grade: B\");\n        } else if (marks &gt;= 70) {\n            System.out.println(\"Grade: A\");\n        } else {\n            System.out.println(\"Invalid marks entered.\");\n        }\n        scanner.close();\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p> <strong>Output:</strong> Grade: C </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12583,\"width\":768,\"height\":638,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/if-else-long-1024x850.png\" alt=\"\" class=\"wp-image-12583\" width=\"768\" height=\"638\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>If marks are less than 25, it prints \"Grade: F.\"</li><li>If marks are between 25 and 44 (inclusive), it prints \"Grade: E.\"</li><li>If marks are between 45 and 49 (inclusive), it prints \"Grade: D.\"</li><li>If marks are between 50 and 59 (inclusive), it prints \"Grade: C.\"</li><li>If marks are between 60 and 69 (inclusive), it prints \"Grade: B.\"</li><li>If marks are 70 or higher, it prints \"Grade: A.\"</li><li>If marks are outside the valid range, it prints \"Invalid marks entered.\"</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>The provided code for grading based on marks is functional, but it <strong>can be simplified</strong> for better readability and maintainability. In the current code, there are <strong>several redundant comparisons</strong> of marks with specific values. For example, when checking for grades E, C, B, and A, you have to <strong>repeatedly check</strong> marks &gt;= X &amp;&amp; marks &lt;= Y, which can be error-prone and hard to maintain as the grade ranges change.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We can refactor the code, we can <strong>remove the lower bounds</strong> and check only the <strong>upper bounds</strong> for each grade as the code flow is such that we move along the conditions only after satisfying the previous one.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\n\nint main() {\n    int marks = 54;\n    char grade;\n\n    if (marks &lt; 25) {\n        grade = 'F';\n    } else if (marks &lt;= 44) {\n        grade = 'E';\n    } else if (marks &lt;= 49) {\n        grade = 'D';\n    } else if (marks &lt;= 59) {\n        grade = 'C';\n    } else if (marks &lt;= 69) {\n        grade = 'B';\n    } else if (marks &gt;= 70) {\n        grade = 'A';\n    } else {\n        grade = 'X'; // Use 'X' to indicate invalid marks\n    }\n\n    std::cout &lt;&lt; \"Grade: \" &lt;&lt; grade &lt;&lt; std::endl;\n    \n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> Grade: C</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        int marks=54;\n\n\n        char grade;\n\n        if (marks &lt; 25) {\n            grade = 'F';\n        } else if (marks &lt;= 44) {\n            grade = 'E';\n        } else if (marks &lt;= 49) {\n            grade = 'D';\n        } else if (marks &lt;= 59) {\n            grade = 'C';\n        } else if (marks &lt;= 69) {\n            grade = 'B';\n        } else if (marks &gt;= 70) {\n            grade = 'A';\n        } else {\n            grade = 'X'; // Use 'X' to indicate invalid marks\n        }\n\n        System.out.println(\"Grade: \" + grade);\n        scanner.close();\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> Grade: C</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Conditional statements are indispensable tools for <strong>controlling the flow of your program</strong>. Whether you're making simple decisions or handling complex logic, if-else statements and their variants empower you to write code that <strong>responds dynamically to changing conditions</strong>. Mastering these fundamentals is essential for any aspiring programmer.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em><em>Special thanks to\u00a0</em><strong><a href=\"https://www.linkedin.com/in/gauri-tomar-005048268\" target=\"_blank\" rel=\"noreferrer noopener\">Gauri Tomar</a></strong><em>\u00a0for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:embed {\"url\":\"https://youtu.be/EAR7De6Goz4?si=a8HuOu6bvHuZMAW_\\u0026t=1258\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"responsive\":true,\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} -->\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\nhttps://youtu.be/EAR7De6Goz4?si=a8HuOu6bvHuZMAW_&amp;t=1258\n</div></figure>\n<!-- /wp:embed -->",
    "category_tag": "if-else",
    "likes": 576,
    "preview": "In case you are learning DSA, you should definitely check out our free A2Z DSA Course with videos and blogs. Conditional statements are a fundamental concept in programming that allows you to make..."
}