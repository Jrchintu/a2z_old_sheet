{
    "dislikes": 7,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:09:32 GMT+0530 (India Standard Time)",
    "slug": "check-if-a-number-is-armstrong-number-or-not",
    "aid": "1518",
    "tuf_plus": "https://takeuforward.org/plus/dsa/problems/check-if-the-number-if-armstrong",
    "title": "Check if a number is Armstrong Number or not",
    "topics": [
        {
            "topic-id": "maths",
            "topic-title": "Maths"
        }
    ],
    "likes": 308,
    "category_tag": "maths",
    "preview": "Problem Statement: Given an integer N, return true it is an Armstrong number otherwise return false. An Amrstrong number is a number that is equal to the sum of its own digits each raised to the po...",
    "content": "<p><strong>Problem Statement: </strong>Given an integer N, return true it is an Armstrong number otherwise return false.</p>\n<p>\nAn Amrstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits.\n</p>\n<div id=\"article_examples\">\n    <details class=\"article_example_details\">\n        <summary class=\"article_example_summary\">\n            <span><strong>\n                    Examples\n                </strong>\n            </span>\n            <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n            </svg>\n        </summary>\n        <div class=\"atricle_example_content\">\n            <pre class=\"wp-block-preformatted\">\n                <span><strong>Example 1:</strong></span>\n                <span><strong>Input:</strong>N = 153</span>\n               \n                <span><strong>Output:</strong>True</span>\n                \n                <span><strong>Explanation: </strong>1<sup>3</sup>+5<sup>3</sup>+3<sup>3</sup> = 1 + 125 + 27 = 153</span>\n                                        \n                <span><strong>Example 2:</strong></span>\n                <span><strong>Input:</strong>N = 371</span>                \n                \n                <span><strong>Output: </strong>True</span>\n                \n                <span><strong>Explanation: </strong>3<sup>3</sup>+5<sup>3</sup>+1<sup>3</sup> = 27 + 343 + 1 = 371</span>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n            </pre>\n        </div>\n    </details>\n</div>\n\n<!-- This is Practice Section-->\n<div class=\"practice\">\n    <span><strong>Practice: </strong></span>\n    <div class=\"problem-buttons\">\n\n        \n        <a href=\"https://www.codingninjas.com/studio/problems/check-armstrong_589?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf\" target=\"_blank\" rel=\"noopener\">\n            <span>Solve Problem</span>\n            <img src=\"https://takeuforward-content-images.s3.ap-south-1.amazonaws.com/content/Group-11-5-pFOq-8ga\"\n                alt=\"code-studio\">\n        </a>\n    </div>\n    \n</div>\n\n<p class=\"new-disclaimer\"><strong><em>Disclaimer</em></strong>: <em>Don\u2019t jump directly to the solution, try it out\n        yourself first. </em></p>\n\n\n<div id=\"brute-force-approach\">\n    <details>\n        <summary class=\"main-summary\">\n            <span>\n                Optimal Approach \n            </span>\n            <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                </path>\n            </svg>\n        </summary>\n        <div class=\"common-drops\">\n            <details class=\"secondary-details\" open=\"\">\n                <summary class=\"secondary-summary\">\n                    <span>\n                        Algorithm / Intuition\n                    </span>\n                    <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path\n                            d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                        </path>\n                    </svg>\n                </summary>\n                <div class=\"approach-algorithm\">\n                    <!-- Insert Algorithm / Intuition of Brute Force Apporach Here -->\n                    \n                    <p>To check if a number is an armstrong number, we can use the algorithm created in <a href=\"https://takeuforward.org/maths/extract-digits-from-a-given-number\">Extract Digits</a>.</p>\n                    <p> An Armstrong number, also known as a narcissistic number or plenary number, is a number that is equal to the sum of its own digits each raised to the power of the number of digits.</p>\n                    <p>Number of digits: 3, 153 = 1<sup>3</sup>+5<sup>3</sup>+3<sup>3</sup></p>\n                    <p>We extract the digits of the number, raise each digit to the power of the total number of digits in the number. Sum up all the results obtained and check if the sum equals to the original number.</p>\n                                    \n\n                    <h4>Algorithm </h4>\n                    <p><strong>Step 1:</strong>Calculate the number of digits in the input number and store it in k. Read more about this Approach here: <a href=\"https://takeuforward.org/data-structure/count-digits-in-a-number/\">Count Digits</a></p>\n                   \t \n                    <p><strong>Step 2: </strong> Initialise a variable sum to 0. This variable will store the sum of each digit raised to the power of number of digits in number.\n                   \t<ol><li>Make a copy of the original number to store it in a temporary variable.</li></ol></p> \n                   \t\n                    <p><strong>Step 3: </strong>\n                   \tRun a while loop with the condition n>0 and at each iteration:\n                   \t<ol><li>Get the last digit of n by using the modulus operator % with 10 and store it in a temporary variable ld.</li><li>Add the digit ld raised to the power of k of the sum.</li><li>Update n by integer division with 10 effectively removing the last digit.</li></ol></p>\n\n                   \t<p><strong>Step 4: </strong> After the loop, check if the original input number is equal to the sum of the digits raised to the power of the number of digits in the number.\n                   \t<ol><li>If they are equal, return true indicating the number is an Armstrong number.</li><li>If they are not equal, return false indicating that the number is not an Armstrong number.</li></ol></p>\n                   \t                       \n                </div>\n            </details>\n            <details class=\"code-section secondary-details\">\n                <summary class=\"secondary-summary\">\n                    <span>\n                        Code\n                    </span>\n                    <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path\n                            d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                        </path>\n                    </svg>\n                </summary>\n                <div class=\"code-tabs\">\n                    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n                    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n                    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n                    <button class=\"code-tab\" data-lang=\"javascript\">JavaScript</button>\n                    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n                        </path>\n                    </svg>\n                </div>\n                <div class=\"code-content\">\n                    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n                        <pre class=\"wp-block-code\">\n                            <code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;bits/stdc++.h&gt; \nusing namespace std;\n\n// Function to check if a\n// number is an Armstrong number\nbool isArmstrong(int num) {\n    // Calculate the number of\n    // digits in the given number\n    int k = to_string(num).length();\n    // Initialize the sum of digits\n    // raised to the power of k to 0\n    int sum = 0;\n    // Copy the value of the input\n    // number to a temporary variable n\n    int n = num;\n    // Iterate through each\n    // digit of the number\n    while(n &gt; 0){\n        // Extract the last\n        // digit of the number\n        int ld = n % 10;\n        // Add the digit raised to\n        // the power of k to the sum\n        sum += pow(ld, k); \n        // Remove the last digit\n        // from the number\n        n = n / 10;\n    }\n    // Check if the sum of digits raised to\n    // the power of k equals the original number\n    return sum == num ? true : false;\n}\n\nint main() {\n    int number = 153;\n    if (isArmstrong(number)) {\n        cout &lt;&lt; number &lt;&lt; &quot; is an Armstrong number.&quot; &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; number &lt;&lt; &quot; is not an Armstrong number.&quot; &lt;&lt; endl;\n    }\n    return 0;\n}\n                            </code>\n                        </pre>\n                    </div>\n                    <div class=\"code-block \" data-lang=\"java\">\n                        <pre class=\"wp-block-code\">\n                            <code lang=\"java\" class=\"language-java\">\nimport java.lang.Math;\n\npublic class ArmstrongNumber {\n    // Function to check if a\n    // number is an Armstrong number\n    public static boolean isArmstrong(int num) {\n        // Calculate the number of\n        // digits in the given number\n        int k = String.valueOf(num).length();\n        // Initialize the sum of digits\n        // raised to the power of k to 0\n        int sum = 0;\n        // Copy the value of the input\n        // number to a temporary variable n\n        int n = num;\n        // Iterate through each\n        // digit of the number\n        while(n &gt; 0){\n            // Extract the last\n            // digit of the number\n            int ld = n % 10;\n            // Add the digit raised to\n            // the power of k to the sum\n            sum += Math.pow(ld, k); \n            // Remove the last digit\n            // from the number\n            n = n / 10;\n        }\n        // Check if the sum of digits raised to\n        // the power of k equals the original number\n        return sum == num ? true : false;\n    }\n\n    public static void main(String[] args) {\n        int number = 153;\n        if (isArmstrong(number)) {\n            System.out.println(number + &quot; is an Armstrong number.&quot;);\n        } else {\n            System.out.println(number + &quot; is not an Armstrong number.&quot;);\n        }\n    }\n}\n                            </code>\n                        </pre>\n                    </div>\n                    <div class=\"code-block\" data-lang=\"python\">\n                        <pre class=\"wp-block-code\">\n                            <code lang=\"python\" class=\"language-python\">\n# Function to check if a\n# number is an Armstrong number\ndef isArmstrong(num):\n    # Calculate the number of\n    # digits in the given number\n    k = len(str(num))\n    # Initialize the sum of digits\n    # raised to the power of k to 0\n    sum = 0\n    # Copy the value of the input\n    # number to a temporary variable n\n    n = num\n    # Iterate through each\n    # digit of the number\n    while n &gt; 0:\n        # Extract the last\n        # digit of the number\n        ld = n % 10\n        # Add the digit raised to\n        # the power of k to the sum\n        sum += ld ** k\n        # Remove the last digit\n        # from the number\n        n = n // 10\n    # Check if the sum of digits raised to\n    # the power of k equals the original number\n    return sum == num\n\ndef main():\n    number = 153\n    if isArmstrong(number):\n        print(number, &quot;is an Armstrong number.&quot;)\n    else:\n        print(number, &quot;is not an Armstrong number.&quot;)\n\nif __name__ == &quot;__main__&quot;:\n    main()\n                           </code>\n                        </pre>\n                    </div>\n                    <div class=\"code-block\" data-lang=\"javascript\">\n                        <pre class=\"wp-block-code\">\n                            <code lang=\"javascript\" class=\"language-javascript\">\n// Function to check if a\n// number is an Armstrong number\nfunction isArmstrong(num) {\n    // Calculate the number of\n    // digits in the given number\n    const k = String(num).length;\n    // Initialize the sum of digits\n    // raised to the power of k to 0\n    let sum = 0;\n    // Copy the value of the input\n    // number to a temporary variable n\n    let n = num;\n    // Iterate through each\n    // digit of the number\n    while (n &gt; 0) {\n        // Extract the last\n        // digit of the number\n        const ld = n % 10;\n        // Add the digit raised to\n        // the power of k to the sum\n        sum += Math.pow(ld, k); \n        // Remove the last digit\n        // from the number\n        n = Math.floor(n / 10);\n    }\n    // Check if the sum of digits raised to\n    // the power of k equals the original number\n    return sum === num ? true : false;\n}\n\n// Main function to test isArmstrong function\nfunction main() {\n    const number = 153;\n    if (isArmstrong(number)) {\n        console.log(number + &quot; is an Armstrong number.&quot;);\n    } else {\n        console.log(number + &quot; is not an Armstrong number.&quot;);\n    }\n}\n\n// Call the main function\nmain();\n                            </code>\n                        </pre>\n                    </div>\n                    <p>\n                       <strong>Output</strong>153 is an Armstrong number.</p>                    \n                </div>\n            </details>\n            <details class=\"secondary-details\">\n                <summary class=\"secondary-summary\">\n                    <span>\n                        Complexity Analysis\n                    </span>\n                    <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path\n                            d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\">\n                        </path>\n                    </svg>\n                </summary>\n                <p>\n                    <!-- Insert Time and Space Complexity  Here -->\n                    <p><strong>Time Complexity: O(log<sub>10</sub>N + 1)</strong>\n                    where N is the input number. The time complexity is determined by the number of digits in the input integer N. In the worst case when N is a multiple of 10 the number of digits in N is log<sub>10</sub> N + 1. \n                    <ol><li>In the while loop we divide N by 10 until it becomes 0 which takes log10N iterations.</li><li>In each iteration of the while loop we perform constant time operations like modulus and division and pushing elements into the vector.</li></ol></p>\n\n\t\t\t\t\t<p><strong>Space Complexity: O(1)</strong>   \n\t\t\t\t\tas only a constant amount of additional memory for the reversed number regardless of size of the input number.</p>\n\n                </p>\n            </details>\n        </div>\n    </details>\n</div>\n\n\n<!-- This is Video Explination Drop-Down -->\n<div class=\"dsa_article_youtube_video\" id=\"dsa_article_video_explanation\">\n    <details>\n        <summary class=\"main-summary\">\n            <span>\n                Video Explanation\n            </span>\n            <svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n            </svg>\n        </summary>\n        <div class=\"yt-video-wrapper\">\n            <!-- Insert iframe embed Link of Youtube Video-->\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1xNbjMdbjug?si=DbLwgdlyBuMwY0jH\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n        </div>\n    </details>\n</div>\n\n<blockquote class=\"wp-block-quote\">\n    Special thanks to <strong><a href=\"https://www.linkedin.com/in/gauri-tomar-005048268\">Gauri Tomar</a></strong> for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,<strong><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\"> please check out this article</a></strong>\n</blockquote>\n\n<script>\n\n    const codeSections = document.querySelectorAll('.code-section');\n\n    // Get last selected language from localStorage or set default value\n    let lastSelectedLanguage = localStorage.getItem('lastSelectedLanguage') || 'cpp';\n\n    codeSections.forEach((section, sectionIndex) => {\n        const codeTabs = section.querySelectorAll('.code-tab');\n        const codeBlocks = section.querySelectorAll('.code-block');\n        const copyBtn = section.querySelector('.copy-btn');\n\n        codeTabs.forEach((tab) => {\n            tab.addEventListener('click', () => {\n                codeTabs.forEach((t) => {\n                    t.classList.remove('dsa_article_code_active');\n                });\n                tab.classList.add('dsa_article_code_active');\n\n                const lang = tab.dataset.lang;\n                const activeBlock = section.querySelector(`.code-block[data-lang=\"${lang}\"]`);\n                codeBlocks.forEach((block) => {\n                    if (block === activeBlock) {\n                        block.classList.add('dsa_article_code_active');\n                    } else {\n                        block.classList.remove('dsa_article_code_active');\n                    }\n                });\n\n                // Update last selected language for all sections and store in localStorage\n                lastSelectedLanguage = lang;\n                localStorage.setItem('lastSelectedLanguage', lang);\n                codeSections.forEach((otherSection, otherIndex) => {\n                    if (otherIndex !== sectionIndex) {\n                        const otherTabs = otherSection.querySelectorAll('.code-tab');\n                        otherTabs.forEach((otherTab) => {\n                            if (otherTab.dataset.lang === lang) {\n                                otherTab.classList.add('dsa_article_code_active');\n                            } else {\n                                otherTab.classList.remove('dsa_article_code_active');\n                            }\n                        });\n                        const otherActiveBlock = otherSection.querySelector(`.code-block[data-lang=\"${lang}\"]`);\n                        const otherCodeBlocks = otherSection.querySelectorAll('.code-block');\n                        otherCodeBlocks.forEach((block) => {\n                            if (block === otherActiveBlock) {\n                                block.classList.add('dsa_article_code_active');\n                            } else {\n                                block.classList.remove('dsa_article_code_active');\n                            }\n                        });\n                    }\n                });\n            });\n        });\n\n        // Handle copy button click event\n        copyBtn.addEventListener('click', () => {\n            const activeBlock = section.querySelector('.code-block.dsa_article_code_active code');\n            navigator.clipboard.writeText(activeBlock.innerText);\n            copyBtn.classList.add('dsa_article_code_active');\n            setTimeout(() => {\n                copyBtn.classList.remove('dsa_article_code_active');\n            }, 1000);\n        });\n    });\n\n    // Set initial state of the tabs\n    codeSections.forEach((section) => {\n        const codeTabs = section.querySelectorAll('.code-tab');\n        const codeBlocks = section.querySelectorAll('.code-block');\n\n        codeTabs.forEach((tab) => {\n            if (tab.dataset.lang === lastSelectedLanguage) {\n                tab.classList.add('dsa_article_code_active');\n            } else {\n                tab.classList.remove('dsa_article_code_active');\n            }\n        });\n\n        codeBlocks.forEach((block) => {\n            if (block.dataset.lang === lastSelectedLanguage) {\n                block.classList.add('dsa_article_code_active');\n            } else {\n                block.classList.remove('dsa_article_code_active');\n            }\n        });\n    });\n</script>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n<script src=\"index.js\"></script>\n<script>hljs.highlightAll();</script>"
}