{
    "dislikes": 8,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:12:13 GMT+0530 (India Standard Time)",
    "slug": "insert-at-the-head-of-a-linked-list",
    "aid": "2284",
    "tuf_plus": "",
    "title": "Insert at the head of a Linked List",
    "topics": [
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "linked-list",
            "topic-title": "Linked List"
        }
    ],
    "category_tag": "linked-list",
    "likes": 203,
    "preview": "Problem Statement: Given a linked list and an integer value val, insert a new node with that value at the beginning (before the head) of the list and return the updated linked list. Examples Exampl...",
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement</strong>: \u00a0Given a linked list and an integer value <strong>val</strong>, insert a new node with that value at the beginning (before the head) of the list and return the updated linked list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\"><!-- Insert New Examples Here -->\n<p><strong>Example 1:</strong></p>\n<p><strong>Input Format:</strong> 0-&gt;1-&gt;2, val = 5</p>\n<p><strong>Result</strong>: 5-&gt;0-&gt;1-&gt;2</p>\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/10/InsertHead1.jpg\" alt=\"\" class=\"wp-image-12907\"></figure>\n<p><strong>Explanation</strong>: We need to insert the value 5 before the head of the given Linked List.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input Format:</strong>12-&gt;5-&gt;8-&gt;7, val = 100</p>\n<p><strong>Result</strong>: 100-&gt;12-&gt;5-&gt;8-&gt;7</p>\n<p><strong>Explanation</strong>: Again, we need to insert the value 100 before the head of the Linked List.</p>\n</pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Solution</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph {\"textColor\":\"accent\"} -->\n<p class=\"has-accent-color has-text-color\"><strong><em>Disclaimer</em></strong>: <em>Don't jump directly to the solution, try it out yourself first.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Approach</strong>: </h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>To insert a new node with a value before the head of the list, create a <strong>new node</strong> with the given value <strong>val</strong> pointing to the head. This node will be the new head of the linked list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Algorithm:</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>Create a new node with data as the given value and pointing to the head. This node will be our new head of the linked list.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":12908,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/10/InsertHead2.jpg\" alt=\"\" class=\"wp-image-12908\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>Now, return the new node as the head of the updated Linked List.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":12909,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/10/InsertHead3.jpg\" alt=\"\" class=\"wp-image-12909\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">class Node {\npublic:\n    int data;\n    Node* next;\n\n    // Constructor with both data and next node\n    Node(int data1, Node* next1) {\n        data = data1;\n        next = next1;\n    }\n\n    // Constructor with only data (assuming next is initially null)\n    Node(int data1) {\n        data = data1;\n        next = nullptr;\n    }\n};\n\n// Function to print the linked list\nvoid printLL(Node* head) {\n    while (head != NULL) {\n        cout &lt;&lt; head->data &lt;&lt; \" \";\n        head = head->next;\n    }\n}\n\n// Function to insert a new node at the head of the linked list\nNode* insertHead(Node* head, int val) {\n    Node* temp = new Node(val, head);\n    return temp;\n}\n\nint main() {\n    // Sample array and value for insertion\n    vector&lt;int> arr = {12, 8, 5, 7};\n    int val = 100;\n\n    // Creating a linked list with initial elements from the array\n    Node* head = new Node(arr[0]);\n    head->next = new Node(arr[1]);\n    head->next->next = new Node(arr[2]);\n    head->next->next->next = new Node(arr[3]);\n\n    // Inserting a new node at the head of the linked list\n    head = insertHead(head, val);\n\n    // Printing the linked list\n    printLL(head);\n\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>100 12 8 5 7</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity</strong>: <strong>O(1) </strong>for inserting the new head of the linked list and <strong>O(N)</strong> for printing the linked list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity</strong>: <strong>O(1)</strong>, as we have not used any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">// Node class to represent a linked list node\nclass Node {\n    public int data;\n    public Node next;\n\n    // Constructor with both data and next node\n    public Node(int data1, Node next1) {\n        data = data1;\n        next = next1;\n    }\n\n    // Constructor with only data (assuming next is initially null)\n    public Node(int data1) {\n        data = data1;\n        next = null;\n    }\n}\n\npublic class Main {\n    // Function to print the linked list\n    public static void printLL(Node head) {\n        while (head != null) {\n            System.out.print(head.data + \" \");\n            head = head.next;\n        }\n    }\n\n    // Function to insert a new node at the head of the linked list\n    public static Node insertHead(Node head, int val) {\n        Node temp = new Node(val, head);\n        return temp;\n    }\n\n    public static void main(String[] args) {\n        // Sample array and value for insertion\n        List&lt;Integer> arr = Arrays.asList(12, 8, 5, 7);\n        int val = 100;\n\n        // Creating a linked list with initial elements from the array\n        Node head = new Node(arr.get(0));\n        head.next = new Node(arr.get(1));\n        head.next.next = new Node(arr.get(2));\n        head.next.next.next = new Node(arr.get(3));\n\n        // Inserting a new node at the head of the linked list\n        head = insertHead(head, val);\n\n        // Printing the linked list\n        printLL(head);\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>100 12 8 5 7</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity</strong>: <strong>O(1) </strong>for inserting the new head of the linked list and <strong>O(N)</strong> for printing the linked list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity</strong>: <strong>O(1)</strong>, as we have not used any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\"># Node class to represent a linked list node\nclass Node:\n    def __init__(self, data1, next1=None):\n        self.data = data1\n        self.next = next1\n\n# Function to print the linked list\ndef printLL(head):\n    while head is not None:\n        print(head.data, end=\" \")\n        head = head.next\n\n# Function to insert a new node at the head of the linked list\ndef insertHead(head, val):\n    temp = Node(val, head)\n    return temp\n\nif __name__ == \"__main__\":\n    # Sample array and value for insertion\n    arr = [12, 8, 5, 7]\n    val = 100\n\n    # Creating a linked list with initial elements from the array\n    head = Node(arr[0])\n    head.next = Node(arr[1])\n    head.next.next = Node(arr[2])\n    head.next.next.next = Node(arr[3])\n\n    # Inserting a new node at the head of the linked list\n    head = insertHead(head, val)\n\n    # Printing the linked list\n    printLL(head)\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>100 12 8 5 7</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity</strong>: <strong>O(1) </strong>for inserting the new head of the linked list and <strong>O(N)</strong> for printing the linked list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity</strong>: <strong>O(1)</strong>, as we have not used any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>[tabby title=\"JavaScript Code\"]</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">// Node class to represent a linked list node\nclass Node {\n    constructor(data1, next1 = null) {\n        this.data = data1;\n        this.next = next1;\n    }\n}\n\n// Function to print the linked list\nfunction printLL(head) {\n    while (head !== null) {\n        console.log(head.data + \" \");\n        head = head.next;\n    }\n}\n\n// Function to insert a new node at the head of the linked list\nfunction insertHead(head, val) {\n    const temp = new Node(val, head);\n    return temp;\n}\n\n// Sample array and value for insertion\nconst arr = [12, 8, 5, 7];\nconst val = 100;\n\n// Creating a linked list with initial elements from the array\nlet head = new Node(arr[0]);\nhead.next = new Node(arr[1]);\nhead.next.next = new Node(arr[2]);\nhead.next.next.next = new Node(arr[3]);\n\n// Inserting a new node at the head of the linked list\nhead = insertHead(head, val);\n\n// Printing the linked list\nprintLL(head);\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>100 12 8 5 7</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity</strong>: <strong>O(1) </strong>for inserting the new head of the linked list and <strong>O(N)</strong> for printing the linked list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity</strong>: <strong>O(1)</strong>, as we have not used any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In case you are learning DSA, you should definitely check out our free\u00a0<a href=\"https://takeuforward.org/strivers-a2z-dsa-course/strivers-a2z-dsa-course-sheet-2/\">A2Z DSA Course</a>\u00a0with videos and blogs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to\u00a0</em><strong><a href=\"https://www.linkedin.com/in/neerav-sethi-0b6047103\" target=\"_blank\" rel=\"noreferrer noopener\">Neerav Sethi</a></strong><em>\u00a0for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->"
}