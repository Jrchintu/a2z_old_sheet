{
    "dislikes": 0,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:12:12 GMT+0530 (India Standard Time)",
    "slug": "search-an-element-in-a-linked-list",
    "aid": "2281",
    "title": "Search an element in a Linked List",
    "tuf_plus": "",
    "topics": [
        {
            "topic-id": "data-structure",
            "topic-title": "Data Structures"
        },
        {
            "topic-id": "linked-list",
            "topic-title": "Linked List"
        }
    ],
    "content": "<!-- wp:paragraph -->\n<p><strong>Problem Statement</strong>: Given the head of a linked list and an integer value, find out whether the integer is present in the linked list or not. Return true if it is present, or else return false.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<!-- This is Examples Drop-Down -->\n<div id=\"article_examples\">\n<details class=\"article_example_details\">\n<summary class=\"article_example_summary\">\n<span><strong>\nExamples\n</strong>\n</span>\n<svg class=\"arrow-svg opacity-75\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n<path d=\"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z\"></path>\n</svg>\n</summary>\n<div class=\"atricle_example_content\">\n<pre class=\"wp-block-preformatted\"><!-- Insert New Examples Here -->\n<p><strong>Example 1:</strong></p>\n<p><strong>Input Format:</strong> 0-&gt;1-&gt;2, val = 2</p>\n<p><strong>Result</strong> True</p>\n<p><strong>Explanation:</strong> Since element 2 is present in the list, it will return true.</p>\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/10/Searchll1.jpg\" alt=\"\" class=\"wp-image-12874\"></figure>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input Format:</strong> 12-&gt;5-&gt;8-&gt;7, val = 6&nbsp;</p>\n<p><strong>Result</strong> False</p>\n<p><strong>Explanation: </strong>The list does not contain element 6. Therefore, it returns false.</p>\n</pre>\n</div>\n</details>\n</div>\n<!-- /wp:html -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Solution</strong>:</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph {\"textColor\":\"accent\"} -->\n<p class=\"has-accent-color has-text-color\"><strong><em>Disclaimer</em></strong>: <em>Don't jump directly to the solution, try it out yourself first.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Approach</strong>: </h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>To check if an element is present in the linked list, traverse the list and at every node, check whether the data matches the specified value val. If a <strong>match is found, return true</strong>; otherwise, after traversing the entire list, <strong>return false</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Algorithm:</strong> </h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><li>To check if an element is present in the linked list, start with a <strong>temp pointer </strong>pointing to the head. This pointer will be used to<strong> traverse</strong> the list, ensuring that the reference to the starting point is not lost. During the traversal, check if the <strong>data</strong> on the current node matches the specified value val. If <strong>no match</strong> is found, <strong>move</strong> to the next node using the next pointer of the current node.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":12875,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/10/SearchLL2.jpg\" alt=\"\" class=\"wp-image-12875\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>At any moment, the data of the node <strong>matches</strong> with the val, stop, and return<strong> 1.</strong></li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":12876,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/10/Searchll3.jpg\" alt=\"\" class=\"wp-image-12876\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li>If, during traversal, the temp reaches the end, it means that it has reached the last point, which is NULL, hence, returns false at the end.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    <button class=\"code-tab\" data-lang=\"python\">Python</button>\n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">// Node class represents a node in a linked list\nclass Node {\npublic:\n    int data;        // Data stored in the node\n    Node* next;      // Pointer to the next node in the      list\n\n    // Constructor with both data and next node as parameters\n    Node(int data1, Node* next1) {\n        data = data1;\n        next = next1;\n    }\n\n    // Constructor with only data as a parameter, sets next to nullptr\n    Node(int data1) {\n        data = data1;\n        next = nullptr;\n    }\n};\n\n// Function to check if a given element is present in the linked list\nint checkifPresent(Node* head, int desiredElement) {\n    Node* temp = head;\n\n    // Traverse the linked list\n    while (temp != nullptr) {\n        // Check if the current node's data is equal to the desired element\n        if (temp->data == desiredElement)\n            return 1;  // Return 1 if the element is found\n\n        // Move to the next node\n        temp = temp->next;\n    }\n\n    return 0;  // Return 0 if the element is not found in the linked list\n}\n\n// Main function\nint main() {\n    // Create a linked list: 1 -> 2 -> 3\n    Node* head = new Node(1);\n    head->next = new Node(2);\n    head->next->next = new Node(3);\n\n    int val = 5;  // Element to be checked for presence in the linked list\n\n    // Call the checkifPresent function and print the result\n    cout &lt;&lt; checkifPresent(head, val) &lt;&lt; '\\n';\n\n    return 0;  // Return 0 to indicate successful execution\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> True</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong> <strong>O(N)</strong> in the <strong>worst</strong> case if the element is not found. O(1) in the <strong>best</strong> case if the element is the first element.\u00a0</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong> as we did not use any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">// Node class represents a node in a linked list\nclass Node {\n    int data;      // Data stored in the node\n    Node next;     // Reference to the next node in the list\n\n    // Constructor with both data and next node as parameters\n    Node(int data1, Node next1) {\n        this.data = data1;\n        this.next = next1;\n    }\n\n    // Constructor with only data as a parameter, sets next to null\n    Node(int data1) {\n        this.data = data1;\n        this.next = null;\n    }\n}\n\n// LinkedList class contains utility methods for linked list operations\npublic class LinkedList {\n\n    // Function to check if a given element is present in the linked list\n    public static int checkifPresent(Node head, int desiredElement) {\n        Node temp = head;\n\n        // Traverse the linked list\n        while (temp != null) {\n            // Check if the current node's data is equal to the desired element\n            if (temp.data == desiredElement)\n                return 1;  // Return 1 if the element is found\n\n            // Move to the next node\n            temp = temp.next;\n        }\n\n        return 0;  // Return 0 if the element is not found in the linked list\n    }\n\n    // Main function\n    public static void main(String[] args) {\n        // Create a linked list: 1 -> 2 -> 3\n        int[] arr = {1, 2, 3};\n        Node head = new Node(arr[0]);\n        head.next = new Node(arr[1]);\n        head.next.next = new Node(arr[2]);\n\n        int val = 3;  // Element to be checked for presence in the linked list\n\n        // Call the checkifPresent function and print the result\n        System.out.print(checkifPresent(head, val));\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> True</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong> <strong>O(N)</strong> in the <strong>worst</strong> case if the element is not found. O(1) in the <strong>best</strong> case if the element is the first element.&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong> as we did not use any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block\" data-lang=\"python\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"python\" class=\"language-python\">class Node:\n    def __init__(self, data1, next1=None):\n        self.data = data1\n        self.next = next1\n\n# Function to check if a given element is present in the linked list\ndef check_if_present(head, desired_element):\n    temp = head\n\n    # Traverse the linked list\n    while temp is not None:\n        # Check if the current node's data is equal to the desired element\n        if temp.data == desired_element:\n            return 1  # Return 1 if the element is found\n\n        # Move to the next node\n        temp = temp.next\n\n    return 0  # Return 0 if the element is not found in the linked list\n\n# Main function\nif __name__ == \"__main__\":\n    # Create a linked list: 1 -> 2 -> 3\n    arr = [1, 2, 3]\n    head = Node(arr[0])\n    head.next = Node(arr[1])\n    head.next.next = Node(arr[2])\n\n    val = 3  # Element to be checked for presence in the linked list\n\n    # Call the check_if_present function and print the result\n    print(check_if_present(head, val))\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> True</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong> <strong>O(N)</strong> in the <strong>worst</strong> case if the element is not found. O(1) in the <strong>best</strong> case if the element is the first element.&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong> as we did not use any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>[tabby title=\"JavaScript Code\"]</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"javascript\" class=\"language-javascript\">class Node {\n    constructor(data1, next1 = null) {\n        this.data = data1;\n        this.next = next1;\n    }\n}\n\n// Function to check if a given element is present in the linked list\nfunction checkIfPresent(head, desiredElement) {\n    let temp = head;\n\n    // Traverse the linked list\n    while (temp !== null) {\n        // Check if the current node's data is equal to the desired element\n        if (temp.data === desiredElement) {\n            return 1; // Return 1 if the element is found\n        }\n\n        // Move to the next node\n        temp = temp.next;\n    }\n\n    return 0; // Return 0 if the element is not found in the linked list\n}\n\n// Main function\nfunction main() {\n    // Create a linked list: 1 -> 2 -> 3\n    const arr = [1, 2, 3];\n    const head = new Node(arr[0]);\n    head.next = new Node(arr[1]);\n    head.next.next = new Node(arr[2]);\n\n    const val = 3; // Element to be checked for presence in the linked list\n\n    // Call the checkIfPresent function and print the result\n    console.log(checkIfPresent(head, val));\n}\n\n// Execute the main function\nmain();\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> True</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Time Complexity:</strong> <strong>O(N)</strong> in the <strong>worst</strong> case if the element is not found. O(1) in the <strong>best</strong> case if the element is the first element.&nbsp;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Space Complexity: O(1)</strong> as we did not use any extra space.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In case you are learning DSA, you should definitely check out our free\u00a0<a href=\"https://takeuforward.org/strivers-a2z-dsa-course/strivers-a2z-dsa-course-sheet-2/\">A2Z DSA Course</a>\u00a0with videos and blogs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to\u00a0</em><strong><a href=\"https://www.linkedin.com/in/neerav-sethi-0b6047103\" target=\"_blank\" rel=\"noreferrer noopener\">Neerav Sethi</a></strong><em>\u00a0for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,\u00a0</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->",
    "category_tag": "linked-list",
    "likes": 62,
    "preview": "Problem Statement: Given the head of a linked list and an integer value, find out whether the integer is present in the linked list or not. Return true if it is present, or else return false. Examp..."
}