{
    "dislikes": 11,
    "video": "ctCpP0RFDFc",
    "publishedOn": "Sun Mar 24 2024 22:12:02 GMT+0530 (India Standard Time)",
    "slug": "binary-tree-representation-in-c",
    "aid": "2230",
    "tuf_plus": "",
    "title": "Binary Tree Representation in C++",
    "topics": [
        {
            "topic-id": "binary-tree",
            "topic-title": "Binary Tree"
        },
        {
            "topic-id": "c",
            "topic-title": "C++"
        }
    ],
    "category_tag": "binary-tree",
    "likes": 168,
    "preview": "In C++, a binary tree is represented using pointers, forming a hierarchical structure where each node can point to two further nodes: a left child and a right child. This representation uses pointe...",
    "content": "<p>In C++, a binary tree is represented using pointers, forming a hierarchical structure where each node can point to\n    two further nodes: a left child and a right child.</p>\n\n<p>This representation uses pointers to establish connected between nodes in the tree, allowing traversal and navigation\n    throughout the structure.</p>\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%205.50.42%20PM-bFh4meWZ\" alt=\"\"\n        class=\"wp-image-12743\" width=\"602\" height=\"196\"></figure>\n<h3><strong>Node Structure:</strong></h3>\n\n<p>A binary tree node is represented using a struct or class that contains the following components:</p>\n\n<ol>\n    <li>Data Component: This holds the value of the node, which could be of any data type (e.g., integer, string,\n        object). </li>\n    <li>Pointers to Children: Two pointers, left and right, pointing to the left and right child nodes, respectively.\n        These pointers store the memory addresses of the child nodes, allowing navigation and access to further nodes in\n        the tree.</li>\n</ol>\n\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%205.38.33%20PM-8Aujvi0x\" alt=\"\"\n        class=\"wp-image-12743\" width=\"602\" height=\"196\"></figure>\n<h3><strong>Node Constructor:</strong></h3>\n\n<p>The constructor function is named Node, which is the same as the structure name. It takes an integer val as a\n    parameter, which represents the value to be stored in the node.</p>\n\n<p>Within the constructor:</p>\n<ol>\n    <li><strong>data = val;</strong> : Assigns the value passed as a parameter (val) to the data member of the node.\n        This sets the value of the node to the input integer.</li>\n    <li><strong>left = right = NULL;</strong> : Initializes both the left and right pointers to NULL. This is done to\n        ensure that initially, the node does not have any left or right children. Setting pointers to NULL indicates\n        that there are no connections to other nodes at the time of node creation.</li>\n</ol>\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%205.56.55%20PM-4gvUnL61\" alt=\"\"\n        class=\"wp-image-12743\" width=\"602\" height=\"196\"></figure>\n<h3><strong>Node Connection:</strong></h3>\n\n<p>When constructing a binary tree using pointers, each node stores references (memory addresses) to its left and right\n    children. These references form the connections between nodes, enabling the hierarchical structure.</p>\n<ol>\n    <li>When creating a new node, memory is allocated, and the node's data is stored.</li>\n    <li>Pointers left and right are initialised as nullptr (in C++) or NULL to signify that the node currently has no\n        children.</li>\n    <li>Later, nodes are connected by assigning the left and right pointers of a parent node to the memory addresses of\n        its respective left and right child nodes.</li>\n</ol>\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%206.29.40%20PM-vI6I2bJk\" alt=\"\"\n        class=\"wp-image-12743\" width=\"602\" height=\"196\"></figure>\n<div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n        <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">CPP</button>\n        <div class=\"copy-btn\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                <rect width=\"8\" height=\"4\" x=\"8\" y=\"2\" rx=\"1\" ry=\"1\" />\n                <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\" />\n            </svg></div>\n    </div>\n    <div class=\"code-content\">\n        <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n            <pre\n                class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">\n#include &lt;iostream&gt;\n\n// Structure definition for\n// a node in a binary tree\nstruct Node {\n    // Defining the value of\n    // the node (integer data)\n    int data;        \n     // Reference pointer to\n     // the left child node\n    Node* left;      \n    // Reference pointer to\n    // the right child node\n    Node* right;      \n\n    // Method to initialize\n    // the node with a value\n    Node(int val) {\n        // Set the value of the\n        // node to the passed integer\n        data = val;   \n        // Initialize left and \n        //r ight pointers as NULL\n        left = right = NULL;  \n    }\n};\n\nint main() {\n    // Creating a new node for the root of the \n    // binary tree using dynamic allocation\n    Node* root = new Node(1);\n    // Creating left and right child\n    // nodes for the root node\n    root-&gt;left = new Node(2);\n    root-&gt;right = new Node(3);\n    // Creating a right child node for\n    // the left child node of the root\n    root-&gt;left-&gt;right = new Node(5);\n}\n\n                </code></pre>\n        </div>\n    </div>\n</div>\n\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%206.37.26%20PM-YmDylwMS\" alt=\"\"\n        class=\"wp-image-12743\" width=\"302\" height=\"96\"></figure>\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Special thanks to <strong><a href=\"https://www.linkedin.com/in/gauri-tomar-005048268\">Gauri Tomar</a></strong> for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,<strong><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\"> please check out this article</a></strong></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:embed {\"url\":\"https://www.youtube.com/watch?v=ctCpP0RFDFc\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"responsive\":true,\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} -->\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\nhttps://www.youtube.com/watch?v=ctCpP0RFDFc\n</div></figure>\n<!-- /wp:embed -->"
}