{
    "dislikes": 8,
    "video": "hyLyW7rP24I",
    "publishedOn": "Sun Mar 24 2024 22:12:02 GMT+0530 (India Standard Time)",
    "slug": "binary-tree-representation-in-java",
    "aid": "2231",
    "tuf_plus": "",
    "title": "Binary Tree Representation in Java",
    "topics": [
        {
            "topic-id": "binary-tree",
            "topic-title": "Binary Tree"
        },
        {
            "topic-id": "java",
            "topic-title": "Java"
        }
    ],
    "category_tag": "binary-tree",
    "likes": 70,
    "preview": "In Java, a binary tree is structured using references to other nodes, forming a hierarchical arrangement where each node can refer to at most two other nodes: a left child and a right child. This r...",
    "content": "<p>In Java, a binary tree is structured using references to other nodes, forming a hierarchical arrangement where each node can refer to at most two other nodes: a left child and a right child.</p>\n\n<p>This reference-based approach establishes connections between nodes, enabling traversal and navigation within the tree structure.</p>\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%206.44.27%20PM-MaRm5yIj\" alt=\"\"\n        class=\"wp-image-12743\" width=\"602\" height=\"196\"></figure>\n<h3><strong>Node Structure:</strong></h3>\n\n<p>In Java, a Binary Tree node is represented using a class that encapsulates the attributes of a node:</p>\n\n<ol>\n    <li><strong>Data Component:</strong> This holds the value of the node, which could be of any data type (e.g., integer, string,\n        object). </li>\n    <li><strong>Pointers to Children:</strong> Two reference variables ie. \u2018left\u2019 and \u2018right\u2019 point to the left and right child nodes respectively. These references store the memory addresses of child nodes, allowing traversal and access to further nodes in the tree structure.</li>\n</ol>\n\n<p>In Java, references to objects act similarly to pointers in C++, allowing nodes to refer to other nodes without direct memory manipulation.</p>\n\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%207.13.57%20PM-_Wav5qXO\" alt=\"\"\n        class=\"wp-image-12743\" width=\"602\" height=\"196\"></figure>\n<h3><strong>Node Constructor:</strong></h3>\n\n<p>In Java, the constructor of the Node class initialises a node with a specific value and sets its left and right references to null to signify that it doesn't have any children initially.</p>\n\n<p>Within the constructor:</p>\n<ol>\n    <li><strong>data = val;</strong> :Sets the data of the node to the provided value (val). This assigns the input integer to the node's data.</li>\n    <li><strong>left = right = NULL;</strong> :  Initialises both left and right references as null. This initialization ensures that when a node is created, it does not have any immediate connections to other nodes, indicating the absence of left and right children.</li>\n</ol>\n\n<h3><strong>Node Connection:</strong></h3>\n\n<p>Java utilises references between nodes allowing them to refer to other nodes. When creating a new node, memory is allocated for the node object, and the node\u2019s data is stored within it.</p>\n<p>References (`left` and `right`) are initialised as `null` to indicate that the node doesn\u2019t currently have any children, The nodes are connected by assigning references of a parent node to its respective left and right child nodes.</p>\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%207.21.32%20PM-UQrSmcmt\" alt=\"\"\n        class=\"wp-image-12743\" width=\"602\" height=\"196\"></figure>\n<div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n        <button class=\"code-tab dsa_article_code_active\" data-lang=\"java\">Java</button>\n        <div class=\"copy-btn\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n                fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                <rect width=\"8\" height=\"4\" x=\"8\" y=\"2\" rx=\"1\" ry=\"1\" />\n                <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\" />\n            </svg></div>\n    </div>\n    <div class=\"code-content\">\n        <div class=\"code-block dsa_article_code_active\" data-lang=\"java\">\n            <pre\n                class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">\nclass Node {\n    // Stores the value\n    // of the node\n    int data;       \n    // Reference to the\n    // left child node\n    Node left; \n    // Reference to the\n    // right child node\n    Node right;\n\n    // Constructor to initialize\n    // a node with a given key\n    public Node(int key) {\n        // Assigns the provided key to\n        // the data field of the node\n        data = key;     \n        // Initializes left child \n        // reference as null\n        left = null;    \n        // Initializes right child\n        // reference as null\n        right = null;   \n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n            // Creates the root node\n            // with a key value of 1\n        Node root = new Node(1);       \n        // Creates a left child node for\n        // the root with a key value of 2\n        root.left = new Node(2);       \n            // Creates a right child node for\n            // the root with a key value of 3\n        root.right = new Node(3);      \n            // Creates a left child node for the right \n            // child of the root with a key value of 5\n        root.right.left = new Node(5); \n    }\n}\n\n                </code></pre>\n        </div>\n    </div>\n</div>\n\n<figure class=\"wp-block-image size-full is-resized\"><img\n        src=\"https://static.takeuforward.org/content/Screenshot%202024-01-07%20at%206.37.26%20PM-T4MMaLof\" alt=\"\"\n        class=\"wp-image-12743\" width=\"302\" height=\"96\"></figure>\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Special thanks to <strong><a href=\"https://www.linkedin.com/in/gauri-tomar-005048268\">Gauri Tomar</a></strong> for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,<strong><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\"> please check out this article</a></strong></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:embed {\"url\":\"https://www.youtube.com/watch?v=hyLyW7rP24I\\u0026list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk\\u0026index=4\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"responsive\":true,\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} -->\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\nhttps://www.youtube.com/watch?v=hyLyW7rP24I&amp;list=PLgUwDviBIf0q8Hkd7bK2Bpryj2xVJk8Vk&amp;index=4\n</div></figure>\n<!-- /wp:embed -->"
}