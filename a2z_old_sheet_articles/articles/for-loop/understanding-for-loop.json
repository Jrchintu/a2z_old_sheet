{
    "dislikes": 3,
    "video": "",
    "publishedOn": "Sun Mar 24 2024 22:12:09 GMT+0530 (India Standard Time)",
    "slug": "understanding-for-loop",
    "aid": "2264",
    "tuf_plus": "",
    "title": "Understanding For Loop",
    "topics": [
        {
            "topic-id": "basics",
            "topic-title": "Introduction to DSA"
        }
    ],
    "category_tag": "for-loop",
    "likes": 252,
    "preview": "In case you are learning DSA, you should definitely check out our free A2Z DSA Course with videos and blogs. What is a For Loop and Why is it Used? A for loop is a control structure in programming...",
    "content": "<!-- wp:paragraph -->\n<p>In case you are learning DSA, you should definitely check out our free\u00a0<a href=\"https://takeuforward.org/strivers-a2z-dsa-course/strivers-a2z-dsa-course-sheet-2/\">A2Z DSA Course</a>\u00a0with videos and blogs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>What is a For Loop and Why is it Used?</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A for loop is a<strong> control structure</strong> in programming that allows you to <strong>execute a specific block of code repeatedly</strong>. It's especially useful when you want to <strong>perform the same task multiple times without duplicating your code</strong>. Let's break down the essential components of a for loop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li><strong>Initialization</strong>: You declare and initialize a variable that serves as a counter. This step only happens once at the beginning.</li><li><strong>Condition</strong>: You specify a condition that determines when the loop should stop executing.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Increment/Decrement: </strong>You define how the counter variable changes after each iteration.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12589,\"width\":488,\"height\":120,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-full is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/for-loop1.png\" alt=\"\" class=\"wp-image-12589\" width=\"488\" height=\"120\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    for (int i = 1; i &lt;= 10; i++) {\n        cout &lt;&lt; \"Hey, Striver, this is the \" &lt;&lt; i &lt;&lt; \"'th iteration\" &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Hey, Striver, this is the 1'th iteration<br>Hey, Striver, this is the 2'th iteration<br>Hey, Striver, this is the 3'th iteration<br>Hey, Striver, this is the 4'th iteration<br>Hey, Striver, this is the 5'th iteration<br>Hey, Striver, this is the 6'th iteration<br>Hey, Striver, this is the 7'th iteration<br>Hey, Striver, this is the 8'th iteration<br>Hey, Striver, this is the 9'th iteration<br>Hey, Striver, this is the 10'th iteration</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\"></code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong> </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Hey, Striver, this is the 1'th iteration<br>Hey, Striver, this is the 2'th iteration<br>Hey, Striver, this is the 3'th iteration<br>Hey, Striver, this is the 4'th iteration<br>Hey, Striver, this is the 5'th iteration<br>Hey, Striver, this is the 6'th iteration<br>Hey, Striver, this is the 7'th iteration<br>Hey, Striver, this is the 8'th iteration<br>Hey, Striver, this is the 9'th iteration<br>Hey, Striver, this is the 10'th iteration</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In this example, the loop will run ten times because it starts with i equal to 1, and the condition is met until i becomes 11 then the loop breaks. The variable i is incremented by 1 in each iteration.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12590,\"width\":512,\"height\":350,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/for-loop2-1024x699.png\" alt=\"\" class=\"wp-image-12590\" width=\"512\" height=\"350\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":12591,\"width\":512,\"height\":387,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/forloop-chart-1024x774.png\" alt=\"\" class=\"wp-image-12591\" width=\"512\" height=\"387\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li><strong>Start</strong>: The process begins at the \"start\" point, indicating the beginning of the loop.</li><li><strong>Initialize counter: </strong>&nbsp;In this step, the loop control variable is initialised. This typically involves assigning an initial value to the counter. Usually denoted by the variable \u2018i\u2019</li><li><strong>Condition check:</strong> The condition for the loop is checked in this stage. If the condition is evaluated as \"true,\" the loop continues to execute; otherwise, it terminates.</li><li>If the<strong> condition is \"true,\"</strong> the loop proceeds to execute the loop body and increment/decrement the counter. </li><li>After completing an <strong>iteration</strong>, the process returns to the \"Condition check\" step to re-evaluate the condition.</li><li>After executing the loop body, the <strong>counter</strong> is incremented or decremented. This step is crucial for<strong> controlling the loop's termination.</strong></li><li>The loop continues to execute as long as the<strong> condition remains \"true.\"</strong> Once the condition becomes \"false,\" the loop exits.</li><li>After <strong>exit from the loop</strong>, the code below the for-loop is executed and the program moves on.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Nested For Loops</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Just like for loops, you can nest one for loop inside another. This concept becomes incredibly useful when you're working with <strong>multi-dimensional data structures</strong> like a 2-D Array or need to solve complex problems involving <strong>multiple iterations</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12592,\"width\":512,\"height\":270,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/multidimensional-1024x540.png\" alt=\"\" class=\"wp-image-12592\" width=\"512\" height=\"270\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    for (int i = 0; i &lt; 3; i++) {\n        for (int j = 0; j &lt; 3; j++) {\n            cout &lt;&lt; \"i = \" &lt;&lt; i &lt;&lt; \", j = \" &lt;&lt; j &lt;&lt; endl;\n            // Nested loop code\n        }\n    }\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>i = 0, j = 0<br>i = 0, j = 1<br>i = 0, j = 2<br>i = 1, j = 0<br>i = 1, j = 1<br>i = 1, j = 2<br>i = 2, j = 0<br>i = 2, j = 1<br>i = 2, j = 2</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"\">public class Main {\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 3; i++) {\n            for (int j = 0; j &lt; 3; j++) {\n                System.out.println(\"i = \" + i + \", j = \" + j);\n                // Nested loop code\n            }\n        }\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>i = 0, j = 0<br>i = 0, j = 1<br>i = 0, j = 2<br>i = 1, j = 0<br>i = 1, j = 1<br>i = 1, j = 2<br>i = 2, j = 0<br>i = 2, j = 1<br>i = 2, j = 2</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Conditionals Inside For Loops</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For loops are versatile; you can include <strong>conditional statements</strong> (if, else if, else) within them. This allows you to execute <strong>different code blocks based on certain conditions</strong> during each iteration.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">for (int i = 1; i &lt;= 10; i++) {\n    if (i % 2 == 0) {\n        // Code for even numbers\n    } else {\n        // Code for odd numbers\n    }\n}\n</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p><strong>Customising For Loops</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You have flexibility in how you structure your for loop. For instance, you can customise the <strong>increment step to achieve specific patterns</strong> or<strong> iterate a certain number of times</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Code:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    <div class=\"code-section secondary-details\">\n    <div class=\"code-tabs\">\n    <button class=\"code-tab dsa_article_code_active\" data-lang=\"cpp\">C++</button>\n    <button class=\"code-tab\" data-lang=\"java\">Java</button>\n    \n    \n    <svg width=\"17\" class=\"copy-btn\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 20C1.45 20 0.979002 19.804 0.587002 19.412C0.195002 19.02 -0.000664969 18.5493 1.69779e-06 18V4H2V18H13V20H2ZM6 16C5.45 16 4.979 15.804 4.587 15.412C4.195 15.02 3.99934 14.5493 4 14V2C4 1.45 4.196 0.979002 4.588 0.587002C4.98 0.195002 5.45067 -0.000664969 6 1.69779e-06H15C15.55 1.69779e-06 16.021 0.196002 16.413 0.588002C16.805 0.980002 17.0007 1.45067 17 2V14C17 14.55 16.804 15.021 16.412 15.413C16.02 15.805 15.5493 16.0007 15 16H6ZM6 14H15V2H6V14Z\">\n    </path>\n    </svg>\n    </div>\n    <div class=\"code-content\">\n    <div class=\"code-block dsa_article_code_active\" data-lang=\"cpp\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"cpp\" class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    for (int i = 1; i &lt;= 25; i += 5) {\n        cout &lt;&lt; \"i = \" &lt;&lt; i &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>i = 1<br>i = 6<br>i = 11<br>i = 16<br>i = 21</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    <div class=\"code-block \" data-lang=\"java\">\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Main {\n    public static void main(String[] args) {\n        for (int i = 1; i &lt;= 25; i += 5) {\n            System.out.println(\"i = \" + i);\n        }\n    }\n}\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Output:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>i = 1<br>i = 6<br>i = 11<br>i = 16<br>i = 21</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n\n    </div>\n    </div>\n    </div>\n    \n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In this example, i starts at 1 and increases by 5 in each iteration, resulting in five iterations.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":12593,\"width\":512,\"height\":367,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://static.takeuforward.org/wp/uploads/2023/09/5incloop-1024x733.png\" alt=\"\" class=\"wp-image-12593\" width=\"512\" height=\"367\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Special thanks to&nbsp;</em><strong><a href=\"https://www.linkedin.com/in/priyanshi-goel-7b6a42210/\">Gauri Tomar</a></strong><em>&nbsp;for contributing to this article on takeUforward. If you also wish to share your knowledge with the takeUforward fam,&nbsp;</em><a href=\"https://takeuforward.org/interviews/paid-work-from-home-internship-at-takeuforward/\">please check out this article</a></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:embed {\"url\":\"https://youtu.be/EAR7De6Goz4?si=a_S9jA0e_WJbYGKA\\u0026t=3091\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"responsive\":true,\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} -->\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\nhttps://youtu.be/EAR7De6Goz4?si=a_S9jA0e_WJbYGKA&amp;t=3091\n</div></figure>\n<!-- /wp:embed -->"
}